namespace = racial_pop_events_dwarven

#Demand Representation
country_event = {
	id = racial_pop_events_dwarven.1
	title = racial_pop_events_dwarven.1.t
	desc = racial_pop_events_dwarven.1.d
	picture = DEBATE_REPUBLICAN_eventPicture
	
	trigger = {
		any_owned_province = {
			NOT = { local_autonomy = 50 }
			is_capital = no
			has_dwarven_minority_trigger = yes
		}
	}
	
	is_triggered_only = yes
	
	mean_time_to_happen = {
		days = 1
	}
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_dwarven_minority_trigger = yes
					is_capital = no
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					NOT = { local_autonomy = 50 }
					is_capital = no
					has_dwarven_minority_trigger = yes
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					NOT = { local_autonomy = 50 }
					is_capital = no
					has_dwarven_minority_trigger = yes
					development = 10
				}
				save_event_target_as = racial_pop_province_target
			}
		}
	}
	
	option = {		#Granted!
		name = racial_pop_events_dwarven.1.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ai_lower_than_wanted_tolerance_dwarven = yes
			}
		}
		
		add_adm_power = -40
		
		medium_increase_of_dwarven_tolerance_effect = yes
		
		event_target:racial_pop_province_target = {
			add_local_autonomy = 25
		}
	}
	
	option = {		#Make some concessions
		name = racial_pop_events_dwarven.1.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ai_equal_to_wanted_tolerance_dwarven = yes
			}
			modifier = {
				factor = 0.5
				average_autonomy = 10
			}
		}
		
		add_adm_power = -20
		
		event_target:racial_pop_province_target = {
			add_local_autonomy = 10
		}

	}
	
	option = {		#No. Haven't we given them enough?!
		name = racial_pop_events_dwarven.1.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ai_higher_than_wanted_tolerance_dwarven = yes
			}
		}
		
		medium_decrease_of_dwarven_tolerance_effect = yes
		
	}
	
	option = {		#Special: Make empty promises
		name = racial_pop_events_dwarven.1.e
		trigger = { ruler_has_personality = charismatic_negotiator_personality }
		highlight = yes
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.25
				ai_higher_to_wanted_tolerance_dwarven = yes
			}
			modifier = {
				factor = 1.5
				average_autonomy = 10
			}
		}
		
		add_dip_power = -10
		
		small_increase_of_dwarven_tolerance_effect = yes
		
		event_target:racial_pop_province_target = {
			add_local_autonomy = 1
		}
		
	}
}


#Tolerance Increase
country_event = {
	id = racial_pop_events_dwarven.2
	title = racial_pop_events_dwarven.2.t
	desc = racial_pop_events_dwarven.2.d
	picture = GOOD_WITH_MONARCH_eventPicture
	
	trigger = {
		any_owned_province = {
			has_dwarven_minority_trigger = yes
		}
		
		OR = {
			stability = 1
			in_golden_age = yes
			ruler_has_personality = tolerant_personality
			ruler_has_personality = kind_hearted_personality
			ruler_has_personality = benevolent_personality
			has_idea_group = humanist_ideas
		}
	}
	
	is_triggered_only = yes
	
	mean_time_to_happen = {
		days = 1
	}
	immediate = {
		hidden_effect = {
		
			random_list = {
				75 = {
					set_country_flag = racial_pop_small_increase
				}
				25 = {
					set_country_flag = racial_pop_medium_increase
				}
			}
		}
	}
	
	option = {		#Good for them
		name = racial_pop_events_dwarven.2.a
		ai_chance = {
			factor = 50
		}
		
		trigger_switch = {
			on_trigger = has_country_flag
			racial_pop_small_increase = { small_increase_of_dwarven_tolerance_effect = yes }
			racial_pop_medium_increase = { medium_increase_of_dwarven_tolerance_effect = yes }
		}
		
		clear_racial_pop_tolerance_chance_flags = yes
		
	}
	
}


#Tolerance Decrease
country_event = {
	id = racial_pop_events_dwarven.3
	title = racial_pop_events_dwarven.3.t
	desc = racial_pop_events_dwarven.3.d
	picture = BAD_WITH_MONARCH_eventPicture
	
	trigger = {
		any_owned_province = {
			has_dwarven_minority_trigger = yes
		}
		
		OR = {
			stability = -3
			NOT = { stability = 0 }
			is_bankrupt = yes
			inflation = 25
			is_at_war = yes
			NOT = { war_score = 20 }
			war_exhaustion = 10
			ruler_has_personality = cruel_personality
			ruler_has_personality = malevolent_personality
			ruler_has_personality = conqueror_personality
		}
	}
	
	is_triggered_only = yes
	
	mean_time_to_happen = {
		days = 1
	}
	immediate = {
		hidden_effect = {
		
			random_list = {
				75 = {
					set_country_flag = racial_pop_small_decrease
				}
				25 = {
					set_country_flag = racial_pop_medium_decrease
				}
			}
		}
	}
	
	option = {		#That's unfortunate
		name = racial_pop_events_dwarven.3.a
		ai_chance = {
			factor = 50
		}
		
		trigger_switch = {
			on_trigger = has_country_flag
			racial_pop_small_decrease = { small_decrease_of_dwarven_tolerance_effect = yes }
			racial_pop_medium_decrease = { medium_decrease_of_dwarven_tolerance_effect = yes }
		}
		
		clear_racial_pop_tolerance_chance_flags = yes
		
	}
	
}


#Independent Pop Grow - small to large
country_event = {
	id = racial_pop_events_dwarven.4
	title = racial_pop_events_dwarven.4.t
	desc = racial_pop_events_dwarven.4.d
	picture = STREET_SPEECH_eventPicture
	
	trigger = {
		any_owned_province = {
			has_small_dwarven_minority_trigger = yes
			OR = {
				is_prosperous = yes
				development = 20
			}
		}

	}
	
	is_triggered_only = yes
	
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_small_dwarven_minority_trigger = yes
					development = 20
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					has_small_dwarven_minority_trigger = yes
					is_capital = yes
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					has_small_dwarven_minority_trigger = yes
					development = 20
				}
				save_event_target_as = racial_pop_province_target
			}
		}
	}
	
	option = {		#The more the merrier?
		name = racial_pop_events_dwarven.4.a
		ai_chance = {
			factor = 50
		}
	
		event_target:racial_pop_province_target = {
			add_dwarven_minority_size_effect = yes
		}
	}
	
}

#Independent Pop Decrease - large/small decrease
country_event = {
	id = racial_pop_events_dwarven.5
	title = racial_pop_events_dwarven.5.t
	desc = racial_pop_events_dwarven.5.d
	picture = WOUNDED_SOLDIERS_eventPicture
	
	trigger = {
		OR = {
			any_owned_province = {
				has_dwarven_minority_trigger = yes
				OR = {
					devastation = 50
					unrest = 15
				}
			}
			any_owned_province = {
				has_oppressed_dwarven_minority_trigger = yes
			}
		}
	}
	
	is_triggered_only = yes
	
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_dwarven_minority_trigger = yes
				}
				save_event_target_as = racial_pop_province_target
			}
		}
	}
	
	option = {		#Large minority decreases to small
		name = racial_pop_events_dwarven.5.a
		trigger = {
			event_target:racial_pop_province_target = {
				has_large_dwarven_minority_trigger = yes
			}
		}
		ai_chance = {
			factor = 50
		}
	
		event_target:racial_pop_province_target = {
			remove_dwarven_minority_size_effect = yes
		}
	}
	
	option = {		#Small minority is removed (becomes insignificant)
		name = racial_pop_events_dwarven.5.b
		trigger = {
			event_target:racial_pop_province_target = {
				has_small_dwarven_minority_trigger = yes
			}
		}
		ai_chance = {
			factor = 50
		}
	
		event_target:racial_pop_province_target = {
			remove_dwarven_minority_size_effect = yes
		}
	}
}



#Pop Migrates - Within Country
country_event = {
	id = racial_pop_events_dwarven.6
	title = racial_pop_events_dwarven.6.t
	desc = racial_pop_events_dwarven.6.d
	picture = COLONIZATION_eventPicture
	
	trigger = {
		num_of_cities = 2	#you have something to migrate to
		OR = {
			any_owned_province = {
				has_dwarven_minority_trigger = yes
				devastation = 33
			}
			any_owned_province = {
				has_dwarven_minority_trigger = yes
				unrest = 10
			}
			any_owned_province = {
				has_dwarven_minority_trigger = yes
				NOT = { development = 10 }
			}
		}

	}
	
	is_triggered_only = yes
	
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		hidden_effect = {
			#Origin Province Setter
			random_owned_province = {
				limit = {
					has_dwarven_minority_trigger = yes
					NOT = { development = 10 }
				}
				save_event_target_as = racial_pop_province_origin
			}
			random_owned_province = {
				limit = {
					has_dwarven_minority_trigger = yes
					unrest = 10 
				}
				save_event_target_as = racial_pop_province_origin
			}
			random_owned_province = {
				limit = {
					has_dwarven_minority_trigger = yes
					devastation = 33
				}
				save_event_target_as = racial_pop_province_origin
			}
			
			#Target Province Setter
			random_owned_province = {
				limit = {
					NOT = { province_id = event_target:racial_pop_province_origin }
					OR = {
						NOT = { devastation = 33 }
						NOT = { unrest = 10 }
					}
					development = 10
				}
				save_event_target_as = racial_pop_province_target
			}
			
			random_owned_province = {
				limit = {
					NOT = { province_id = event_target:racial_pop_province_origin }
					OR = {
						NOT = { devastation = 33 }
						NOT = { unrest = 10 }
					}
					development = 15
				}
				save_event_target_as = racial_pop_province_target
			}
			
			random_owned_province = {
				limit = {
					NOT = { province_id = event_target:racial_pop_province_origin }
					NOT = { has_large_dwarven_minority_trigger = yes }
					OR = {
						NOT = { devastation = 33 }
						NOT = { unrest = 10 }
					}
					development = 15
				}
				save_event_target_as = racial_pop_province_target
			}
			
			random_owned_province = {
				limit = {
					NOT = { province_id = event_target:racial_pop_province_origin }
					OR = {
						NOT = { devastation = 33 }
						NOT = { unrest = 10 }
					}
					development = 20
				}
				save_event_target_as = racial_pop_province_target
			}
			
			random_owned_province = {
				limit = {
					NOT = { province_id = event_target:racial_pop_province_origin }
					NOT = { has_large_dwarven_minority_trigger = yes }
					OR = {
						NOT = { devastation = 33 }
						NOT = { unrest = 10 }
					}
					development = 20
				}
				save_event_target_as = racial_pop_province_target
			}
		}
	}
	
	#Welcome to [new province]!
	option = {		
		name = racial_pop_events_dwarven.6.a
		trigger = {
			
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ai_lower_than_wanted_tolerance_dwarven = yes
			}
		}
		
		#Remove Minority from Origin Province
		event_target:racial_pop_province_origin = {
			remove_dwarven_minority_size_effect = yes
		}
	
		#Add Minority to New Province
		event_target:racial_pop_province_target = {
			add_dwarven_minority_size_effect = yes
		}
		
		#Boost Dev if Large already
		if = {
			limit = {
				event_target:racial_pop_province_target = {
					OR = {
						has_large_dwarven_minority_trigger = yes
						has_dwarven_majority_trigger = yes
					}
				}
			}
			event_target:racial_pop_province_target = {
				random = {
					chance = 50
					add_base_production = 1
				}
			}
		}
	}
	
	#Prevent migration
	option = {		
		name = racial_pop_events_dwarven.6.b
		trigger = {
			
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ai_higher_than_wanted_tolerance_dwarven = yes
			}
			
			#If Persecuting
			modifier = {
				factor = 3
				OR = {
					has_country_modifier = racial_pop_dwarven_purge
					has_country_modifier = racial_pop_dwarven_expulsion
				}
			}
		}
		
		add_adm_power = -10
		
		small_decrease_of_dwarven_tolerance_effect = yes
		
	}
	
}



#Pop Migrates - Outside Country
country_event = {
	id = racial_pop_events_dwarven.7
	title = racial_pop_events_dwarven.7.t
	desc = racial_pop_events_dwarven.7.d
	picture = REFUGEES_ESCAPING_eventPicture
	
	trigger = {
		num_of_cities = 2	#you have something to migrate to
		OR = {
			any_owned_province = {
				has_dwarven_minority_trigger = yes
				devastation = 33
			}
			any_owned_province = {
				has_dwarven_minority_trigger = yes
				unrest = 10
			}
			any_owned_province = {
				has_dwarven_minority_trigger = yes
				NOT = { development = 10 }
			}
			any_owned_province = {
				has_oppressed_dwarven_minority_trigger = yes
			}
		}
		
		#Country that tolerates race
		any_neighbor_country = { 
			NOT = { low_tolerance_dwarven_race_trigger = yes }
		}
	}
	
	is_triggered_only = yes
	
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
	
		#Origin Province Setter
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_oppressed_dwarven_minority_trigger = yes 
				}
				save_event_target_as = racial_pop_province_origin
			}
			random_owned_province = {
				limit = {
					has_dwarven_minority_trigger = yes
					NOT = { development = 10 }
				}
				save_event_target_as = racial_pop_province_origin
			}
			random_owned_province = {
				limit = {
					has_dwarven_minority_trigger = yes
					unrest = 10 
				}
				save_event_target_as = racial_pop_province_origin
			}
			random_owned_province = {
				limit = {
					has_dwarven_minority_trigger = yes
					devastation = 33
				}
				save_event_target_as = racial_pop_province_origin
			}
		}
			
			
		#Which country to migrate to
		hidden_effect = {
			random_neighbor_country = {
				limit = {
					OR = {
						NOT = { has_country_modifier = racial_pop_dwarven_purge }
						NOT = { has_country_modifier = racial_pop_dwarven_expulsion }
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					OR = {
						NOT = { has_country_modifier = racial_pop_dwarven_purge }
						NOT = { has_country_modifier = racial_pop_dwarven_expulsion }
					}
					any_owned_province = {
						development = 20
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					OR = {
						NOT = { has_country_modifier = racial_pop_dwarven_purge }
						NOT = { has_country_modifier = racial_pop_dwarven_expulsion }
					}
					medium_tolerance_dwarven_race_trigger = yes
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					OR = {
						NOT = { has_country_modifier = racial_pop_dwarven_purge }
						NOT = { has_country_modifier = racial_pop_dwarven_expulsion }
					}
					medium_tolerance_dwarven_race_trigger = yes
					any_owned_province = {
						development = 20
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					OR = {
						NOT = { has_country_modifier = racial_pop_dwarven_purge }
						NOT = { has_country_modifier = racial_pop_dwarven_expulsion }
					}
					high_tolerance_dwarven_race_trigger = yes
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					OR = {
						NOT = { has_country_modifier = racial_pop_dwarven_purge }
						NOT = { has_country_modifier = racial_pop_dwarven_expulsion }
					}
					high_tolerance_dwarven_race_trigger = yes
					any_owned_province = {
						development = 20
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
		}
		
	}
	
	#Good luck in [new country]!
	option = {		
		name = racial_pop_events_dwarven.7.a
		trigger = {
			
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ai_lower_than_wanted_tolerance_dwarven = yes
			}
			modifier = {
				factor = 2
				NOT = { stability = 1 }
			}
			modifier = {	#this is to push refugees essentially
				factor = 1.5
				is_at_war = yes
			}
			
			#This is the same as expelling them but voluntarily so they're good with it
			modifier = {
				factor = 3
				has_country_modifier = racial_pop_dwarven_expulsion
			}
		}
		
		#Remove Minority from Origin Province
		event_target:racial_pop_province_origin = {
			remove_dwarven_minority_size_effect = yes
		}
	
		#Calls Migrants Arrive to Migration Country
		event_target:racial_pop_migration_country  = {
			country_event = {
				id = racial_pop_events_dwarven.9
				days = 14
				random = 31
			}
		}
	}
	
	#Prevent migration
	option = {		
		name = racial_pop_events_dwarven.7.b
		trigger = {
			
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ai_higher_than_wanted_tolerance_dwarven = yes
			}
			modifier = {
				factor = 2
				stability = 2
			}
			modifier = {	#they're integrated so they technically want them to stay
				factor = 1.5
				high_tolerance_dwarven_race_trigger = yes
			}
			
			#Purgers dont want them to get away
			modifier = {
				factor = 3
				has_country_modifier = racial_pop_dwarven_purge
			}
		}
		
		add_dip_power = -10
		
		small_decrease_of_dwarven_tolerance_effect = yes
		
	}
	
}


#Pop Migrates - To Colony
country_event = {
	id = racial_pop_events_dwarven.8
	title = racial_pop_events_dwarven.8.t
	desc = racial_pop_events_dwarven.8.d
	picture = CARIBBEAN_PIRATE_FORT_eventPicture
	
	trigger = {
		num_of_cities = 2	#you have something to migrate to
		OR = {
			any_owned_province = {
				has_dwarven_minority_trigger = yes
				devastation = 33
			}
			any_owned_province = {
				has_dwarven_minority_trigger = yes
				unrest = 10
			}
			any_owned_province = {
				has_dwarven_minority_trigger = yes
				NOT = { development = 10 }
			}
			any_owned_province = {
				has_oppressed_dwarven_minority_trigger = yes
			}
		}
		
		#Country that tolerates race
		any_subject_country = { 
			is_colonial_nation = yes
		}
	}
	
	is_triggered_only = yes
	
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
	
		#Origin Province Setter
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_oppressed_dwarven_minority_trigger = yes 
				}
				save_event_target_as = racial_pop_province_origin
			}
			random_owned_province = {
				limit = {
					has_dwarven_minority_trigger = yes
					NOT = { development = 10 }
				}
				save_event_target_as = racial_pop_province_origin
			}
			random_owned_province = {
				limit = {
					has_dwarven_minority_trigger = yes
					unrest = 10 
				}
				save_event_target_as = racial_pop_province_origin
			}
			random_owned_province = {
				limit = {
					has_dwarven_minority_trigger = yes
					devastation = 33
				}
				save_event_target_as = racial_pop_province_origin
			}
		}
			
			
		#Which country to migrate to
		hidden_effect = {
			random_subject_country = {
				limit = {
					is_colonial_nation = yes
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_subject_country = {
				limit = {
					any_owned_province = {
						development = 20
					}
					is_colonial_nation = yes
				}
				save_event_target_as = racial_pop_migration_country
			}
		}
		
	}
	
	#[colonyname] could use the help!
	option = {		
		name = racial_pop_events_dwarven.8.a
		trigger = {
			
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				personality = ai_colonialist 
			}
			modifier = {
				factor = 2
				has_idea_group = expansion_ideas
			}
		}
		
		#Remove Minority from Origin Province
		event_target:racial_pop_province_origin = {
			remove_dwarven_minority_size_effect = yes
		}
	
		#Calls Migrants Arrive to Migration Country
		event_target:racial_pop_migration_country  = {
			country_event = {
				id = racial_pop_events_dwarven.9
				days = 14
				random = 31
			}
		}
	}
	
	#Prevent them from leaving, they belong at home
	option = {		
		name = racial_pop_events_dwarven.8.a
		trigger = {
			
		}
		ai_chance = {
			factor = 30
			modifier = {
				factor = 2
				ruler_has_personality = careful_personality
			}
			
			#If Persecuting
			modifier = {
				factor = 3
				OR = {
					has_country_modifier = racial_pop_dwarven_purge
					has_country_modifier = racial_pop_dwarven_expulsion
				}
			}
		}
		
		#Remove Minority from Origin Province
		event_target:racial_pop_province_origin = {
			remove_dwarven_minority_size_effect = yes
		}
	
		#Calls Migrants Arrive to Migration Country
		event_target:racial_pop_migration_country  = {
			country_event = {
				id = racial_pop_events_dwarven.9
				days = 14
				random = 31
			}
		}
	}
	
}


#Migrants Arrive
country_event = {
	id = racial_pop_events_dwarven.9
	title = racial_pop_events_dwarven.9.t
	desc = racial_pop_events_dwarven.9.d
	picture = REFUGEES_ESCAPING_eventPicture
	
	trigger = {
	
	}
	
	is_triggered_only = yes
	
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		hidden_effect = {
			
			#Target Province Setter
			random_owned_province = {
				limit = {
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					NOT = { has_dwarven_minority_trigger = yes }
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					NOT = { has_dwarven_minority_trigger = yes }
					development = 10
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					development = 10
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					NOT = { has_dwarven_minority_trigger = yes }
					development = 15
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					development = 15
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					NOT = { has_dwarven_minority_trigger = yes }
					development = 20
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					development = 20
				}
				save_event_target_as = racial_pop_province_target
			}
			
		}
	}
	
	#Welcome to [new province]!
	option = {		
		name = racial_pop_events_dwarven.9.a
		trigger = {
			
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ai_lower_than_wanted_tolerance_dwarven = yes
			}
			modifier = {
				factor = 2
				high_tolerance_dwarven_race_trigger = yes
			}
			modifier = {
				factor = 2
				OR = {
					is_colonial_nation = yes
					is_subject_of = ROOT
				}
			}
			modifier = {
				factor = 2
				OR = {
					ruler_has_personality = tolerant_personality
					ruler_has_personality = kind_hearted_personality
					ruler_has_personality = benevolent_personality
				}
			}
			modifier = {
				factor = 3
				has_idea_group = humanist_ideas
			}
		}
	
		#Add Minority to New Province
		event_target:racial_pop_province_target = {
			add_dwarven_minority_size_effect = yes
		}
		
		#Boost Dev if Large already
		if = {
			limit = {
				event_target:racial_pop_province_target = {
					OR = {
						has_large_dwarven_minority_trigger = yes
						has_dwarven_majority_trigger = yes
					}
				}
			}
			event_target:racial_pop_province_target = {
				random = {
					chance = 50
					add_base_production = 1
				}
			}
		}
	}
	
	#They can settle, for a price
	option = {		
		name = racial_pop_events_dwarven.9.b
		trigger = {
			
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ai_higher_than_wanted_tolerance_dwarven = yes
			}
			modifier = {
				factor = 1.5
				is_bankrupt = yes
			}
			modifier = {
				factor = 2
				ruler_has_personality = greedy_personality
			}
			modifier = {
				factor = 1.5
				has_personal_deity = ara
			}
		}
		
		add_years_of_income = 0.1
	
		#Add Minority to New Province
		event_target:racial_pop_province_target = {
			add_dwarven_minority_size_effect = yes
		}
		
		#Boost Dev if Large already
		if = {
			limit = {
				event_target:racial_pop_province_target = {
					OR = {
						has_large_dwarven_minority_trigger = yes
						has_dwarven_majority_trigger = yes
					}
				}
			}
			event_target:racial_pop_province_target = {
				random = {
					chance = 50
					add_base_production = 1
				}
			}
		}
		
		small_decrease_of_dwarven_tolerance_effect = yes
		
	}
	
	#Reject migrants
	option = {		
		name = racial_pop_events_dwarven.9.c
		trigger = {
			
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ai_higher_than_wanted_tolerance_dwarven = yes
			}
			modifier = {
				factor = 2
				low_tolerance_dwarven_race_trigger = yes
			}
			modifier = {
				factor = 2
				OR = {
					ruler_has_personality = malevolent_personality
					ruler_has_personality = cruel_personality
				}
			}
			modifier = {
				factor = 1.5
				OR = {
					ruler_has_personality = careful_personality
				}
			}
			
			#If Persecuting
			modifier = {
				factor = 3
				OR = {
					has_country_modifier = racial_pop_dwarven_purge
					has_country_modifier = racial_pop_dwarven_expulsion
				}
			}
		}
		
		add_mil_power = -10
		
		small_decrease_of_dwarven_tolerance_effect = yes
		
	}
	
}



#Refugees Arrive - First Try
country_event = {
	id = racial_pop_events_dwarven.10
	title = racial_pop_events_dwarven.10.t
	desc = racial_pop_events_dwarven.10.d
	picture = REFUGEES_ESCAPING_eventPicture
	
	trigger = {
	
	}
	
	is_triggered_only = yes
	
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		hidden_effect = {
			
			#Target Province Setter
			random_owned_province = {
				limit = {
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					NOT = { has_dwarven_minority_trigger = yes }
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					NOT = { has_dwarven_minority_trigger = yes }
					development = 10
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					development = 10
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					NOT = { has_dwarven_minority_trigger = yes }
					development = 15
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					development = 15
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					NOT = { has_dwarven_minority_trigger = yes }
					development = 20
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					development = 20
				}
				save_event_target_as = racial_pop_province_target
			}
			
		}
		
		#Which country to migrate to
		hidden_effect = {
			random_neighbor_country = {
				limit = {
					OR = {
						NOT = { has_country_modifier = racial_pop_dwarven_purge }
						NOT = { has_country_modifier = racial_pop_dwarven_expulsion }
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					OR = {
						NOT = { has_country_modifier = racial_pop_dwarven_purge }
						NOT = { has_country_modifier = racial_pop_dwarven_expulsion }
					}
					any_owned_province = {
						development = 20
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					OR = {
						NOT = { has_country_modifier = racial_pop_dwarven_purge }
						NOT = { has_country_modifier = racial_pop_dwarven_expulsion }
					}
					medium_tolerance_dwarven_race_trigger = yes
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					OR = {
						NOT = { has_country_modifier = racial_pop_dwarven_purge }
						NOT = { has_country_modifier = racial_pop_dwarven_expulsion }
					}
					medium_tolerance_dwarven_race_trigger = yes
					any_owned_province = {
						development = 20
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					OR = {
						NOT = { has_country_modifier = racial_pop_dwarven_purge }
						NOT = { has_country_modifier = racial_pop_dwarven_expulsion }
					}
					high_tolerance_dwarven_race_trigger = yes
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					OR = {
						NOT = { has_country_modifier = racial_pop_dwarven_purge }
						NOT = { has_country_modifier = racial_pop_dwarven_expulsion }
					}
					high_tolerance_dwarven_race_trigger = yes
					any_owned_province = {
						development = 20
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
		}
		
	}
	
	#Let them in
	option = {		
		name = racial_pop_events_dwarven.10.a
		trigger = {
			
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ai_lower_than_wanted_tolerance_dwarven = yes
			}
			modifier = {
				factor = 2
				high_tolerance_dwarven_race_trigger = yes
			}
			modifier = {
				factor = 2
				OR = {
					is_colonial_nation = yes
					is_subject_of = ROOT
				}
			}
			modifier = {
				factor = 2
				OR = {
					ruler_has_personality = tolerant_personality
					ruler_has_personality = kind_hearted_personality
					ruler_has_personality = benevolent_personality
				}
			}
			modifier = {
				factor = 3
				has_idea_group = humanist_ideas
			}
		}
	
		#Add Minority to New Province
		event_target:racial_pop_province_target = {
			add_dwarven_minority_size_effect = yes
			add_local_autonomy = 10
		}
		
		#Boost Dev if Large already
		if = {
			limit = {
				event_target:racial_pop_province_target = {
					OR = {
						has_large_dwarven_minority_trigger = yes
						has_dwarven_majority_trigger = yes
					}
				}
			}
			event_target:racial_pop_province_target = {
				random = {
					chance = 50
					add_base_production = 1
				}
			}
		}
		
		small_increase_of_dwarven_tolerance_effect = yes
	}
	
	#Confiscate their valuables in return
	option = {		
		name = racial_pop_events_dwarven.10.b
		trigger = {
			
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ai_higher_than_wanted_tolerance_dwarven = yes
			}
			modifier = {
				factor = 1.5
				is_bankrupt = yes
			}
			modifier = {
				factor = 2
				ruler_has_personality = greedy_personality
			}
			modifier = {
				factor = 1.5
				has_personal_deity = ara
			}
		}
		
		add_years_of_income = 0.2
	
		#Add Minority to New Province
		event_target:racial_pop_province_target = {
			add_dwarven_minority_size_effect = yes
			add_local_autonomy = 10
		}
		
		#Boost Dev if Large already
		if = {
			limit = {
				event_target:racial_pop_province_target = {
					OR = {
						has_large_dwarven_minority_trigger = yes
						has_dwarven_majority_trigger = yes
					}
				}
			}
			event_target:racial_pop_province_target = {
				random = {
					chance = 50
					add_base_production = 1
				}
			}
		}
		
		medium_decrease_of_dwarven_tolerance_effect = yes
		
	}
	
	#There's no room for you here!
	option = {		
		name = racial_pop_events_dwarven.10.c
		trigger = {
			
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ai_higher_than_wanted_tolerance_dwarven = yes
			}
			modifier = {
				factor = 2
				low_tolerance_dwarven_race_trigger = yes
			}
			modifier = {
				factor = 2
				OR = {
					ruler_has_personality = malevolent_personality
					ruler_has_personality = cruel_personality
				}
			}
			modifier = {
				factor = 1.5
				OR = {
					ruler_has_personality = careful_personality
				}
			}
			
			#If Persecuting
			modifier = {
				factor = 3
				OR = {
					has_country_modifier = racial_pop_dwarven_purge
					has_country_modifier = racial_pop_dwarven_expulsion
				}
			}
		}
		
		if = {
			limit = {
				any_neighbor_country = { 
					OR = {
						NOT = { has_country_modifier = racial_pop_dwarven_purge  }
						NOT = { has_country_modifier = racial_pop_dwarven_expulsion  }
					}
				}
			}
			#Calls Migrants Arrive to Migration Country
			event_target:racial_pop_migration_country  = {
				country_event = {
					id = racial_pop_events_dwarven.11
					days = 31
					random = 31
				}
			}
		}
		
		add_mil_power = -20
		
		medium_decrease_of_dwarven_tolerance_effect = yes
		
	}
	
}


#Refugees Arrive - Second Try (forcefully settle)
country_event = {
	id = racial_pop_events_dwarven.11
	title = racial_pop_events_dwarven.11.t
	desc = racial_pop_events_dwarven.11.d
	picture = REFUGEES_ESCAPING_eventPicture
	
	trigger = {
	
	}
	
	is_triggered_only = yes
	
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		hidden_effect = {
			
			#Target Province Setter
			random_owned_province = {
				limit = {
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					NOT = { has_dwarven_minority_trigger = yes }
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					NOT = { has_dwarven_minority_trigger = yes }
					development = 10
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					development = 10
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					NOT = { has_dwarven_minority_trigger = yes }
					development = 15
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					development = 15
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					NOT = { has_dwarven_minority_trigger = yes }
					development = 20
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					development = 20
				}
				save_event_target_as = racial_pop_province_target
			}
			
		}
	}
	
	#Let those poor souls in
	option = {		
		name = racial_pop_events_dwarven.11.a
		trigger = {
			
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ai_lower_than_wanted_tolerance_dwarven = yes
			}
			modifier = {
				factor = 2
				high_tolerance_dwarven_race_trigger = yes
			}
			modifier = {
				factor = 2
				OR = {
					is_colonial_nation = yes
					is_subject_of = ROOT
				}
			}
			modifier = {
				factor = 2
				OR = {
					ruler_has_personality = tolerant_personality
					ruler_has_personality = kind_hearted_personality
					ruler_has_personality = benevolent_personality
				}
			}
			modifier = {
				factor = 3
				has_idea_group = humanist_ideas
			}
		}
	
		#Add Minority to New Province
		event_target:racial_pop_province_target = {
			add_dwarven_minority_size_effect = yes
			add_local_autonomy = 10
		}
		
		#Boost Dev if Large already
		if = {
			limit = {
				event_target:racial_pop_province_target = {
					OR = {
						has_large_dwarven_minority_trigger = yes
						has_dwarven_majority_trigger = yes
					}
				}
			}
			event_target:racial_pop_province_target = {
				random = {
					chance = 50
					add_base_production = 1
				}
			}
		}
		
		small_increase_of_dwarven_tolerance_effect = yes
	}
	
	#Confiscate what they have in return
	option = {		
		name = racial_pop_events_dwarven.11.b
		trigger = {
			
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ai_higher_than_wanted_tolerance_dwarven = yes
			}
			modifier = {
				factor = 1.5
				is_bankrupt = yes
			}
			modifier = {
				factor = 2
				ruler_has_personality = greedy_personality
			}
			modifier = {
				factor = 1.5
				has_personal_deity = ara
			}
		}
		
		add_years_of_income = 0.15
	
		#Add Minority to New Province
		event_target:racial_pop_province_target = {
			add_dwarven_minority_size_effect = yes
			add_local_autonomy = 10
		}
		
		#Boost Dev if Large already
		if = {
			limit = {
				event_target:racial_pop_province_target = {
					OR = {
						has_large_dwarven_minority_trigger = yes
						has_dwarven_majority_trigger = yes
					}
				}
			}
			event_target:racial_pop_province_target = {
				random = {
					chance = 50
					add_base_production = 1
				}
			}
		}
		
		medium_decrease_of_dwarven_tolerance_effect = yes
		
	}
	
	#Prevent them with force, if necessary
	option = {		
		name = racial_pop_events_dwarven.11.c
		trigger = {
			
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ai_higher_than_wanted_tolerance_dwarven = yes
			}
			modifier = {
				factor = 2
				low_tolerance_dwarven_race_trigger = yes
			}
			modifier = {
				factor = 2
				OR = {
					ruler_has_personality = malevolent_personality
					ruler_has_personality = cruel_personality
				}
			}
			modifier = {
				factor = 1.5
				OR = {
					ruler_has_personality = careful_personality
				}
			}
			
			#If Persecuting
			modifier = {
				factor = 3
				OR = {
					has_country_modifier = racial_pop_dwarven_purge
					has_country_modifier = racial_pop_dwarven_expulsion
				}
			}
		}
		
		random_list = {
		chance = 50
		
			event_target:racial_pop_province_target = {
				add_dwarven_minority_size_effect = yes
				add_local_autonomy = 10
			}
			
			#Boost Dev if Large already
			if = {
				limit = {
					event_target:racial_pop_province_target = {
						OR = {
							has_large_dwarven_minority_trigger = yes
							has_dwarven_majority_trigger = yes
						}
					}
				}
				event_target:racial_pop_province_target = {
					random = {
						chance = 50
						add_base_production = 1
					}
				}
			}
		}
		
		
		add_mil_power = -30
		
		large_decrease_of_dwarven_tolerance_effect = yes
		
		
	}
	
}



#Expulsion Initialization - do a event to all to proclaim or find out how to make this global
country_event = {
	id = racial_pop_events_dwarven.12
	title = racial_pop_events_dwarven.12.t
	desc = racial_pop_events_dwarven.12.d
	picture = REFUGEES_ESCAPING_eventPicture
	
	trigger = {
	
	}
	
	is_triggered_only = yes
	
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {

	}
	
	#Begin Expulsion of [race]
	option = {		
		name = racial_pop_events_dwarven.12.a
		trigger = {
			
		}
		ai_chance = {
			factor = 10
			modifier = {
				factor = 1.5
				ai_lower_than_wanted_tolerance_dwarven = yes
			}
			modifier = {
				factor = 2
				low_tolerance_dwarven_race_trigger = yes
			}
			modifier = {
				factor = 2
				lowest_tolerance_dwarven_race_trigger = yes
			}
			modifier = {
				factor = 2
				OR = {
					ruler_has_personality = malevolent_personality
					ruler_has_personality = cruel_personality
				}
			}
			
			#Race Specific
			
			#Administration - natural enemies of race
			modifier = {
				factor = 1.5
				monstrous_culture = yes
			}
			
			#Monsters
			modifier = {
				factor = 1.5
				monstrous_culture = yes
				NOT = { 
			}
		}
		
		add_adm_power = -50
		
		add_country_modifier = { 
			name = racial_pop_dwarven_expulsion
			duration = -1  
		}
		
		small_increase_of_dwarven_tolerance_effect = yes
	}
	
	#Go back
	option = {		
		name = racial_pop_events_dwarven.12.b
		trigger = {
			
		}
		ai_chance = {
			factor = 90
			modifier = {
				factor = 1.5
				ai_higher_than_wanted_tolerance_dwarven = yes
			}
			modifier = {
				factor = 1.5
				is_bankrupt = yes
			}
			modifier = {
				factor = 2
				ruler_has_personality = greedy_personality
			}
			modifier = {
				factor = 1.5
				has_personal_deity = ara
			}
		}
		
		add_years_of_income = 0.15
	
		#Add Minority to New Province
		event_target:racial_pop_province_target = {
			add_dwarven_minority_size_effect = yes
			add_local_autonomy = 10
		}
		
		#Boost Dev if Large already
		if = {
			limit = {
				event_target:racial_pop_province_target = {
					OR = {
						has_large_dwarven_minority_trigger = yes
						has_dwarven_majority_trigger = yes
					}
				}
			}
			event_target:racial_pop_province_target = {
				random = {
					chance = 50
					add_base_production = 1
				}
			}
		}
		
		medium_decrease_of_dwarven_tolerance_effect = yes
		
	}
	
	#Prevent them with force, if necessary
	option = {		
		name = racial_pop_events_dwarven.12.c
		trigger = {
			
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ai_higher_than_wanted_tolerance_dwarven = yes
			}
			modifier = {
				factor = 2
				low_tolerance_dwarven_race_trigger = yes
			}
			modifier = {
				factor = 2
				OR = {
					ruler_has_personality = malevolent_personality
					ruler_has_personality = cruel_personality
				}
			}
			modifier = {
				factor = 1.5
				OR = {
					ruler_has_personality = careful_personality
				}
			}
			
			#If Persecuting
			modifier = {
				factor = 3
				OR = {
					has_country_modifier = racial_pop_dwarven_purge
					has_country_modifier = racial_pop_dwarven_expulsion
				}
			}
		}
		
		random_list = {
		chance = 50
		
			event_target:racial_pop_province_target = {
				add_dwarven_minority_size_effect = yes
				add_local_autonomy = 10
			}
			
			#Boost Dev if Large already
			if = {
				limit = {
					event_target:racial_pop_province_target = {
						OR = {
							has_large_dwarven_minority_trigger = yes
							has_dwarven_majority_trigger = yes
						}
					}
				}
				event_target:racial_pop_province_target = {
					random = {
						chance = 50
						add_base_production = 1
					}
				}
			}
		}
		
		
		add_mil_power = -30
		
		large_decrease_of_dwarven_tolerance_effect = yes
		
		
	}
	
}