ruler_ynn_zodiac = {
	export_to_variable = {
		which = ynn_ruler_age #Ruler age when taking power
		value = trigger_value:ruler_age
	}
	
	export_to_variable = {
		which = ynn_current_year #Current Year
		value = trigger_value:is_year
	}
	subtract_variable = { which = ynn_current_year which = ynn_ruler_age }     #Birth Year
	set_variable = { game_start = 1443 }                            #Our starting point


	if = {
		limit = { check_variable = { ynn_current_year = 1444 } }     #If birth after or during 1444
		set_variable = { ruler_zodiac = 6 }                 #Will determine which blessing you get
		while = {
			limit = { NOT = { check_variable = { which = game_start which = ynn_current_year } } }
			change_variable = { game_start = 4 }
			change_variable = { ruler_zodiac = 1 }
			if = {
				limit = { check_variable = { ruler_zodiac = 17 } }
				set_variable = { ruler_zodiac = 1 }
			}
		}
		#If forest to apply the relevant modifier depending on varBlessings
		if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 16
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_16
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 15
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_15
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 14
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_14
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 13
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_13
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 12
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_12
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 11
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_11
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 10
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_10
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 9
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_9
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 8
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_8
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 7
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_7
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 6
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_6
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 5
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_5
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 4
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_4
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 3
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_3
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 2
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_2
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 1
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_1
				duration = -1
			}
		}
	}
	else_if = { #Same thing as above but we count backward
		limit = { NOT = { check_variable = { ynn_current_year = 1444 } } }     #If birth before 1444
		set_variable = { ruler_zodiac = 7 }
		while = {
			limit = { check_variable = { which = game_start which = ynn_current_year } }
			subtract_variable = { game_start = 4 }
			subtract_variable = { ruler_zodiac = 1 }
			if = {
				limit = { NOT = { check_variable = { ruler_zodiac = 1 } } }
				set_variable = { ruler_zodiac = 16 }
			}
		}
		#If forest to apply the relevant modifier depending on varBlessings
		if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 16
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_16
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 15
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_15
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 14
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_14
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 13
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_13
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 12
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_12
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 11
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_11
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 10
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_10
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 9
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_9
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 8
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_8
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 7
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_7
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 6
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_6
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 5
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_5
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 4
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_4
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 3
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_3
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 2
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_2
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 1
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_1
				duration = -1
			}
		}
	}
}

heir_ynn_zodiac = {
	export_to_variable = {
		which = ynn_heir_age #Ruler age when taking power
		value = trigger_value:heir_age
	}
	
	export_to_variable = {
		which = ynn_current_year #Current Year
		value = trigger_value:is_year
	}
	subtract_variable = { which = ynn_current_year which = ynn_heir_age }     #Birth Year
	set_variable = { game_start = 1443 }                            #Our starting point


	if = {
		limit = { check_variable = { ynn_current_year = 1444 } }     #If birth after or during 1444
		set_variable = { heir_zodiac = 6 }                 #Will determine which blessing you get
		while = {
			limit = { NOT = { check_variable = { which = game_start which = ynn_current_year } } }
			change_variable = { game_start = 4 }
			change_variable = { heir_zodiac = 1 }
			if = {
				limit = { check_variable = { heir_zodiac = 17 } }
				set_variable = { heir_zodiac = 1 }
			}
		}
		#If forest to apply the relevant modifier depending on varBlessings
		if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 16
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_16
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 15
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_15
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 14
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_14
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 13
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_13
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 12
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_12
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 11
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_11
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 10
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_10
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 9
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_9
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 8
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_8
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 7
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_7
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 6
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_6
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 5
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_5
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 4
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_4
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 3
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_3
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 2
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_2
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 1
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_1
				duration = -1
			}
		}
	}
	else_if = { #Same thing as above but we count backward
		limit = { NOT = { check_variable = { ynn_current_year = 1444 } } }     #If birth before 1444
		set_variable = { heir_zodiac = 7 }
		while = {
			limit = { check_variable = { which = game_start which = ynn_current_year } }
			subtract_variable = { game_start = 4 }
			subtract_variable = { heir_zodiac = 1 }
			if = {
				limit = { NOT = { check_variable = { heir_zodiac = 1 } } }
				set_variable = { heir_zodiac = 16 }
			}
		}
		#If forest to apply the relevant modifier depending on varBlessings
		if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 16
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_16
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 15
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_15
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 14
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_14
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 13
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_13
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 12
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_12
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 11
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_11
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 10
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_10
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 9
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_9
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 8
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_8
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 7
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_7
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 6
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_6
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 5
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_5
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 4
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_4
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 3
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_3
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 2
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_2
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 1
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_1
				duration = -1
			}
		}
	}
}

yrw_iosahar_liberty_ally_1 = {
	if = {
		limit = { has_country_flag = yrw_1a }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_1a }
			}
			add_liberty_desire = -5
		}
		else = { add_liberty_desire = 5 }
	}
	else_if = {
		limit = { has_country_flag = yrw_1b }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_1b }
			}
			add_liberty_desire = -5
		}
		else = { add_liberty_desire = 5 }
	}
}

yrw_iosahar_liberty_opposition_1 = {
	if = {
		limit = { has_country_flag = yrw_1a }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_1a }
			}
			add_liberty_desire = 5
		}
		else = { add_liberty_desire = -5 }
	}
	else_if = {
		limit = { has_country_flag = yrw_1b }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_1b }
			}
			add_liberty_desire = 5
		}
		else = { add_liberty_desire = -5 }
	}
}

yrw_iosahar_liberty_ally_2 = {
	if = {
		limit = { has_country_flag = yrw_2a }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_2a }
			}
			add_liberty_desire = -5
		}
		else = { add_liberty_desire = 5 }
	}
	else_if = {
		limit = { has_country_flag = yrw_2b }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_2b }
			}
			add_liberty_desire = -5
		}
		else = { add_liberty_desire = 5 }
	}
}

yrw_iosahar_liberty_opposition_2 = {
	if = {
		limit = { has_country_flag = yrw_2a }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_2a }
			}
			add_liberty_desire = 5
		}
		else = { add_liberty_desire = -5 }
	}
	else_if = {
		limit = { has_country_flag = yrw_2b }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_2b }
			}
			add_liberty_desire = 5
		}
		else = { add_liberty_desire = -5 }
	}
}

yrw_iosahar_liberty_ally_3 = {
	if = {
		limit = { has_country_flag = yrw_3a }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_3a }
			}
			add_liberty_desire = -5
		}
		else = { add_liberty_desire = 5 }
	}
	else_if = {
		limit = { has_country_flag = yrw_3b }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_3b }
			}
			add_liberty_desire = -5
		}
		else = { add_liberty_desire = 5 }
	}
}

yrw_iosahar_liberty_opposition_3 = {
	if = {
		limit = { has_country_flag = yrw_3a }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_3a }
			}
			add_liberty_desire = 5
		}
		else = { add_liberty_desire = -5 }
	}
	else_if = {
		limit = { has_country_flag = yrw_3b }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_3b }
			}
			add_liberty_desire = 5
		}
		else = { add_liberty_desire = -5 }
	}
}

yrw_iosahar_liberty_ally_4 = {
	if = {
		limit = { has_country_flag = yrw_4a }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_4a }
			}
			add_liberty_desire = -5
		}
		else = { add_liberty_desire = 5 }
	}
	else_if = {
		limit = { has_country_flag = yrw_4b }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_4b }
			}
			add_liberty_desire = -5
		}
		else = { add_liberty_desire = 5 }
	}
}

yrw_iosahar_liberty_opposition_4 = {
	if = {
		limit = { has_country_flag = yrw_4a }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_4a }
			}
			add_liberty_desire = 5
		}
		else = { add_liberty_desire = -5 }
	}
	else_if = {
		limit = { has_country_flag = yrw_4b }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_4b }
			}
			add_liberty_desire = 5
		}
		else = { add_liberty_desire = -5 }
	}
}

yrw_iosahar_subjugation_preparation_effect = {
	every_war_enemy_country = {
		if = {
			limit = { 
				is_in_war = {
					attacker_leader = THIS
					defender_leader = ROOT
					casus_belli = cb_independence_war
				}
			}
		white_peace = ROOT
		grant_independence = yes
		# peace subjugated iosahars out of independence wars against vassals
		# to stop you getting the iosahar back for free, they're released - bad luck
		# because if their new overlord joins the independence war (i.e. via enforce peace)
		# then separately peaces, the game crashes
		}
	}

	every_subject_country = {
		if = {	#Breaks PUs
			limit = {
				junior_union_with = ROOT
			}
			break_union = ROOT
		}
		else_if = {		#Iosahar and countries with Ynnic diplomacy are now yours
			limit = {
				OR = {
					is_subject_of_type = ynnic_iosahar
					has_country_modifier = ynn_diplo
				}
			}
			FROM = {
				create_subject = {
					subject_type = ynnic_iosahar
					subject = PREV
				}
			}
		}
		else = {	#Other subjects are released
			grant_independence = yes
		}
	}
	hidden_effect = {	#Clears alliances for ynnic overlord
		FROM = {
			every_known_country = {
				limit = {
					alliance_with = FROM
					capital_scope = {
						superregion = ynn_superregion
					}
				}
				FROM = {
					break_alliance = PREV
				}
			}
		}
	}
		
	if = {
		limit = {
			NOT = { has_country_modifier = ynn_diplo }
		}
		add_country_modifier = {
			name = ynn_diplo
			duration = -1
		}
		if = {
			limit = {
				tag = G32
				has_reform = malacnar_monarchy
			}
			FROM = { country_event = { id = flavor_malacnar.200 } }	#The fate of Malacnar
		}
		else_if = {
			limit = {
				has_country_flag = ynn_iosahar_breakup_debug
			}
			clr_country_flag = ynn_iosahar_breakup_debug
		}
		else = {
			FROM = { country_event = { id = ynn_events.10 } }	#Breakup of new Iosahar
		}
	}

}

clear_ynn_zodiacs_effect = {
	remove_country_modifier = ynn_zodiac_ruler_1
	remove_country_modifier = ynn_zodiac_ruler_2
	remove_country_modifier = ynn_zodiac_ruler_3
	remove_country_modifier = ynn_zodiac_ruler_4
	remove_country_modifier = ynn_zodiac_ruler_5
	remove_country_modifier = ynn_zodiac_ruler_6
	remove_country_modifier = ynn_zodiac_ruler_7
	remove_country_modifier = ynn_zodiac_ruler_8
	remove_country_modifier = ynn_zodiac_ruler_9
	remove_country_modifier = ynn_zodiac_ruler_10
	remove_country_modifier = ynn_zodiac_ruler_11
	remove_country_modifier = ynn_zodiac_ruler_12
	remove_country_modifier = ynn_zodiac_ruler_13
	remove_country_modifier = ynn_zodiac_ruler_14
	remove_country_modifier = ynn_zodiac_ruler_15
	remove_country_modifier = ynn_zodiac_ruler_16
	remove_country_modifier = ynn_zodiac_heir_1
	remove_country_modifier = ynn_zodiac_heir_2
	remove_country_modifier = ynn_zodiac_heir_3
	remove_country_modifier = ynn_zodiac_heir_4
	remove_country_modifier = ynn_zodiac_heir_5
	remove_country_modifier = ynn_zodiac_heir_6
	remove_country_modifier = ynn_zodiac_heir_7
	remove_country_modifier = ynn_zodiac_heir_8
	remove_country_modifier = ynn_zodiac_heir_9
	remove_country_modifier = ynn_zodiac_heir_10
	remove_country_modifier = ynn_zodiac_heir_11
	remove_country_modifier = ynn_zodiac_heir_12
	remove_country_modifier = ynn_zodiac_heir_13
	remove_country_modifier = ynn_zodiac_heir_14
	remove_country_modifier = ynn_zodiac_heir_15
	remove_country_modifier = ynn_zodiac_heir_16
}

clear_ynn_debate_flags_effect = {
	clr_country_flag = yrw_debate_cheat
	clr_country_flag = yrw_overlord_debating
	clr_country_flag = yrw_debate_1
	clr_country_flag = yrw_debate_2
	clr_country_flag = yrw_debate_3
	clr_country_flag = yrw_debate_4
	clr_country_flag = yrw_solo_debate
	clr_country_flag = yrw_solo_debate_2
	clr_country_flag = yrw_solo_debate_3
	clr_country_flag = yrw_solo_debate_4
	clr_country_flag = force_yrw_1b
	clr_country_flag = force_yrw_1a
	clr_country_flag = force_yrw_2b
	clr_country_flag = force_yrw_2a
	clr_country_flag = force_yrw_3b
	clr_country_flag = force_yrw_3a
	clr_country_flag = force_yrw_4b
	clr_country_flag = force_yrw_4a
	clr_country_flag = yrw_1b
	clr_country_flag = yrw_1a
	clr_country_flag = yrw_2b
	clr_country_flag = yrw_2a
	clr_country_flag = yrw_3b
	clr_country_flag = yrw_3a
	clr_country_flag = yrw_4b
	clr_country_flag = yrw_4a
}

award_ynn_reform_bonuses_effect = {
	if = {
		limit = { has_country_flag = yrw_1a_reform }
		add_country_modifier = {
			name = yrw_1a
			duration = -1
			hidden = yes
		}
	}
	if = {
		limit = { has_country_flag = yrw_1b_reform }
		add_country_modifier = {
			name = yrw_1b
			duration = -1
			hidden = yes
		}
	}
	if = {
		limit = { has_country_flag = yrw_2a_reform }
		add_country_modifier = {
			name = yrw_2a
			duration = -1
			hidden = yes
		}
	}
	if = {
		limit = { has_country_flag = yrw_2b_reform }
		add_country_modifier = {
			name = yrw_2b
			duration = -1
			hidden = yes
		}
	}
	if = {
		limit = { has_country_flag = yrw_3a_reform }
		add_country_modifier = {
			name = yrw_3a
			duration = -1
			hidden = yes
		}
	}
	if = {
		limit = { has_country_flag = yrw_3b_reform }
		add_country_modifier = {
			name = yrw_3b
			duration = -1
			hidden = yes
		}
	}
	if = {
		limit = { has_country_flag = yrw_4a_reform }
		add_country_modifier = {
			name = yrw_4a
			duration = -1
			hidden = yes
		}
	}
	if = {
		limit = { has_country_flag = yrw_4b_reform }
		add_country_modifier = {
			name = yrw_4b
			duration = -1
			hidden = yes
		}
	}
}

clear_ynn_reform_bonuses_effect = {
	remove_country_modifier = yrw_1a
	remove_country_modifier = yrw_1b
	remove_country_modifier = yrw_2a
	remove_country_modifier = yrw_2b
	remove_country_modifier = yrw_3a
	remove_country_modifier = yrw_3b
	remove_country_modifier = yrw_4a
	remove_country_modifier = yrw_4b
}

ynnic_setup_effect = {
	#Ynnic Diplomacy and Dark Ages debuff
	if = {
		limit = {
			religion = ynn_river_worship
		}
		if = {
			limit = {
				NOT = {
					has_reform = malacnar_monarchy
					has_reform = malacnar_monarchy_reformed
					has_reform = malacnar_republic_reform
				}
			}
			add_country_modifier = {
				name = ynn_diplo
				duration = -1
			}
		}
		if = {
			limit = {
				NOT = { has_dlc = "El Dorado" }
			}
			add_country_modifier = {
				name = ynn_dark_ages
				duration = -1
				hidden = yes
			}
		}
		country_event = { id = ynn_events.2 }
	}
}

ynn_clear_stuir_balia_modifier_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_country_modifier = ynn_good_stuir_balia
			}
			remove_country_modifier = ynn_good_stuir_balia
		}
		else_if = {
			limit = {
				has_country_modifier = ynn_normal_stuir_balia
			}
			remove_country_modifier = ynn_normal_stuir_balia
		}
		else_if = {
			limit = {
				has_country_modifier = ynn_bad_stuir_balia
			}
			remove_country_modifier = ynn_bad_stuir_balia
		}
	}
}


###	The jousting effect needs both of the Jousting Participants to have YNNJOUSTOPPONENT1 and YNNJOUSTOPPONENT2 set, and a flag
###	denoting what events should be fired on victory
###

ynn_joust_effect = {
	
	custom_tooltip = ynn_joust_tt

	hidden_effect = {
		
		# Setting the Jousting Power

		$YNNJOUSTOPPONENT1$ = {
			ynn_joust_power_effect = yes
		}
		$YNNJOUSTOPPONENT2$ = {
			ynn_joust_power_effect = yes
		}

		# Fire the joust

		$YNNJOUSTOPPONENT1$ = {
			ynn_joust_resolve_effect = {
				YNNJOUSTOPPONENT1 = $YNNJOUSTOPPONENT1$
				YNNJOUSTOPPONENT2 = $YNNJOUSTOPPONENT2$
			}
		}
	}
}


ynn_joust_power_effect = {
	hidden_effect = {
		set_variable = {
			which = participantJoustPower
			value = 0
		}
		
		###	participant Joust Power	###
		
		trigger_switch = {
			on_trigger = mil
			6 = { 
				change_variable = {
					which = participantJoustPower
					value = 10
				}
			}
			5 = { 
				change_variable = {
					which = participantJoustPower
					value = 8
				}
			}
			4 = { 
				change_variable = {
					which = participantJoustPower
					value = 6
				}
			}
			3 = { 
			}
			2 = { 
				subtract_variable = {
					which = participantJoustPower
					value = 2
				}
			}
			1 = { 
				subtract_variable = {
					which = participantJoustPower
					value = 3
				}
			}
			0 = { 
				subtract_variable = {
					which = participantJoustPower
					value = 4
				}
			}
		}
		trigger_switch = {
			on_trigger = ruler_age
			60 = {
				subtract_variable = {
					which = participantJoustPower
					value = 3
				}
			}
			50 = {
				subtract_variable = {
					which = participantJoustPower
					value = 2
				}
			}
			40 = {
				subtract_variable = {
					which = participantJoustPower
					value = 1
				}
			}
		}
		if = {
			limit = { 
				ruler_has_personality = bold_fighter_personality 
			}
			change_variable = {
				which = participantJoustPower
				value = 4
			}
		}
		if = {
			limit = { 
				ruler_has_personality = strict_personality 
			}
			change_variable = {
				which = participantJoustPower
				value = 4
			}
		}
		if = {
			limit = { 
				ruler_has_personality = martial_educator_personality 
			}
			change_variable = {
				which = participantJoustPower
				value = 4
			}
		}
		if = {
			limit = { 
				ruler_has_personality = tactical_genius_personality 
			}
			change_variable = {
				which = participantJoustPower
				value = 4
			}
		}
		if = {
			limit = { 
				ruler_has_mage_personality = yes
			}
			change_variable = {
				which = participantJoustPower
				value = 5
			}
		}
		if = {
			limit = { 
				ruler_has_personality = great_conqueror_personality 
			}
			change_variable = {
				which = participantJoustPower
				value = 7
			}
		}
		if = {
			limit = { 
				ruler_has_personality = mythical_conqueror_personality 
			}
			change_variable = {
				which = participantJoustPower
				value = 10
			}
		}
		if = {
			limit = { 
				ruler_has_personality = conqueror_personality 
			}
			change_variable = {
				which = participantJoustPower
				value = 4
			}
		}
		if = {
			limit = { 
				ruler_has_personality = craven_personality 
			}
			subtract_variable = {
				which = participantJoustPower
				value = 4
			}
		}
		if = {
			limit = { 
				OR = {
					tag = G35
					was_tag = G35
				}
			}
			if = {
				limit = {
					OR = {	#Scaled on the battle modifiers each lance gives
						has_country_modifier = G35_lance_1_1
						has_country_modifier = G35_lance_1_3
					}
				}
				change_variable = {
					which = participantJoustPower
					value = 1
				}
			}
			else_if = {
				limit = {
					OR = {
						has_country_modifier = G35_lance_2_1
						has_country_modifier = G35_lance_2_3
						has_country_modifier = G35_lance_1_2
					}
				}
				change_variable = {
					which = participantJoustPower
					value = 2
				}
			}
			else_if = {
				limit = {
					OR = {
						has_country_modifier = G35_lance_3_1
						has_country_modifier = G35_lance_3_3
						has_country_modifier = G35_lance_2_2
						has_country_modifier = G35_lance_3_2
					}
				}
				change_variable = {
					which = participantJoustPower
					value = 3
				}
			}
			else_if = {
				limit = {
					OR = {
						has_country_modifier = G35_lance_4_1
						has_country_modifier = G35_lance_4_3
					}
				}
				change_variable = {
					which = participantJoustPower
					value = 4
				}
			}
			else_if = {
				limit = {
					has_country_modifier = G35_lance_4_2
				}
				change_variable = {
					which = participantJoustPower
					value = 5
				}
			}
		}
		log = "Current Participant Joust Power is [This.participantJoustPower.GetValue]"
	}
}

ynn_joust_resolve_effect = {

	#	YNNJOUSTOPPONENT1 and YNNJOUSTOPPONENT2 must be assigned to the two joust participants,
	#	they must both have their participantJoustPower set from the ynn_joust_power_effect
	#
	#
	#
	#

	hidden_effect = {
		$YNNJOUSTOPPONENT2$ = {
			set_variable = {
				which = participant2JoustPower
				value = 0
			}
			change_variable = {
				which = participant2JoustPower
				which = participantJoustPower
			}
		}

		hidden_effect = {
			subtract_variable = {
				which = participantJoustPower
				which = $YNNJOUSTOPPONENT2$
			}
		}

		log = "Current Participant Joust Power is [This.participantJoustPower.GetValue]"
		hidden_effect = {
			if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = 10
					}
				}
				ynn_joust_win_effect = yes
				$YNNJOUSTOPPONENT2$ = {
					random = {
						chance = 50
						set_ruler_flag = brutally_unhorsed
					}
					ynn_joust_lose_effect = yes
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = 9
					}
				}
				random_list = {
					95 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							random = {
								chance = 45
								set_ruler_flag = brutally_unhorsed
							}
							ynn_joust_lose_effect = yes
						}
					}
					05 = {
						ynn_joust_lose_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = 8
					}
				}
				random_list = {
					90 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							random = {
								chance = 40
								set_ruler_flag = brutally_unhorsed
							}
							ynn_joust_lose_effect = yes
						}
					}
					10 = {
						ynn_joust_lose_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = 7
					}
				}
				random_list = {
					85 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							random = {
								chance = 35
								set_ruler_flag = brutally_unhorsed
							}
							ynn_joust_lose_effect = yes
						}
					}
					15 = {
						ynn_joust_lose_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = 6
					}
				}
				random_list = {
					80 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							random = {
								chance = 30
								set_ruler_flag = brutally_unhorsed
							}
							ynn_joust_lose_effect = yes
						}
					}
					20 = {
						ynn_joust_lose_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = 5
					}
				}
				random_list = {
					75 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							random = {
								chance = 25
								set_ruler_flag = brutally_unhorsed
							}
							ynn_joust_lose_effect = yes
						}
					}
					25 = {
						ynn_joust_lose_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = 4
					}
				}
				random_list = {
					70 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							random = {
								chance = 20
								set_ruler_flag = brutally_unhorsed
							}
							ynn_joust_lose_effect = yes
						}
					}
					30 = {
						ynn_joust_lose_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = 3
					}
				}
				random_list = {
					65 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							random = {
								chance = 15
								set_ruler_flag = brutally_unhorsed
							}
							ynn_joust_lose_effect = yes
						}
					}
					35 = {
						ynn_joust_lose_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = 2
					}
				}
				random_list = {
					60 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							random = {
								chance = 10
								set_ruler_flag = brutally_unhorsed
							}
							ynn_joust_lose_effect = yes
						}
					}
					40 = {
						ynn_joust_lose_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = 1
					}
				}
				random_list = {
					55 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							random = {
								chance = 5
								set_ruler_flag = brutally_unhorsed
							}
							ynn_joust_lose_effect = yes
						}
					}
					45 = {
						ynn_joust_lose_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = 0
					}
				}
				random_list = {
					50 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							random = {
								chance = 5
								set_ruler_flag = brutally_unhorsed
							}
							ynn_joust_lose_effect = yes
						}
					}
					50 = {
						ynn_joust_lose_effect = yes
						random = {
							chance = 5
							set_ruler_flag = brutally_unhorsed
						}
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = -1
					}
				}
				random_list = {
					45 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_lose_effect = yes
						}
					}
					55 = {
						ynn_joust_lose_effect = yes
						random = {
							chance = 5
							set_ruler_flag = brutally_unhorsed
						}
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = -2
					}
				}
				random_list = {
					40 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_lose_effect = yes
						}
					}
					60 = {
						ynn_joust_lose_effect = yes
						random = {
							chance = 10
							set_ruler_flag = brutally_unhorsed
						}
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = -3
					}
				}
				random_list = {
					35 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_lose_effect = yes
						}
					}
					65 = {
						ynn_joust_lose_effect = yes
						random = {
							chance = 15
							set_ruler_flag = brutally_unhorsed
						}
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = -4
					}
				}
				random_list = {
					30 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_lose_effect = yes
						}
					}
					70 = {
						ynn_joust_lose_effect = yes
						random = {
							chance = 20
							set_ruler_flag = brutally_unhorsed
						}
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = -5
					}
				}
				random_list = {
					25 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_lose_effect = yes
						}
					}
					75 = {
						ynn_joust_lose_effect = yes
						random = {
							chance = 25
							set_ruler_flag = brutally_unhorsed
						}
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = -6
					}
				}
				random_list = {
					20 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_lose_effect = yes
						}
					}
					80 = {
						ynn_joust_lose_effect = yes
						random = {
							chance = 30
							set_ruler_flag = brutally_unhorsed
						}
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = -7
					}
				}
				random_list = {
					15 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_lose_effect = yes
						}
					}
					85 = {
						ynn_joust_lose_effect = yes
						random = {
							chance = 35
							set_ruler_flag = brutally_unhorsed
						}
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = -8
					}
				}
				random_list = {
					10 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_lose_effect = yes
						}
					}
					90 = {
						ynn_joust_lose_effect = yes
						random = {
							chance = 40
							set_ruler_flag = brutally_unhorsed
						}
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = participantJoustPower
						value = -9
					}
				}
				random_list = {
					5 = {
						ynn_joust_win_effect = yes
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_lose_effect = yes
						}
					}
					95 = {
						ynn_joust_lose_effect = yes
						random = {
							chance = 45
							set_ruler_flag = brutally_unhorsed
						}
						$YNNJOUSTOPPONENT2$ = {
							ynn_joust_win_effect = yes
						}
					}
				}
			}
			else = {
				ynn_joust_lose_effect = yes
				random = {
					chance = 50
					set_ruler_flag = brutally_unhorsed
				}
				$YNNJOUSTOPPONENT2$ = {
					ynn_joust_win_effect = yes
				}
			}
		}
	}
}

ynn_joust_win_effect = {
	if = {
		limit = {
			OR = {
				has_ruler_flag = offender_in_honour_joust
				has_ruler_flag = defender_in_honour_joust
			}
		}
		country_event = {
			id = ynn_events.112
			days = 5
		}
	}
	else_if = {
		limit = {
			has_country_flag = G26_partaking_joust
		}
		country_event = {
			id = flavour_amacimst.150
			days = 1
		}
	}
}

ynn_joust_lose_effect = {
	if = {
		limit = {
			OR = {
				has_ruler_flag = offender_in_honour_joust
				has_ruler_flag = defender_in_honour_joust
			}
		}
		country_event = {
			id = ynn_events.113
			days = 5
		}
	}
	else_if = {
		limit = {
			has_country_flag = G26_partaking_joust
		}
		country_event = {
			id = flavour_amacimst.151
			days = 1
		}
	}
}

clear_all_non_ruinborn_effect = {
	custom_tooltip = clear_all_non_ruinborn_effect_tt
	hidden_effect = {
		if = {
			limit = {
				any_owned_province = {
					ynn_has_any_non_ruinborn_pop_trigger = yes
				}
			}
			every_owned_province = {
				limit = {
					ynn_has_any_non_ruinborn_pop_trigger = yes
					OR = {
						culture = sarda
						culture = dolindhan
					}
				}
				if = {
					limit = {
						has_any_human_pop_trigger = yes
					}
					remove_all_human_minority_size_effect = yes
					owner = {
						small_decrease_of_human_tolerance_effect = yes
						random_known_country = {
							limit = {
								capital_scope = {
									continent = north_america
								}
								NOT = {
									has_country_flag = G26_dont_come_here
								}
							}
							country_event = {
								id = racial_pop_events_human.10
								days = 14
								random = 31
							}
						}
					}
				}
				if = {
					limit = {
						has_any_dwarven_pop_trigger = yes
					}
					remove_all_dwarf_minority_effect = yes
					owner = {
						small_decrease_of_dwarven_tolerance_effect = yes
						random_known_country = {
							limit = {
								capital_scope = {
									continent = north_america
								}
								NOT = {
									has_country_flag = G26_dont_come_here
								}
							}
							country_event = {
								id = racial_pop_events_dwarven.10
								days = 14
								random = 31
							}
						}
					}
				}
				if = {
					limit = {
						has_any_orcish_pop_trigger = yes 
					}
					remove_all_orc_minority_effect = yes
					owner = {
						small_decrease_of_orcish_tolerance_effect = yes
						random_known_country = {
							limit = {
								capital_scope = {
									continent = north_america
								}
								NOT = {
									has_country_flag = G26_dont_come_here
								}
							}
							country_event = {
								id = racial_pop_events_orcish.10
								days = 14
								random = 31
							}
						}
					}
				}
				if = {
					limit = {
						has_any_half_orcish_pop_trigger = yes
					}
					remove_all_horc_minority_effect = yes
					owner = {
						small_decrease_of_half_orcish_tolerance_effect = yes
						random_known_country = {
							limit = {
								capital_scope = {
									continent = north_america
								}
								NOT = {
									has_country_flag = G26_dont_come_here
								}
							}
							country_event = {
								id = racial_pop_events_half_orcish.10
								days = 14
								random = 31
							}
						}
					}
				}
				if = {
					limit = {
						has_any_elven_pop_trigger = yes
					}
					remove_all_elf_minority_effect = yes
					owner = {
						small_decrease_of_elven_tolerance_effect = yes
						random_known_country = {
							limit = {
								capital_scope = {
									continent = north_america
								}
								NOT = {
									has_country_flag = G26_dont_come_here
								}
							}
							country_event = {
								id = racial_pop_events_elven.10
								days = 14
								random = 31
							}
						}
					}
				}
				if = {
					limit = {
						has_any_half_elven_pop_trigger = yes
					}
					remove_all_half_elf_minority_effect = yes
					owner = {
						small_decrease_of_half_elven_tolerance_effect = yes
						random_known_country = {
							limit = {
								capital_scope = {
									continent = north_america
								}
								NOT = {
									has_country_flag = G26_dont_come_here
								}
							}
							country_event = {
								id = racial_pop_events_half_elven.10
								days = 14
								random = 31
							}
						}
					}
				}
				if = {
					limit = {
						has_any_halfling_pop_trigger = yes
					}
					remove_all_halfling_minority_effect = yes
					owner = {
						small_decrease_of_halfling_tolerance_effect = yes
						random_known_country = {
							limit = {
								capital_scope = {
									continent = north_america
								}
								NOT = {
									has_country_flag = G26_dont_come_here
								}
							}
							country_event = {
								id = racial_pop_events_halfling.10
								days = 14
								random = 31
							}
						}
					}
				}
				if = {
					limit = {
						has_any_gnomish_pop_trigger = yes
					}
					remove_all_gnome_minority_effect = yes
					owner = {
						small_decrease_of_gnomish_tolerance_effect = yes
						random_known_country = {
							limit = {
								capital_scope = {
									continent = north_america
								}
								NOT = {
									has_country_flag = G26_dont_come_here
								}
							}
							country_event = {
								id = racial_pop_events_gnomish.10
								days = 14
								random = 31
							}
						}
					}
				}
				if = {
					limit = {
						has_any_kobold_pop_trigger = yes
					}
					remove_all_kobold_minority_effect = yes
					owner = {
						small_decrease_of_kobold_tolerance_effect = yes
						random_known_country = {
							limit = {
								capital_scope = {
									continent = north_america
								}
								NOT = {
									has_country_flag = G26_dont_come_here
								}
							}
							country_event = {
								id = racial_pop_events_kobold.10
								days = 14
								random = 31
							}
						}
					}
				}
			}
		}
	}
}

remove_all_human_minority_size_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_province_modifier = human_minority_integrated_large
			}
			remove_province_modifier = human_minority_integrated_large
		}
		else_if = {
			limit = {
				has_province_modifier = human_minority_coexisting_large
			}
			remove_province_modifier = human_minority_coexisting_large
		}
		else_if = {
			limit = {
				has_province_modifier = human_minority_oppressed_large
			}
			remove_province_modifier = human_minority_oppressed_large
		}
		else_if = {
			limit = {
				has_province_modifier = human_minority_integrated_small
			}
			remove_province_modifier = human_minority_integrated_small
		}
		else_if = {
			limit = {
				has_province_modifier = human_minority_coexisting_small
			}
			remove_province_modifier = human_minority_coexisting_small
		}
		else_if = {
			limit = {
				has_province_modifier = human_minority_oppressed_small
			}
			remove_province_modifier = human_minority_oppressed_small
		}
	}
}

remove_all_dwarf_minority_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_province_modifier = dwarven_minority_integrated_large
			}
			remove_province_modifier = dwarven_minority_integrated_large
		}
		else_if = {
			limit = {
				has_province_modifier = dwarven_minority_coexisting_large
			}
			remove_province_modifier = dwarven_minority_coexisting_large
		}
		else_if = {
			limit = {
				has_province_modifier = dwarven_minority_oppressed_large
			}
			remove_province_modifier = dwarven_minority_oppressed_large
		}
		else_if = {
			limit = {
				has_province_modifier = dwarven_minority_integrated_small
			}
			remove_province_modifier = dwarven_minority_integrated_small
		}
		else_if = {
			limit = {
				has_province_modifier = dwarven_minority_coexisting_small
			}
			remove_province_modifier = dwarven_minority_coexisting_small
		}
		else_if = {
			limit = {
				has_province_modifier = dwarven_minority_oppressed_small
			}
			remove_province_modifier = dwarven_minority_oppressed_small
		}
	}
}

remove_all_horc_minority_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_province_modifier = half_orcish_minority_integrated_large
			}
			remove_province_modifier = half_orcish_minority_integrated_large
		}
		else_if = {
			limit = {
				has_province_modifier = half_orcish_minority_coexisting_large
			}
			remove_province_modifier = half_orcish_minority_coexisting_large
		}
		else_if = {
			limit = {
				has_province_modifier = half_orcish_minority_oppressed_large
			}
			remove_province_modifier = half_orcish_minority_oppressed_large
		}
		else_if = {
			limit = {
				has_province_modifier = half_orcish_minority_integrated_small
			}
			remove_province_modifier = half_orcish_minority_integrated_small
		}
		else_if = {
			limit = {
				has_province_modifier = half_orcish_minority_coexisting_small
			}
			remove_province_modifier = half_orcish_minority_coexisting_small
		}
		else_if = {
			limit = {
				has_province_modifier = half_orcish_minority_oppressed_small
			}
			remove_province_modifier = half_orcish_minority_oppressed_small
		}
	}
}

remove_all_orc_minority_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_province_modifier = orcish_minority_integrated_large
			}
			remove_province_modifier = orcish_minority_integrated_large
		}
		else_if = {
			limit = {
				has_province_modifier = orcish_minority_coexisting_large
			}
			remove_province_modifier = orcish_minority_coexisting_large
		}
		else_if = {
			limit = {
				has_province_modifier = orcish_minority_oppressed_large
			}
			remove_province_modifier = orcish_minority_oppressed_large
		}
		else_if = {
			limit = {
				has_province_modifier = orcish_minority_integrated_small
			}
			remove_province_modifier = orcish_minority_integrated_small
		}
		else_if = {
			limit = {
				has_province_modifier = orcish_minority_coexisting_small
			}
			remove_province_modifier = orcish_minority_coexisting_small
		}
		else_if = {
			limit = {
				has_province_modifier = orcish_minority_oppressed_small
			}
			remove_province_modifier = orcish_minority_oppressed_small
		}
	}
}

remove_all_halfling_minority_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_province_modifier = halfling_minority_integrated_large
			}
			remove_province_modifier = halfling_minority_integrated_large
		}
		else_if = {
			limit = {
				has_province_modifier = halfling_minority_coexisting_large
			}
			remove_province_modifier = halfling_minority_coexisting_large
		}
		else_if = {
			limit = {
				has_province_modifier = halfling_minority_oppressed_large
			}
			remove_province_modifier = halfling_minority_oppressed_large
		}
		else_if = {
			limit = {
				has_province_modifier = halfling_minority_integrated_small
			}
			remove_province_modifier = halfling_minority_integrated_small
		}
		else_if = {
			limit = {
				has_province_modifier = halfling_minority_coexisting_small
			}
			remove_province_modifier = halfling_minority_coexisting_small
		}
		else_if = {
			limit = {
				has_province_modifier = halfling_minority_oppressed_small
			}
			remove_province_modifier = halfling_minority_oppressed_small
		}
	}
}

remove_all_elf_minority_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_province_modifier = elven_minority_integrated_large
			}
			remove_province_modifier = elven_minority_integrated_large
		}
		else_if = {
			limit = {
				has_province_modifier = elven_minority_coexisting_large
			}
			remove_province_modifier = elven_minority_coexisting_large
		}
		else_if = {
			limit = {
				has_province_modifier = elven_minority_oppressed_large
			}
			remove_province_modifier = elven_minority_oppressed_large
		}
		else_if = {
			limit = {
				has_province_modifier = elven_minority_integrated_small
			}
			remove_province_modifier = elven_minority_integrated_small
		}
		else_if = {
			limit = {
				has_province_modifier = elven_minority_coexisting_small
			}
			remove_province_modifier = elven_minority_coexisting_small
		}
		else_if = {
			limit = {
				has_province_modifier = elven_minority_oppressed_small
			}
			remove_province_modifier = elven_minority_oppressed_small
		}
	}
}

remove_all_half_elf_minority_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_province_modifier = half_elven_minority_integrated_large
			}
			remove_province_modifier = half_elven_minority_integrated_large
		}
		else_if = {
			limit = {
				has_province_modifier = half_elven_minority_coexisting_large
			}
			remove_province_modifier = half_elven_minority_coexisting_large
		}
		else_if = {
			limit = {
				has_province_modifier = half_elven_minority_oppressed_large
			}
			remove_province_modifier = half_elven_minority_oppressed_large
		}
		else_if = {
			limit = {
				has_province_modifier = half_elven_minority_integrated_small
			}
			remove_province_modifier = half_elven_minority_integrated_small
		}
		else_if = {
			limit = {
				has_province_modifier = half_elven_minority_coexisting_small
			}
			remove_province_modifier = half_elven_minority_coexisting_small
		}
		else_if = {
			limit = {
				has_province_modifier = half_elven_minority_oppressed_small
			}
			remove_province_modifier = half_elven_minority_oppressed_small
		}
	}
}

remove_all_gnome_minority_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_province_modifier = gnomish_minority_integrated_large
			}
			remove_province_modifier = gnomish_minority_integrated_large
		}
		else_if = {
			limit = {
				has_province_modifier = gnomish_minority_coexisting_large
			}
			remove_province_modifier = gnomish_minority_coexisting_large
		}
		else_if = {
			limit = {
				has_province_modifier = gnomish_minority_oppressed_large
			}
			remove_province_modifier = gnomish_minority_oppressed_large
		}
		else_if = {
			limit = {
				has_province_modifier = gnomish_minority_integrated_small
			}
			remove_province_modifier = gnomish_minority_integrated_small
		}
		else_if = {
			limit = {
				has_province_modifier = gnomish_minority_coexisting_small
			}
			remove_province_modifier = gnomish_minority_coexisting_small
		}
		else_if = {
			limit = {
				has_province_modifier = gnomish_minority_oppressed_small
			}
			remove_province_modifier = gnomish_minority_oppressed_small
		}
	}
}

remove_all_kobold_minority_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_province_modifier = kobold_minority_integrated_large
			}
			remove_province_modifier = kobold_minority_integrated_large
		}
		else_if = {
			limit = {
				has_province_modifier = kobold_minority_coexisting_large
			}
			remove_province_modifier = kobold_minority_coexisting_large
		}
		else_if = {
			limit = {
				has_province_modifier = kobold_minority_oppressed_large
			}
			remove_province_modifier = kobold_minority_oppressed_large
		}
		else_if = {
			limit = {
				has_province_modifier = kobold_minority_integrated_small
			}
			remove_province_modifier = kobold_minority_integrated_small
		}
		else_if = {
			limit = {
				has_province_modifier = kobold_minority_coexisting_small
			}
			remove_province_modifier = kobold_minority_coexisting_small
		}
		else_if = {
			limit = {
				has_province_modifier = kobold_minority_oppressed_small
			}
			remove_province_modifier = kobold_minority_oppressed_small
		}
	}
}