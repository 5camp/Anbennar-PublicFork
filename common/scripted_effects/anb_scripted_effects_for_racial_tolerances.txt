# These are the effects used to lower/increase different tolerances
# These are here to make it easier for the devs to mod events (also allows smaller adjustment of event effects)
# All of these either increase or decrease the current tolerance by 5, 10, 15 or 20.

reset_racial_military_via_administration = {

		if = {
			limit = {
				has_country_modifier = orcish_administration
			}
			add_country_modifier = { 
				name = restructuring_military
				duration = 3650
			}
			add_country_modifier = { 
				name = orcish_military
				duration = -1  
			}
			change_unit_type = tech_orcish
		}
		
		else_if = {
			limit = {
				has_country_modifier = human_administration
			}
			add_country_modifier = { 
				name = restructuring_military
				duration = 3650
			}
			add_country_modifier = { 
				name = human_military
				duration = -1  
			}
			if = {
				limit = {
					capital_scope = { superregion = bulwar_superregion }
				}
				change_unit_type = tech_bulwari
			}
			else_if = {
				limit = {
					capital_scope = { superregion = salahad_superregion }
				}
				change_unit_type = tech_salahadesi
			}
			else_if = {
				limit = {
					capital_scope = { superregion = rahen_superregion }
				}
				change_unit_type = tech_raheni
			}
			else_if = {
				limit = {
					OR = {
						capital_scope = { superregion = yanshen_superregion }
						capital_scope = { superregion = south_haless_superregion }
					}
				}
				change_unit_type = tech_halessi
			}
			else_if = {
				limit = {
					capital_scope = { superregion = north_haless_superregion }
				}
				change_unit_type = tech_shuvuush
			}
			else_if = {
				limit = {
					capital_scope = { superregion = forbidden_lands_superregion }
				}
				change_unit_type = tech_islanders
			}
			else_if = {
				limit = {
					capital_scope = { superregion = gerudia_superregion }
				}
				change_unit_type = tech_gerudian
			}
			else = {
				change_unit_type = tech_cannorian
			}
		}
		
		else_if = {
			limit = {
				has_country_modifier = elven_administration
			}
			add_country_modifier = { 
				name = restructuring_military
				duration = 3650
			}
			add_country_modifier = { 
				name = elven_military
				duration = -1  
			}
			if = {
				limit = {
					OR = {
						capital_scope = { superregion = deepwoods_superregion }
						primary_culture = wood_elf
						AND = {
							accepted_culture = wood_elf
							NOT = { culture_group = elven }
						}
					}
				}
				change_unit_type = tech_wood_elf
			}
			else_if = {
				limit = {
					OR = {
						capital_scope = { continent = asia }
						capital_scope = { continent = africa }
						AND = {
							OR = {
								capital_scope = { continent = north_america }
								capital_scope = { continent = south_america }
							}
							religion_group = bulwari
						}
						primary_culture = sun_elf
						primary_culture = dawn_elf
						primary_culture = desert_elf
						AND = {
							accepted_culture = sun_elf
							NOT = { culture_group = elven }
						}
						AND = {
							accepted_culture = dawn_elf
							NOT = { culture_group = elven }
						}
						AND = {
							accepted_culture = desert_elf
							NOT = { culture_group = elven }
						}
					}
				}
				change_unit_type = tech_east_elven
			}
			else = {
				change_unit_type = tech_elven
			}
		}
		
		else_if = {
			limit = {
				has_country_modifier = half_elven_administration
			}
			add_country_modifier = { 
				name = restructuring_military
				duration = 3650
			}
			add_country_modifier = { 
				name = half_elven_military
				duration = -1  
			}
			change_unit_type = tech_cannorian
		}
		
		else_if = {
			limit = {
				has_country_modifier = half_orcish_administration
			}
			add_country_modifier = { 
				name = restructuring_military
				duration = 3650
			}
			add_country_modifier = { 
				name = half_orcish_military
				duration = -1  
			}
			if = {
				limit = {
					OR = {
						capital_scope = { superregion = gerudia_superregion }
						primary_culture = grombar_half_orc
						primary_culture = grombar_orc
						primary_culture = gray_orc
						AND = {
							accepted_culture = grombar_half_orc
							NOT = { culture_is_half_orcish = yes }
						}
						AND = {
							accepted_culture = grombar_orc
							NOT = { culture_is_half_orcish = yes }
						}
						AND = {
							accepted_culture = gray_orc
							NOT = { culture_is_half_orcish = yes }
						}
					}
				}
				change_unit_type = tech_gerudian
			}
			else = {
				change_unit_type = tech_cannorian
			}
		}
		
		else_if = {
			limit = {
				has_country_modifier = troll_administration
			}
			add_country_modifier = { 
				name = restructuring_military
				duration = 3650
			}
			add_country_modifier = { 
				name = troll_military
				duration = -1  
			}
			change_unit_type = tech_troll	#may need to be changed to troll maybe
		}
		
		else_if = {
			limit = {
				has_country_modifier = gnollish_administration
			}
			add_country_modifier = { 
				name = restructuring_military
				duration = 3650
			}
			add_country_modifier = { 
				name = gnollish_military
				duration = -1  
			}
			change_unit_type = tech_gnollish
		}
		
		else_if = {
			limit = {
				has_country_modifier = goblin_administration
			}
			add_country_modifier = { 
				name = restructuring_military
				duration = 3650
			}
			add_country_modifier = { 
				name = goblin_military
				duration = -1  
			}
			if = {
				limit = {
					OR = {
						capital_scope = { continent = serpentspine }
						primary_culture = cave_goblin
						AND = {
							accepted_culture = cave_goblin
							NOT = { culture_group = goblin }
						}
					}
				}
				change_unit_type = tech_cave_goblin
			}
			else = {
				change_unit_type = tech_goblin
			}
		}
		
		else_if = {
			limit = {
				has_country_modifier = gnomish_administration
			}
			add_country_modifier = { 
				name = restructuring_military
				duration = 3650
			}
			add_country_modifier = { 
				name = gnomish_military
				duration = -1  
			}
			change_unit_type = tech_gnomish
		}
		
		else_if = {
			limit = {
				has_country_modifier = dwarven_administration
			}
			add_country_modifier = { 
				name = restructuring_military
				duration = 3650
			}
			add_country_modifier = { 
				name = dwarven_military
				duration = -1  
			}
			change_unit_type = tech_dwarven
		}
		
		else_if = {
			limit = {
				has_country_modifier = kobold_administration
			}
			add_country_modifier = { 
				name = restructuring_military
				duration = 3650
			}
			add_country_modifier = { 
				name = kobold_military
				duration = -1  
			}
			if = {
				limit = {
					OR = {
						capital_scope = { superregion = yanshen_superregion }
						capital_scope = { superregion = south_haless_superregion }
						capital_scope = { superregion = north_haless_superregion }
						capital_scope = { superregion = rahen_superregion }
						primary_culture = goldscale_kobold
						AND = {
							accepted_culture = goldscale_kobold
							NOT = { culture_group = kobold }
						}
					}
				}
				change_unit_type = tech_east_kobold
			}
			else = {
				change_unit_type = tech_kobold
			}
		}
		
		else_if = {
			limit = {
				has_country_modifier = ruinborn_administration
			}
			add_country_modifier = { 
				name = restructuring_military
				duration = 3650
			}
			add_country_modifier = { 
				name = ruinborn_military
				duration = -1  
			}
			if = {
				limit = {
					capital_scope = { superregion = ynn_superregion }
				}
				change_unit_type = tech_ynnic
			}
			else_if = {
				limit = {
					capital_scope = { superregion = eordand_superregion }
				}
				change_unit_type = tech_eordand
			}
			else_if = {
				limit = {
					capital_scope = { superregion = kheionai_superregion }
				}
				change_unit_type = tech_kheionai
			}
			else_if = {
				limit = {
					capital_scope = { superregion = greater_taychend_superregion }
				}
				change_unit_type = tech_taychendi
			}
			else_if = {
				limit = {
					OR = {
						capital_scope = { superregion = north_aelantir_superregion }
						capital_scope = { superregion = ruined_sea_superregion }
						capital_scope = { superregion = torn_sea_superregion }
					}
				}
				change_unit_type = tech_north_aelantiri
			}
			else_if = {
				limit = {
					OR = {
						capital_scope = { superregion = south_aelantir_superregion }
						capital_scope = { superregion = effelai_superregion }
					}
				}
				change_unit_type = tech_south_aelantiri
			}
			else = {
				change_unit_type = tech_north_aelantiri
			}
		}
		
		else_if = {
			limit = {
				has_country_modifier = harpy_administration
			}
			add_country_modifier = { 
				name = restructuring_military
				duration = 3650
			}
			add_country_modifier = { 
				name = harpy_military
				duration = -1  
			}
			if = {
				limit = {
					OR = {
						capital_scope = { superregion = yanshen_superregion }
						capital_scope = { superregion = south_haless_superregion }
						capital_scope = { superregion = north_haless_superregion }
						primary_culture = feng_harpy
						AND = {
							accepted_culture = feng_harpy
							NOT = { culture_group = harpy }
						}
					}
				}
				change_unit_type = tech_east_harpy
			}
			else = {
				change_unit_type = tech_harpy
			}
		}
		
		else_if = {
			limit = {
				has_country_modifier = halfling_administration
			}
			add_country_modifier = { 
				name = restructuring_military
				duration = 3650
			}
			add_country_modifier = { 
				name = halfling_military
				duration = -1  
			}
			change_unit_type = tech_cannorian	#may need their own halfling one in the future
		}
		
		else_if = {
			limit = {
				has_country_modifier = ogre_administration
			}
			add_country_modifier = { 
				name = restructuring_military
				duration = 3650
			}
			add_country_modifier = { 
				name = ogre_military
				duration = -1  
			}
			if = {
				limit = {
					OR = {
						capital_scope = { superregion = yanshen_superregion }
						capital_scope = { superregion = south_haless_superregion }
						capital_scope = { superregion = north_haless_superregion }
						capital_scope = { superregion = rahen_superregion }
						primary_culture = horned_ogre
						AND = {
							accepted_culture = horned_ogre
							NOT = { culture_group = ogre }
						}
					}
				}
				change_unit_type = tech_eastern_ogre 
			}
			else = {
				change_unit_type = tech_ogre	#may need custom one
			}
		}
		
		else_if = {
			limit = {
				has_country_modifier = centaur_administration
			}
			add_country_modifier = { 
				name = restructuring_military
				duration = 3650
			}
			add_country_modifier = { 
				name = centaur_military
				duration = -1  
			}
			change_unit_type = tech_centaur
		}
		
		else_if = {
			limit = {
				has_country_modifier = harimari_administration
			}
			add_country_modifier = { 
				name = restructuring_military
				duration = 3650
			}
			add_country_modifier = { 
				name = harimari_military
				duration = -1  
			}
			if = {
				limit = {
					OR = {
						capital_scope = { superregion = yanshen_superregion }
						capital_scope = { superregion = south_haless_superregion }
						capital_scope = { superregion = north_haless_superregion }
						primary_culture = east_harimari
						AND = {
							accepted_culture = east_harimari
							NOT = { culture_group = harimari }
						}
					}
				}
				change_unit_type = tech_east_harimari
			}
			else = {
				change_unit_type = tech_harimari
			}
		}
		
		else_if = {
			limit = {
				has_country_modifier = hobgoblin_administration
			}
			add_country_modifier = { 
				name = restructuring_military
				duration = 3650
			}
			add_country_modifier = { 
				name = hobgoblin_military
				duration = -1  
			}
			change_unit_type = tech_hobgoblin
		}

}



clear_racial_administration = {
	remove_country_modifier = elven_administration
	remove_country_modifier = dwarven_administration
	remove_country_modifier = gnomish_administration
	remove_country_modifier = half_orcish_administration
	remove_country_modifier = half_elven_administration
	remove_country_modifier = kobold_administration
	remove_country_modifier = troll_administration
	remove_country_modifier = halfling_administration
	remove_country_modifier = harpy_administration
	remove_country_modifier = human_administration
	remove_country_modifier = orcish_administration
	remove_country_modifier = goblin_administration
	remove_country_modifier = gnollish_administration
	remove_country_modifier = ruinborn_administration
	remove_country_modifier = centaur_administration
	remove_country_modifier = harimari_administration
	remove_country_modifier = ogre_administration
	remove_country_modifier = hobgoblin_administration
}

clear_racial_military = {
	remove_country_modifier = elven_military
	remove_country_modifier = dwarven_military
	remove_country_modifier = gnomish_military
	remove_country_modifier = half_orcish_military
	remove_country_modifier = half_elven_military
	remove_country_modifier = kobold_military
	remove_country_modifier = troll_military
	remove_country_modifier = halfling_military
	remove_country_modifier = harpy_military
	remove_country_modifier = human_military
	remove_country_modifier = orcish_military
	remove_country_modifier = goblin_military
	remove_country_modifier = gnollish_military
	remove_country_modifier = ruinborn_military
	remove_country_modifier = centaur_military
	remove_country_modifier = harimari_military
	remove_country_modifier = ogre_military
	remove_country_modifier = hobgoblin_military
	
	remove_country_modifier = undead_military
}

clear_racial_pop_migration_flags = {
	clr_country_flag = racial_pop_migrate_adjacent
	clr_country_flag = racial_pop_migrate_within_country
	clr_country_flag = racial_pop_migrate_outside_country
	
	clr_country_flag = racial_pop_migrate_colony
	
}

clear_racial_pop_tolerance_chance_flags = {
	clr_country_flag = racial_pop_small_increase
	clr_country_flag = racial_pop_medium_increase
	clr_country_flag = racial_pop_large_increase
	clr_country_flag = racial_pop_largest_increase
	
	clr_country_flag = racial_pop_small_decrease
	clr_country_flag = racial_pop_medium_decrease
	clr_country_flag = racial_pop_large_decrease
	clr_country_flag = racial_pop_largest_decrease
}

save_primary_culture = {
	export_to_variable = {
		which = my_primary_culture
		value = primary_culture
		who = ROOT
	}
}

lock_racial_admin = {
	custom_tooltip = locked_racial_administration_tt
	hidden_effect = {
		save_primary_culture = yes
		set_country_flag = locked_racial_administration
	}
}

# Dwarfs
small_increase_of_dwarven_tolerance_effect = {
	custom_tooltip = small_increase_in_dwarven_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = dwarven_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = dwarven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = dwarven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=dwarven }
		}
	}
}

medium_increase_of_dwarven_tolerance_effect = {
	custom_tooltip = medium_increase_in_dwarven_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = dwarven_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = dwarven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = dwarven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=dwarven }
		}
	}
}

large_increase_of_dwarven_tolerance_effect = {
	custom_tooltip = large_increase_in_dwarven_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = dwarven_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = dwarven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = dwarven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=dwarven }
		}
	}
}

largest_increase_of_dwarven_tolerance_effect = {
	custom_tooltip = largest_increase_in_dwarven_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = dwarven_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = dwarven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = dwarven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=dwarven }
		}
	}
}

small_decrease_of_dwarven_tolerance_effect = {
	custom_tooltip = small_decrease_in_dwarven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = dwarven_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = dwarven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = dwarven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=dwarven }
		}
	}
}

medium_decrease_of_dwarven_tolerance_effect = {
	custom_tooltip = medium_decrease_in_dwarven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = dwarven_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = dwarven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = dwarven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=dwarven }
		}
	}
}

large_decrease_of_dwarven_tolerance_effect = {
	custom_tooltip = large_decrease_in_dwarven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = dwarven_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = dwarven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = dwarven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=dwarven }
		}
	}
}

largest_decrease_of_dwarven_tolerance_effect = {
	custom_tooltip = largest_decrease_in_dwarven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = dwarven_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = dwarven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = dwarven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=dwarven }
		}
	}
}

add_dwarven_minority_size_effect = {
	custom_tooltip = add_dwarven_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = dwarven_minority_oppressed_small
			}
			remove_province_modifier = dwarven_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = dwarven_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = dwarven_minority_coexisting_small
			}
			remove_province_modifier = dwarven_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = dwarven_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = dwarven_minority_integrated_small
			}
			remove_province_modifier = dwarven_minority_integrated_small
			add_permanent_province_modifier = { 
				name = dwarven_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_dwarven_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_dwarven_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = dwarven_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_dwarven_minority_size_effect = {
	custom_tooltip = remove_dwarven_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = dwarven_minority_oppressed_small
			}
			remove_province_modifier = dwarven_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = dwarven_minority_oppressed_large
			}
			remove_province_modifier = dwarven_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = dwarven_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = dwarven_minority_coexisting_small
			}
			remove_province_modifier = dwarven_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = dwarven_minority_coexisting_large
			}
			remove_province_modifier = dwarven_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = dwarven_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = dwarven_minority_integrated_small
			}
			remove_province_modifier = dwarven_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = dwarven_minority_integrated_large
			}
			remove_province_modifier = dwarven_minority_integrated_large
			add_permanent_province_modifier = { 
				name = dwarven_minority_integrated_small
				duration = -1
			}
		}
	}
}

# Gnomes
small_increase_of_gnomish_tolerance_effect = {
	custom_tooltip = small_increase_in_gnomish_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = gnomish_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = gnomish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = gnomish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnomish }
		}
	}
}

medium_increase_of_gnomish_tolerance_effect = {
	custom_tooltip = medium_increase_in_gnomish_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = gnomish_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = gnomish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = gnomish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnomish }
		}
	}
}

large_increase_of_gnomish_tolerance_effect = {
	custom_tooltip = large_increase_in_gnomish_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = gnomish_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = gnomish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = gnomish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnomish }
		}
	}
}

largest_increase_of_gnomish_tolerance_effect = {
	custom_tooltip = largest_increase_in_gnomish_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = gnomish_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = gnomish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = gnomish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnomish }
		}
	}
}

small_decrease_of_gnomish_tolerance_effect = {
	custom_tooltip = small_decrease_in_gnomish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = gnomish_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = gnomish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = gnomish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnomish }
		}
	}
}

medium_decrease_of_gnomish_tolerance_effect = {
	custom_tooltip = medium_decrease_in_gnomish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = gnomish_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = gnomish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = gnomish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnomish }
		}
	}
}

large_decrease_of_gnomish_tolerance_effect = {
	custom_tooltip = large_decrease_in_gnomish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = gnomish_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = gnomish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = gnomish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnomish }
		}
	}
}

largest_decrease_of_gnomish_tolerance_effect = {
	custom_tooltip = largest_decrease_in_gnomish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = gnomish_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = gnomish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = gnomish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnomish }
		}
	}
}

add_gnomish_minority_size_effect = {
	custom_tooltip = add_gnomish_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = gnomish_minority_oppressed_small
			}
			remove_province_modifier = gnomish_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = gnomish_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = gnomish_minority_coexisting_small
			}
			remove_province_modifier = gnomish_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = gnomish_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = gnomish_minority_integrated_small
			}
			remove_province_modifier = gnomish_minority_integrated_small
			add_permanent_province_modifier = { 
				name = gnomish_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_gnomish_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_gnomish_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = gnomish_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_gnomish_minority_size_effect = {
	custom_tooltip = remove_gnomish_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = gnomish_minority_oppressed_small
			}
			remove_province_modifier = gnomish_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = gnomish_minority_oppressed_large
			}
			remove_province_modifier = gnomish_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = gnomish_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = gnomish_minority_coexisting_small
			}
			remove_province_modifier = gnomish_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = gnomish_minority_coexisting_large
			}
			remove_province_modifier = gnomish_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = gnomish_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = gnomish_minority_integrated_small
			}
			remove_province_modifier = gnomish_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = gnomish_minority_integrated_large
			}
			remove_province_modifier = gnomish_minority_integrated_large
			add_permanent_province_modifier = { 
				name = gnomish_minority_integrated_small
				duration = -1
			}
		}
	}
}

# Elven
small_increase_of_elven_tolerance_effect = {
	custom_tooltip = small_increase_in_elven_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = elven_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = elven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = elven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=elven }
		}
	}
}

medium_increase_of_elven_tolerance_effect = {
	custom_tooltip = medium_increase_in_elven_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = elven_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = elven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = elven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=elven }
		}
	}
}

large_increase_of_elven_tolerance_effect = {
	custom_tooltip = large_increase_in_elven_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = elven_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = elven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = elven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=elven }
		}
	}
}

largest_increase_of_elven_tolerance_effect = {
	custom_tooltip = largest_increase_in_elven_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = elven_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = elven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = elven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=elven }
		}
	}
}

small_decrease_of_elven_tolerance_effect = {
	custom_tooltip = small_decrease_in_elven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = elven_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = elven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = elven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=elven }
		}
	}
}

medium_decrease_of_elven_tolerance_effect = {
	custom_tooltip = medium_decrease_in_elven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = elven_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = elven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = elven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=elven }
		}
	}
}

large_decrease_of_elven_tolerance_effect = {
	custom_tooltip = large_decrease_in_elven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = elven_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = elven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = elven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=elven }
		}
	}
}

largest_decrease_of_elven_tolerance_effect = {
	custom_tooltip = largest_decrease_in_elven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = elven_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = elven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = elven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=elven }
		}
	}
}

add_elven_minority_size_effect = {
	custom_tooltip = add_elven_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = elven_minority_oppressed_small
			}
			remove_province_modifier = elven_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = elven_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = elven_minority_coexisting_small
			}
			remove_province_modifier = elven_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = elven_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = elven_minority_integrated_small
			}
			remove_province_modifier = elven_minority_integrated_small
			add_permanent_province_modifier = { 
				name = elven_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_elven_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_elven_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = elven_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_elven_minority_size_effect = {
	custom_tooltip = remove_elven_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = elven_minority_oppressed_small
			}
			remove_province_modifier = elven_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = elven_minority_oppressed_large
			}
			remove_province_modifier = elven_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = elven_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = elven_minority_coexisting_small
			}
			remove_province_modifier = elven_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = elven_minority_coexisting_large
			}
			remove_province_modifier = elven_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = elven_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = elven_minority_integrated_small
			}
			remove_province_modifier = elven_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = elven_minority_integrated_large
			}
			remove_province_modifier = elven_minority_integrated_large
			add_permanent_province_modifier = { 
				name = elven_minority_integrated_small
				duration = -1
			}
		}
	}
}


# Half-orcish
small_increase_of_half_orcish_tolerance_effect = {
	custom_tooltip = small_increase_in_half_orcish_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = half_orcish_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = half_orcish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = half_orcish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_orcish }
		}
	}
}

medium_increase_of_half_orcish_tolerance_effect = {
	custom_tooltip = medium_increase_in_half_orcish_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = half_orcish_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = half_orcish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = half_orcish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_orcish }
		}
	}
}

large_increase_of_half_orcish_tolerance_effect = {
	custom_tooltip = large_increase_in_half_orcish_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = half_orcish_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = half_orcish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = half_orcish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_orcish }
		}
	}
}

largest_increase_of_half_orcish_tolerance_effect = {
	custom_tooltip = largest_increase_in_half_orcish_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = half_orcish_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = half_orcish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = half_orcish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_orcish }
		}
	}
}

small_decrease_of_half_orcish_tolerance_effect = {
	custom_tooltip = small_decrease_in_half_orcish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = half_orcish_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = half_orcish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = half_orcish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_orcish }
		}
	}
}

medium_decrease_of_half_orcish_tolerance_effect = {
	custom_tooltip = medium_decrease_in_half_orcish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = half_orcish_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = half_orcish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = half_orcish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_orcish }
		}
	}
}

large_decrease_of_half_orcish_tolerance_effect = {
	custom_tooltip = large_decrease_in_half_orcish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = half_orcish_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = half_orcish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = half_orcish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_orcish }
		}
	}
}

largest_decrease_of_half_orcish_tolerance_effect = {
	custom_tooltip = largest_decrease_in_half_orcish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = half_orcish_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = half_orcish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = half_orcish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_orcish }
		}
	}
}

add_half_orcish_minority_size_effect = {
	custom_tooltip = add_half_orcish_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = half_orcish_minority_oppressed_small
			}
			remove_province_modifier = half_orcish_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = half_orcish_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = half_orcish_minority_coexisting_small
			}
			remove_province_modifier = half_orcish_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = half_orcish_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = half_orcish_minority_integrated_small
			}
			remove_province_modifier = half_orcish_minority_integrated_small
			add_permanent_province_modifier = { 
				name = half_orcish_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_half_orcish_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_half_orcish_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = half_orcish_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_half_orcish_minority_size_effect = {
	custom_tooltip = remove_half_orcish_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = half_orcish_minority_oppressed_small
			}
			remove_province_modifier = half_orcish_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = half_orcish_minority_oppressed_large
			}
			remove_province_modifier = half_orcish_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = half_orcish_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = half_orcish_minority_coexisting_small
			}
			remove_province_modifier = half_orcish_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = half_orcish_minority_coexisting_large
			}
			remove_province_modifier = half_orcish_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = half_orcish_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = half_orcish_minority_integrated_small
			}
			remove_province_modifier = half_orcish_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = half_orcish_minority_integrated_large
			}
			remove_province_modifier = half_orcish_minority_integrated_large
			add_permanent_province_modifier = { 
				name = half_orcish_minority_integrated_small
				duration = -1
			}
		}
	}
}

# Kobold
small_increase_of_kobold_tolerance_effect = {
	custom_tooltip = small_increase_in_kobold_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = kobold_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = kobold_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = kobold_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=kobold }
		}
	}
}

medium_increase_of_kobold_tolerance_effect = {
	custom_tooltip = medium_increase_in_kobold_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = kobold_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = kobold_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = kobold_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=kobold }
		}
	}
}

large_increase_of_kobold_tolerance_effect = {
	custom_tooltip = large_increase_in_kobold_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = kobold_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = kobold_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = kobold_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=kobold }
		}
	}
}

largest_increase_of_kobold_tolerance_effect = {
	custom_tooltip = largest_increase_in_kobold_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = kobold_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = kobold_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = kobold_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=kobold }
		}
	}
}

small_decrease_of_kobold_tolerance_effect = {
	custom_tooltip = small_decrease_in_kobold_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = kobold_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = kobold_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = kobold_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=kobold }
		}
	}
}

medium_decrease_of_kobold_tolerance_effect = {
	custom_tooltip = medium_decrease_in_kobold_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = kobold_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = kobold_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = kobold_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=kobold }
		}
	}
}

large_decrease_of_kobold_tolerance_effect = {
	custom_tooltip = large_decrease_in_kobold_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = kobold_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = kobold_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = kobold_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=kobold }
		}
	}
}

largest_decrease_of_kobold_tolerance_effect = {
	custom_tooltip = largest_decrease_in_kobold_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = kobold_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = kobold_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = kobold_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=kobold }
		}
	}
}

add_kobold_minority_size_effect = {
	custom_tooltip = add_kobold_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = kobold_minority_oppressed_small
			}
			remove_province_modifier = kobold_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = kobold_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = kobold_minority_coexisting_small
			}
			remove_province_modifier = kobold_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = kobold_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = kobold_minority_integrated_small
			}
			remove_province_modifier = kobold_minority_integrated_small
			add_permanent_province_modifier = { 
				name = kobold_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_kobold_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_kobold_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = kobold_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_kobold_minority_size_effect = {
	custom_tooltip = remove_kobold_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = kobold_minority_oppressed_small
			}
			remove_province_modifier = kobold_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = kobold_minority_oppressed_large
			}
			remove_province_modifier = kobold_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = kobold_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = kobold_minority_coexisting_small
			}
			remove_province_modifier = kobold_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = kobold_minority_coexisting_large
			}
			remove_province_modifier = kobold_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = kobold_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = kobold_minority_integrated_small
			}
			remove_province_modifier = kobold_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = kobold_minority_integrated_large
			}
			remove_province_modifier = kobold_minority_integrated_large
			add_permanent_province_modifier = { 
				name = kobold_minority_integrated_small
				duration = -1
			}
		}
	}
}


# Gnolls
small_increase_of_gnollish_tolerance_effect = {
	custom_tooltip = small_increase_in_gnollish_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = gnollish_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = gnollish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = gnollish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnollish }
		}
	}
}

medium_increase_of_gnollish_tolerance_effect = {
	custom_tooltip = medium_increase_in_gnollish_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = gnollish_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = gnollish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = gnollish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnollish }
		}
	}
}

large_increase_of_gnollish_tolerance_effect = {
	custom_tooltip = large_increase_in_gnollish_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = gnollish_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = gnollish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = gnollish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnollish }
		}
	}
}

largest_increase_of_gnollish_tolerance_effect = {
	custom_tooltip = largest_increase_in_gnollish_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = gnollish_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = gnollish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = gnollish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnollish }
		}
	}
}

small_decrease_of_gnollish_tolerance_effect = {
	custom_tooltip = small_decrease_in_gnollish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = gnollish_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = gnollish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = gnollish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnollish }
		}
	}
}

medium_decrease_of_gnollish_tolerance_effect = {
	custom_tooltip = medium_decrease_in_gnollish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = gnollish_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = gnollish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = gnollish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnollish }
		}
	}
}

large_decrease_of_gnollish_tolerance_effect = {
	custom_tooltip = large_decrease_in_gnollish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = gnollish_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = gnollish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = gnollish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnollish }
		}
	}
}

largest_decrease_of_gnollish_tolerance_effect = {
	custom_tooltip = largest_decrease_in_gnollish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = gnollish_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = gnollish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = gnollish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=gnollish }
		}
	}
}

add_gnollish_minority_size_effect = {
	custom_tooltip = add_gnollish_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = gnollish_minority_oppressed_small
			}
			remove_province_modifier = gnollish_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = gnollish_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = gnollish_minority_coexisting_small
			}
			remove_province_modifier = gnollish_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = gnollish_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = gnollish_minority_integrated_small
			}
			remove_province_modifier = gnollish_minority_integrated_small
			add_permanent_province_modifier = { 
				name = gnollish_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_gnollish_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_gnollish_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = gnollish_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_gnollish_minority_size_effect = {
	custom_tooltip = remove_gnollish_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = gnollish_minority_oppressed_small
			}
			remove_province_modifier = gnollish_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = gnollish_minority_oppressed_large
			}
			remove_province_modifier = gnollish_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = gnollish_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = gnollish_minority_coexisting_small
			}
			remove_province_modifier = gnollish_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = gnollish_minority_coexisting_large
			}
			remove_province_modifier = gnollish_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = gnollish_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = gnollish_minority_integrated_small
			}
			remove_province_modifier = gnollish_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = gnollish_minority_integrated_large
			}
			remove_province_modifier = gnollish_minority_integrated_large
			add_permanent_province_modifier = { 
				name = gnollish_minority_integrated_small
				duration = -1
			}
		}
	}
}

# Orc
small_increase_of_orcish_tolerance_effect = {
	custom_tooltip = small_increase_in_orcish_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = orcish_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = orcish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = orcish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=orcish }
		}
	}
}

medium_increase_of_orcish_tolerance_effect = {
	custom_tooltip = medium_increase_in_orcish_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = orcish_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = orcish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = orcish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=orcish }
		}
	}
}

large_increase_of_orcish_tolerance_effect = {
	custom_tooltip = large_increase_in_orcish_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = orcish_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = orcish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = orcish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=orcish }
		}
	}
}

largest_increase_of_orcish_tolerance_effect = {
	custom_tooltip = largest_increase_in_orcish_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = orcish_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = orcish_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = orcish_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=orcish }
		}
	}
}

small_decrease_of_orcish_tolerance_effect = {
	custom_tooltip = small_decrease_in_orcish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = orcish_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = orcish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = orcish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=orcish }
		}
	}
}

medium_decrease_of_orcish_tolerance_effect = {
	custom_tooltip = medium_decrease_in_orcish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = orcish_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = orcish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = orcish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=orcish }
		}
	}
}

large_decrease_of_orcish_tolerance_effect = {
	custom_tooltip = large_decrease_in_orcish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = orcish_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = orcish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = orcish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=orcish }
		}
	}
}

largest_decrease_of_orcish_tolerance_effect = {
	custom_tooltip = largest_decrease_in_orcish_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = orcish_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = orcish_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = orcish_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=orcish }
		}
	}
}

add_orcish_minority_size_effect = {
	custom_tooltip = add_orcish_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = orcish_minority_oppressed_small
			}
			remove_province_modifier = orcish_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = orcish_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = orcish_minority_coexisting_small
			}
			remove_province_modifier = orcish_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = orcish_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = orcish_minority_integrated_small
			}
			remove_province_modifier = orcish_minority_integrated_small
			add_permanent_province_modifier = { 
				name = orcish_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_orcish_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_orcish_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = orcish_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_orcish_minority_size_effect = {
	custom_tooltip = remove_orcish_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = orcish_minority_oppressed_small
			}
			remove_province_modifier = orcish_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = orcish_minority_oppressed_large
			}
			remove_province_modifier = orcish_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = orcish_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = orcish_minority_coexisting_small
			}
			remove_province_modifier = orcish_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = orcish_minority_coexisting_large
			}
			remove_province_modifier = orcish_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = orcish_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = orcish_minority_integrated_small
			}
			remove_province_modifier = orcish_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = orcish_minority_integrated_large
			}
			remove_province_modifier = orcish_minority_integrated_large
			add_permanent_province_modifier = { 
				name = orcish_minority_integrated_small
				duration = -1
			}
		}
	}
}

# Halfling
small_increase_of_halfling_tolerance_effect = {
	custom_tooltip = small_increase_in_halfling_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = halfling_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = halfling_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = halfling_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=halfling }
		}
	}
}

medium_increase_of_halfling_tolerance_effect = {
	custom_tooltip = medium_increase_in_halfling_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = halfling_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = halfling_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = halfling_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=halfling }
		}
	}
}

large_increase_of_halfling_tolerance_effect = {
	custom_tooltip = large_increase_in_halfling_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = halfling_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = halfling_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = halfling_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=halfling }
		}
	}
}

largest_increase_of_halfling_tolerance_effect = {
	custom_tooltip = largest_increase_in_halfling_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = halfling_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = halfling_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = halfling_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=halfling }
		}
	}
}

small_decrease_of_halfling_tolerance_effect = {
	custom_tooltip = small_decrease_in_halfling_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = halfling_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = halfling_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = halfling_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=halfling }
		}
	}
}

medium_decrease_of_halfling_tolerance_effect = {
	custom_tooltip = medium_decrease_in_halfling_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = halfling_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = halfling_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = halfling_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=halfling }
		}
	}
}

large_decrease_of_halfling_tolerance_effect = {
	custom_tooltip = large_decrease_in_halfling_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = halfling_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = halfling_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = halfling_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=halfling }
		}
	}
}

largest_decrease_of_halfling_tolerance_effect = {
	custom_tooltip = largest_decrease_in_halfling_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = halfling_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = halfling_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = halfling_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=halfling }
		}
	}
}

add_halfling_minority_size_effect = {
	custom_tooltip = add_halfling_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = halfling_minority_oppressed_small
			}
			remove_province_modifier = halfling_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = halfling_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = halfling_minority_coexisting_small
			}
			remove_province_modifier = halfling_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = halfling_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = halfling_minority_integrated_small
			}
			remove_province_modifier = halfling_minority_integrated_small
			add_permanent_province_modifier = { 
				name = halfling_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_halfling_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_halfling_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = halfling_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_halfling_minority_size_effect = {
	custom_tooltip = remove_halfling_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = halfling_minority_oppressed_small
			}
			remove_province_modifier = halfling_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = halfling_minority_oppressed_large
			}
			remove_province_modifier = halfling_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = halfling_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = halfling_minority_coexisting_small
			}
			remove_province_modifier = halfling_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = halfling_minority_coexisting_large
			}
			remove_province_modifier = halfling_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = halfling_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = halfling_minority_integrated_small
			}
			remove_province_modifier = halfling_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = halfling_minority_integrated_large
			}
			remove_province_modifier = halfling_minority_integrated_large
			add_permanent_province_modifier = { 
				name = halfling_minority_integrated_small
				duration = -1
			}
		}
	}
}

# Humans
small_increase_of_human_tolerance_effect = {
	custom_tooltip = small_increase_in_human_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = human_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = human_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = human_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=human }
		}
	}
}

medium_increase_of_human_tolerance_effect = {
	custom_tooltip = medium_increase_in_human_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = human_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = human_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = human_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=human }
		}
	}
}

large_increase_of_human_tolerance_effect = {
	custom_tooltip = large_increase_in_human_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = human_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = human_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = human_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=human }
		}
	}
}

largest_increase_of_human_tolerance_effect = {
	custom_tooltip = largest_increase_in_human_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = human_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = human_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = human_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=human }
		}
	}
}

small_decrease_of_human_tolerance_effect = {
	custom_tooltip = small_decrease_in_human_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = human_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = human_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = human_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=human }
		}
	}
}

medium_decrease_of_human_tolerance_effect = {
	custom_tooltip = medium_decrease_in_human_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = human_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = human_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = human_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=human }
		}
	}
}

large_decrease_of_human_tolerance_effect = {
	custom_tooltip = large_decrease_in_human_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = human_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = human_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = human_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=human }
		}
	}
}

largest_decrease_of_human_tolerance_effect = {
	custom_tooltip = largest_decrease_in_human_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = human_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = human_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = human_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=human }
		}
	}
}

add_human_minority_size_effect = {
	custom_tooltip = add_human_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = human_minority_oppressed_small
			}
			remove_province_modifier = human_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = human_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = human_minority_coexisting_small
			}
			remove_province_modifier = human_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = human_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = human_minority_integrated_small
			}
			remove_province_modifier = human_minority_integrated_small
			add_permanent_province_modifier = { 
				name = human_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_human_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_human_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = human_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_human_minority_size_effect = {
	custom_tooltip = remove_human_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = human_minority_oppressed_small
			}
			remove_province_modifier = human_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = human_minority_oppressed_large
			}
			remove_province_modifier = human_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = human_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = human_minority_coexisting_small
			}
			remove_province_modifier = human_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = human_minority_coexisting_large
			}
			remove_province_modifier = human_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = human_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = human_minority_integrated_small
			}
			remove_province_modifier = human_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = human_minority_integrated_large
			}
			remove_province_modifier = human_minority_integrated_large
			add_permanent_province_modifier = { 
				name = human_minority_integrated_small
				duration = -1
			}
		}
	}
}


# Half Elf
small_increase_of_half_elven_tolerance_effect = {
	custom_tooltip = small_increase_in_half_elven_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = half_elven_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = half_elven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = half_elven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_elven }
		}
	}
}

medium_increase_of_half_elven_tolerance_effect = {
	custom_tooltip = medium_increase_in_half_elven_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = half_elven_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = half_elven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = half_elven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_elven }
		}
	}
}

large_increase_of_half_elven_tolerance_effect = {
	custom_tooltip = large_increase_in_half_elven_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = half_elven_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = half_elven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = half_elven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_elven }
		}
	}
}

largest_increase_of_half_elven_tolerance_effect = {
	custom_tooltip = largest_increase_in_half_elven_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = half_elven_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = half_elven_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = half_elven_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_elven }
		}
	}
}

small_decrease_of_half_elven_tolerance_effect = {
	custom_tooltip = small_decrease_in_half_elven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = half_elven_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = half_elven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = half_elven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_elven }
		}
	}
}

medium_decrease_of_half_elven_tolerance_effect = {
	custom_tooltip = medium_decrease_in_half_elven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = half_elven_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = half_elven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = half_elven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_elven }
		}
	}
}

large_decrease_of_half_elven_tolerance_effect = {
	custom_tooltip = large_decrease_in_half_elven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = half_elven_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = half_elven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = half_elven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_elven }
		}
	}
}

largest_decrease_of_half_elven_tolerance_effect = {
	custom_tooltip = largest_decrease_in_half_elven_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = half_elven_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = half_elven_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = half_elven_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=half_elven }
		}
	}
}

add_half_elven_minority_size_effect = {
	custom_tooltip = add_half_elven_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = half_elven_minority_oppressed_small
			}
			remove_province_modifier = half_elven_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = half_elven_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = half_elven_minority_coexisting_small
			}
			remove_province_modifier = half_elven_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = half_elven_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = half_elven_minority_integrated_small
			}
			remove_province_modifier = half_elven_minority_integrated_small
			add_permanent_province_modifier = { 
				name = half_elven_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_half_elven_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_half_elven_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = half_elven_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_half_elven_minority_size_effect = {
	custom_tooltip = remove_half_elven_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = half_elven_minority_oppressed_small
			}
			remove_province_modifier = half_elven_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = half_elven_minority_oppressed_large
			}
			remove_province_modifier = half_elven_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = half_elven_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = half_elven_minority_coexisting_small
			}
			remove_province_modifier = half_elven_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = half_elven_minority_coexisting_large
			}
			remove_province_modifier = half_elven_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = half_elven_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = half_elven_minority_integrated_small
			}
			remove_province_modifier = half_elven_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = half_elven_minority_integrated_large
			}
			remove_province_modifier = half_elven_minority_integrated_large
			add_permanent_province_modifier = { 
				name = half_elven_minority_integrated_small
				duration = -1
			}
		}
	}
}


# Ruinborn
small_increase_of_ruinborn_tolerance_effect = {
	custom_tooltip = small_increase_in_ruinborn_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = ruinborn_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = ruinborn_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = ruinborn_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ruinborn }
		}
	}
}

medium_increase_of_ruinborn_tolerance_effect = {
	custom_tooltip = medium_increase_in_ruinborn_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = ruinborn_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = ruinborn_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = ruinborn_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ruinborn }
		}
	}
}

large_increase_of_ruinborn_tolerance_effect = {
	custom_tooltip = large_increase_in_ruinborn_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = ruinborn_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = ruinborn_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = ruinborn_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ruinborn }
		}
	}
}

largest_increase_of_ruinborn_tolerance_effect = {
	custom_tooltip = largest_increase_in_ruinborn_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = ruinborn_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = ruinborn_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = ruinborn_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ruinborn }
		}
	}
}

small_decrease_of_ruinborn_tolerance_effect = {
	custom_tooltip = small_decrease_in_ruinborn_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = ruinborn_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = ruinborn_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = ruinborn_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ruinborn }
		}
	}
}

medium_decrease_of_ruinborn_tolerance_effect = {
	custom_tooltip = medium_decrease_in_ruinborn_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = ruinborn_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = ruinborn_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = ruinborn_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ruinborn }
		}
	}
}

large_decrease_of_ruinborn_tolerance_effect = {
	custom_tooltip = large_decrease_in_ruinborn_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = ruinborn_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = ruinborn_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = ruinborn_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ruinborn }
		}
	}
}

largest_decrease_of_ruinborn_tolerance_effect = {
	custom_tooltip = largest_decrease_in_ruinborn_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = ruinborn_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = ruinborn_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = ruinborn_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ruinborn }
		}
	}
}

add_ruinborn_minority_size_effect = {
	custom_tooltip = add_ruinborn_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = ruinborn_minority_oppressed_small
			}
			remove_province_modifier = ruinborn_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = ruinborn_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = ruinborn_minority_coexisting_small
			}
			remove_province_modifier = ruinborn_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = ruinborn_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = ruinborn_minority_integrated_small
			}
			remove_province_modifier = ruinborn_minority_integrated_small
			add_permanent_province_modifier = { 
				name = ruinborn_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_ruinborn_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_ruinborn_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = ruinborn_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_ruinborn_minority_size_effect = {
	custom_tooltip = remove_ruinborn_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = ruinborn_minority_oppressed_small
			}
			remove_province_modifier = ruinborn_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = ruinborn_minority_oppressed_large
			}
			remove_province_modifier = ruinborn_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = ruinborn_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = ruinborn_minority_coexisting_small
			}
			remove_province_modifier = ruinborn_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = ruinborn_minority_coexisting_large
			}
			remove_province_modifier = ruinborn_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = ruinborn_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = ruinborn_minority_integrated_small
			}
			remove_province_modifier = ruinborn_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = ruinborn_minority_integrated_large
			}
			remove_province_modifier = ruinborn_minority_integrated_large
			add_permanent_province_modifier = { 
				name = ruinborn_minority_integrated_small
				duration = -1
			}
		}
	}
}

# Goblins
small_increase_of_goblin_tolerance_effect = {
	custom_tooltip = small_increase_in_goblin_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = goblin_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = goblin_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = goblin_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=goblin }
		}
	}
}

medium_increase_of_goblin_tolerance_effect = {
	custom_tooltip = medium_increase_in_goblin_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = goblin_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = goblin_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = goblin_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=goblin }
		}
	}
}

large_increase_of_goblin_tolerance_effect = {
	custom_tooltip = large_increase_in_goblin_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = goblin_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = goblin_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = goblin_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=goblin }
		}
	}
}

largest_increase_of_goblin_tolerance_effect = {
	custom_tooltip = largest_increase_in_goblin_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = goblin_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = goblin_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = goblin_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=goblin }
		}
	}
}

small_decrease_of_goblin_tolerance_effect = {
	custom_tooltip = small_decrease_in_goblin_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = goblin_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = goblin_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = goblin_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=goblin }
		}
	}
}

medium_decrease_of_goblin_tolerance_effect = {
	custom_tooltip = medium_decrease_in_goblin_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = goblin_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = goblin_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = goblin_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=goblin }
		}
	}
}

large_decrease_of_goblin_tolerance_effect = {
	custom_tooltip = large_decrease_in_goblin_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = goblin_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = goblin_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = goblin_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=goblin }
		}
	}
}

largest_decrease_of_goblin_tolerance_effect = {
	custom_tooltip = largest_decrease_in_goblin_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = goblin_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = goblin_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = goblin_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=goblin }
		}
	}
}

add_goblin_minority_size_effect = {
	custom_tooltip = add_goblin_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = goblin_minority_oppressed_small
			}
			remove_province_modifier = goblin_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = goblin_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = goblin_minority_coexisting_small
			}
			remove_province_modifier = goblin_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = goblin_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = goblin_minority_integrated_small
			}
			remove_province_modifier = goblin_minority_integrated_small
			add_permanent_province_modifier = { 
				name = goblin_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_goblin_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_goblin_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = goblin_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_goblin_minority_size_effect = {
	custom_tooltip = remove_goblin_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = goblin_minority_oppressed_small
			}
			remove_province_modifier = goblin_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = goblin_minority_oppressed_large
			}
			remove_province_modifier = goblin_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = goblin_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = goblin_minority_coexisting_small
			}
			remove_province_modifier = goblin_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = goblin_minority_coexisting_large
			}
			remove_province_modifier = goblin_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = goblin_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = goblin_minority_integrated_small
			}
			remove_province_modifier = goblin_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = goblin_minority_integrated_large
			}
			remove_province_modifier = goblin_minority_integrated_large
			add_permanent_province_modifier = { 
				name = goblin_minority_integrated_small
				duration = -1
			}
		}
	}
}


# Harpy
small_increase_of_harpy_tolerance_effect = {
	custom_tooltip = small_increase_in_harpy_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = harpy_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = harpy_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = harpy_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harpy }
		}
	}
}

medium_increase_of_harpy_tolerance_effect = {
	custom_tooltip = medium_increase_in_harpy_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = harpy_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = harpy_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = harpy_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harpy }
		}
	}
}

large_increase_of_harpy_tolerance_effect = {
	custom_tooltip = large_increase_in_harpy_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = harpy_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = harpy_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = harpy_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harpy }
		}
	}
}

largest_increase_of_harpy_tolerance_effect = {
	custom_tooltip = largest_increase_in_harpy_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = harpy_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = harpy_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = harpy_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harpy }
		}
	}
}

small_decrease_of_harpy_tolerance_effect = {
	custom_tooltip = small_decrease_in_harpy_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = harpy_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = harpy_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = harpy_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harpy }
		}
	}
}

medium_decrease_of_harpy_tolerance_effect = {
	custom_tooltip = medium_decrease_in_harpy_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = harpy_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = harpy_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = harpy_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harpy }
		}
	}
}

large_decrease_of_harpy_tolerance_effect = {
	custom_tooltip = large_decrease_in_harpy_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = harpy_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = harpy_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = harpy_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harpy }
		}
	}
}

largest_decrease_of_harpy_tolerance_effect = {
	custom_tooltip = largest_decrease_in_harpy_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = harpy_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = harpy_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = harpy_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harpy }
		}
	}
}

add_harpy_minority_size_effect = {
	custom_tooltip = add_harpy_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = harpy_minority_oppressed_small
			}
			remove_province_modifier = harpy_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = harpy_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting
		else_if = {
			limit = {
				has_province_modifier = harpy_minority_coexisting_small
			}
			remove_province_modifier = harpy_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = harpy_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated
		else_if = {
			limit = {
				has_province_modifier = harpy_minority_integrated_small
			}
			remove_province_modifier = harpy_minority_integrated_small
			add_permanent_province_modifier = { 
				name = harpy_minority_integrated_large 
				duration = -1
			}
		}
		
		else_if = {
			limit = {
				has_harpy_majority_trigger = yes
			}
		}
		
		else_if = {
			limit = {
				has_harpy_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = harpy_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_harpy_minority_size_effect = {
	custom_tooltip = remove_harpy_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = harpy_minority_oppressed_small
			}
			remove_province_modifier = harpy_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = harpy_minority_oppressed_large
			}
			remove_province_modifier = harpy_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = harpy_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = harpy_minority_coexisting_small
			}
			remove_province_modifier = harpy_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = harpy_minority_coexisting_large
			}
			remove_province_modifier = harpy_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = harpy_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = harpy_minority_integrated_small
			}
			remove_province_modifier = harpy_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = harpy_minority_integrated_large
			}
			remove_province_modifier = harpy_minority_integrated_large
			add_permanent_province_modifier = { 
				name = harpy_minority_integrated_small
				duration = -1
			}
		}
	}
}


# Troll
small_increase_of_troll_tolerance_effect = {
	custom_tooltip = small_increase_in_troll_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = troll_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = troll_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = troll_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=troll }
		}
	}
}

medium_increase_of_troll_tolerance_effect = {
	custom_tooltip = medium_increase_in_troll_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = troll_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = troll_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = troll_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=troll }
		}
	}
}

large_increase_of_troll_tolerance_effect = {
	custom_tooltip = large_increase_in_troll_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = troll_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = troll_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = troll_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=troll }
		}
	}
}

largest_increase_of_troll_tolerance_effect = {
	custom_tooltip = largest_increase_in_troll_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = troll_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = troll_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = troll_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=troll }
		}
	}
}

small_decrease_of_troll_tolerance_effect = {
	custom_tooltip = small_decrease_in_troll_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = troll_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = troll_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = troll_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=troll }
		}
	}
}

medium_decrease_of_troll_tolerance_effect = {
	custom_tooltip = medium_decrease_in_troll_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = troll_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = troll_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = troll_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=troll }
		}
	}
}

large_decrease_of_troll_tolerance_effect = {
	custom_tooltip = large_decrease_in_troll_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = troll_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = troll_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = troll_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=troll }
		}
	}
}

largest_decrease_of_troll_tolerance_effect = {
	custom_tooltip = largest_decrease_in_troll_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = troll_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = troll_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = troll_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=troll }
		}
	}
}

add_troll_minority_size_effect = {
	custom_tooltip = add_troll_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed - if you have an oppressed small it becomes large
		if = {
			limit = {
				has_province_modifier = troll_minority_oppressed_small
			}
			remove_province_modifier = troll_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = troll_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting - if you have an coexisting small it becomes large
		else_if = {
			limit = {
				has_province_modifier = troll_minority_coexisting_small
			}
			remove_province_modifier = troll_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = troll_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated - if you have an integrated small it becomes large
		else_if = {
			limit = {
				has_province_modifier = troll_minority_integrated_small
			}
			remove_province_modifier = troll_minority_integrated_small
			add_permanent_province_modifier = { 
				name = troll_minority_integrated_large 
				duration = -1
			}
		}
		
		#Doesnt add if the province is a majority
		else_if = {
			limit = {
				has_troll_majority_trigger = yes
			}
		}
		
		#Final clause, if you have no minority just add a small one. It's coexisting as default which is fine as its updated next available tick to the country's actual tolerance.
		else_if = {
			limit = {
				has_troll_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = troll_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_troll_minority_size_effect = {
	custom_tooltip = remove_troll_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = troll_minority_oppressed_small
			}
			remove_province_modifier = troll_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = troll_minority_oppressed_large
			}
			remove_province_modifier = troll_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = troll_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = troll_minority_coexisting_small
			}
			remove_province_modifier = troll_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = troll_minority_coexisting_large
			}
			remove_province_modifier = troll_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = troll_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = troll_minority_integrated_small
			}
			remove_province_modifier = troll_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = troll_minority_integrated_large
			}
			remove_province_modifier = troll_minority_integrated_large
			add_permanent_province_modifier = { 
				name = troll_minority_integrated_small
				duration = -1
			}
		}
	}
}


# Ogre
small_increase_of_ogre_tolerance_effect = {
	custom_tooltip = small_increase_in_ogre_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = ogre_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = ogre_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = ogre_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ogre }
		}
	}
}

medium_increase_of_ogre_tolerance_effect = {
	custom_tooltip = medium_increase_in_ogre_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = ogre_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = ogre_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = ogre_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ogre }
		}
	}
}

large_increase_of_ogre_tolerance_effect = {
	custom_tooltip = large_increase_in_ogre_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = ogre_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = ogre_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = ogre_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ogre }
		}
	}
}

largest_increase_of_ogre_tolerance_effect = {
	custom_tooltip = largest_increase_in_ogre_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = ogre_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = ogre_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = ogre_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ogre }
		}
	}
}

small_decrease_of_ogre_tolerance_effect = {
	custom_tooltip = small_decrease_in_ogre_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = ogre_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = ogre_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = ogre_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ogre }
		}
	}
}

medium_decrease_of_ogre_tolerance_effect = {
	custom_tooltip = medium_decrease_in_ogre_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = ogre_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = ogre_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = ogre_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ogre }
		}
	}
}

large_decrease_of_ogre_tolerance_effect = {
	custom_tooltip = large_decrease_in_ogre_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = ogre_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = ogre_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = ogre_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ogre }
		}
	}
}

largest_decrease_of_ogre_tolerance_effect = {
	custom_tooltip = largest_decrease_in_ogre_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = ogre_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = ogre_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = ogre_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=ogre }
		}
	}
}

add_ogre_minority_size_effect = {
	custom_tooltip = add_ogre_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed - if you have an oppressed small it becomes large
		if = {
			limit = {
				has_province_modifier = ogre_minority_oppressed_small
			}
			remove_province_modifier = ogre_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = ogre_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting - if you have an coexisting small it becomes large
		else_if = {
			limit = {
				has_province_modifier = ogre_minority_coexisting_small
			}
			remove_province_modifier = ogre_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = ogre_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated - if you have an integrated small it becomes large
		else_if = {
			limit = {
				has_province_modifier = ogre_minority_integrated_small
			}
			remove_province_modifier = ogre_minority_integrated_small
			add_permanent_province_modifier = { 
				name = ogre_minority_integrated_large 
				duration = -1
			}
		}
		
		#Doesnt add if the province is a majority
		else_if = {
			limit = {
				has_ogre_majority_trigger = yes
			}
		}
		
		#Final clause, if you have no minority just add a small one. It's coexisting as default which is fine as its updated next available tick to the country's actual tolerance.
		else_if = {
			limit = {
				has_ogre_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = ogre_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_ogre_minority_size_effect = {
	custom_tooltip = remove_ogre_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = ogre_minority_oppressed_small
			}
			remove_province_modifier = ogre_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = ogre_minority_oppressed_large
			}
			remove_province_modifier = ogre_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = ogre_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = ogre_minority_coexisting_small
			}
			remove_province_modifier = ogre_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = ogre_minority_coexisting_large
			}
			remove_province_modifier = ogre_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = ogre_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = ogre_minority_integrated_small
			}
			remove_province_modifier = ogre_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = ogre_minority_integrated_large
			}
			remove_province_modifier = ogre_minority_integrated_large
			add_permanent_province_modifier = { 
				name = ogre_minority_integrated_small
				duration = -1
			}
		}
	}
}


# Harimari
small_increase_of_harimari_tolerance_effect = {
	custom_tooltip = small_increase_in_harimari_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = harimari_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = harimari_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = harimari_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harimari }
		}
	}
}

medium_increase_of_harimari_tolerance_effect = {
	custom_tooltip = medium_increase_in_harimari_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = harimari_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = harimari_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = harimari_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harimari }
		}
	}
}

large_increase_of_harimari_tolerance_effect = {
	custom_tooltip = large_increase_in_harimari_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = harimari_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = harimari_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = harimari_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harimari }
		}
	}
}

largest_increase_of_harimari_tolerance_effect = {
	custom_tooltip = largest_increase_in_harimari_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = harimari_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = harimari_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = harimari_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harimari }
		}
	}
}

small_decrease_of_harimari_tolerance_effect = {
	custom_tooltip = small_decrease_in_harimari_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = harimari_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = harimari_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = harimari_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harimari }
		}
	}
}

medium_decrease_of_harimari_tolerance_effect = {
	custom_tooltip = medium_decrease_in_harimari_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = harimari_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = harimari_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = harimari_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harimari }
		}
	}
}

large_decrease_of_harimari_tolerance_effect = {
	custom_tooltip = large_decrease_in_harimari_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = harimari_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = harimari_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = harimari_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harimari }
		}
	}
}

largest_decrease_of_harimari_tolerance_effect = {
	custom_tooltip = largest_decrease_in_harimari_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = harimari_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = harimari_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = harimari_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=harimari }
		}
	}
}

add_harimari_minority_size_effect = {
	custom_tooltip = add_harimari_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed - if you have an oppressed small it becomes large
		if = {
			limit = {
				has_province_modifier = harimari_minority_oppressed_small
			}
			remove_province_modifier = harimari_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = harimari_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting - if you have an coexisting small it becomes large
		else_if = {
			limit = {
				has_province_modifier = harimari_minority_coexisting_small
			}
			remove_province_modifier = harimari_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = harimari_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated - if you have an integrated small it becomes large
		else_if = {
			limit = {
				has_province_modifier = harimari_minority_integrated_small
			}
			remove_province_modifier = harimari_minority_integrated_small
			add_permanent_province_modifier = { 
				name = harimari_minority_integrated_large 
				duration = -1
			}
		}
		
		#Doesnt add if the province is a majority
		else_if = {
			limit = {
				has_harimari_majority_trigger = yes
			}
		}
		
		#Final clause, if you have no minority just add a small one. It's coexisting as default which is fine as its updated next available tick to the country's actual tolerance.
		else_if = {
			limit = {
				has_harimari_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = harimari_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_harimari_minority_size_effect = {
	custom_tooltip = remove_harimari_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = harimari_minority_oppressed_small
			}
			remove_province_modifier = harimari_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = harimari_minority_oppressed_large
			}
			remove_province_modifier = harimari_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = harimari_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = harimari_minority_coexisting_small
			}
			remove_province_modifier = harimari_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = harimari_minority_coexisting_large
			}
			remove_province_modifier = harimari_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = harimari_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = harimari_minority_integrated_small
			}
			remove_province_modifier = harimari_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = harimari_minority_integrated_large
			}
			remove_province_modifier = harimari_minority_integrated_large
			add_permanent_province_modifier = { 
				name = harimari_minority_integrated_small
				duration = -1
			}
		}
	}
}




# Centaur
small_increase_of_centaur_tolerance_effect = {
	custom_tooltip = small_increase_in_centaur_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = centaur_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = centaur_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = centaur_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=centaur }
		}
	}
}

medium_increase_of_centaur_tolerance_effect = {
	custom_tooltip = medium_increase_in_centaur_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = centaur_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = centaur_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = centaur_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=centaur }
		}
	}
}

large_increase_of_centaur_tolerance_effect = {
	custom_tooltip = large_increase_in_centaur_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = centaur_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = centaur_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = centaur_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=centaur }
		}
	}
}

largest_increase_of_centaur_tolerance_effect = {
	custom_tooltip = largest_increase_in_centaur_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = centaur_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = centaur_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = centaur_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=centaur }
		}
	}
}

small_decrease_of_centaur_tolerance_effect = {
	custom_tooltip = small_decrease_in_centaur_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = centaur_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = centaur_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = centaur_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=centaur }
		}
	}
}

medium_decrease_of_centaur_tolerance_effect = {
	custom_tooltip = medium_decrease_in_centaur_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = centaur_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = centaur_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = centaur_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=centaur }
		}
	}
}

large_decrease_of_centaur_tolerance_effect = {
	custom_tooltip = large_decrease_in_centaur_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = centaur_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = centaur_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = centaur_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=centaur }
		}
	}
}

largest_decrease_of_centaur_tolerance_effect = {
	custom_tooltip = largest_decrease_in_centaur_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = centaur_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = centaur_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = centaur_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=centaur }
		}
	}
}

add_centaur_minority_size_effect = {
	custom_tooltip = add_centaur_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed - if you have an oppressed small it becomes large
		if = {
			limit = {
				has_province_modifier = centaur_minority_oppressed_small
			}
			remove_province_modifier = centaur_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = centaur_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting - if you have an coexisting small it becomes large
		else_if = {
			limit = {
				has_province_modifier = centaur_minority_coexisting_small
			}
			remove_province_modifier = centaur_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = centaur_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated - if you have an integrated small it becomes large
		else_if = {
			limit = {
				has_province_modifier = centaur_minority_integrated_small
			}
			remove_province_modifier = centaur_minority_integrated_small
			add_permanent_province_modifier = { 
				name = centaur_minority_integrated_large 
				duration = -1
			}
		}
		
		#Doesnt add if the province is a majority
		else_if = {
			limit = {
				has_centaur_majority_trigger = yes
			}
		}
		
		#Final clause, if you have no minority just add a small one. It's coexisting as default which is fine as its updated next available tick to the country's actual tolerance.
		else_if = {
			limit = {
				has_centaur_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = centaur_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_centaur_minority_size_effect = {
	custom_tooltip = remove_centaur_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = centaur_minority_oppressed_small
			}
			remove_province_modifier = centaur_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = centaur_minority_oppressed_large
			}
			remove_province_modifier = centaur_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = centaur_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = centaur_minority_coexisting_small
			}
			remove_province_modifier = centaur_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = centaur_minority_coexisting_large
			}
			remove_province_modifier = centaur_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = centaur_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = centaur_minority_integrated_small
			}
			remove_province_modifier = centaur_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = centaur_minority_integrated_large
			}
			remove_province_modifier = centaur_minority_integrated_large
			add_permanent_province_modifier = { 
				name = centaur_minority_integrated_small
				duration = -1
			}
		}
	}
}



# Hobgoblin
small_increase_of_hobgoblin_tolerance_effect = {
	custom_tooltip = small_increase_in_hobgoblin_tolerance_tooltip
	hidden_effect = {
		# Increases by 5
		change_variable = {
			which = hobgoblin_race_tolerance
			value = 5
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = hobgoblin_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = hobgoblin_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=hobgoblin }
		}
	}
}

medium_increase_of_hobgoblin_tolerance_effect = {
	custom_tooltip = medium_increase_in_hobgoblin_tolerance_tooltip
	hidden_effect = {
		# Increases by 10
		change_variable = {
			which = hobgoblin_race_tolerance
			value = 10
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = hobgoblin_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = hobgoblin_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=hobgoblin }
		}
	}
}

large_increase_of_hobgoblin_tolerance_effect = {
	custom_tooltip = large_increase_in_hobgoblin_tolerance_tooltip
	hidden_effect = {
		# Increases by 15
		change_variable = {
			which = hobgoblin_race_tolerance
			value = 15
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = hobgoblin_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = hobgoblin_race_tolerance
				which = max_race_tolerance
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=hobgoblin }
		}
	}
}

largest_increase_of_hobgoblin_tolerance_effect = {
	custom_tooltip = largest_increase_in_hobgoblin_tolerance_tooltip
	hidden_effect = {
		# Increases by 20
		change_variable = {
			which = hobgoblin_race_tolerance
			value = 20
		}
		if = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = {
				check_variable = {
					which = hobgoblin_race_tolerance
					which = max_race_tolerance
				}
			}
			set_variable = {
				which = hobgoblin_race_tolerance
				which = max_race_tolerance
			}
		}
	}
}

small_decrease_of_hobgoblin_tolerance_effect = {
	custom_tooltip = small_decrease_in_hobgoblin_tolerance_tooltip
	hidden_effect = {
		# Decreases by 5
		subtract_variable = {
			which = hobgoblin_race_tolerance
			value = 5
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = hobgoblin_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = hobgoblin_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=hobgoblin }
		}
	}
}

medium_decrease_of_hobgoblin_tolerance_effect = {
	custom_tooltip = medium_decrease_in_hobgoblin_tolerance_tooltip
	hidden_effect = {
		# Decreases by 10
		subtract_variable = {
			which = hobgoblin_race_tolerance
			value = 10
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = hobgoblin_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = hobgoblin_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=hobgoblin }
		}
	}
}

large_decrease_of_hobgoblin_tolerance_effect = {
	custom_tooltip = large_decrease_in_hobgoblin_tolerance_tooltip
	hidden_effect = {
		# Decreases by 15
		subtract_variable = {
			which = hobgoblin_race_tolerance
			value = 15
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = hobgoblin_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = hobgoblin_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=hobgoblin }
		}
	}
}

largest_decrease_of_hobgoblin_tolerance_effect = {
	custom_tooltip = largest_decrease_in_hobgoblin_tolerance_tooltip
	hidden_effect = {
		# Decreases by 20
		subtract_variable = {
			which = hobgoblin_race_tolerance
			value = 20
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {
				NOT = {
					check_variable = {
						which = hobgoblin_race_tolerance
						value = 1
					}
				}
			}
			set_variable = {
				which = hobgoblin_race_tolerance
				value = 1
			}
		}
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race=hobgoblin }
		}
	}
}

add_hobgoblin_minority_size_effect = {
	custom_tooltip = add_hobgoblin_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed - if you have an oppressed small it becomes large
		if = {
			limit = {
				has_province_modifier = hobgoblin_minority_oppressed_small
			}
			remove_province_modifier = hobgoblin_minority_oppressed_small
			add_permanent_province_modifier = { 
				name = hobgoblin_minority_oppressed_large 
				duration = -1
			}
		}
	
		#Impact Coexisting - if you have an coexisting small it becomes large
		else_if = {
			limit = {
				has_province_modifier = hobgoblin_minority_coexisting_small
			}
			remove_province_modifier = hobgoblin_minority_coexisting_small
			add_permanent_province_modifier = { 
				name = hobgoblin_minority_coexisting_large 
				duration = -1
			}
		}
		
		#Impact Integrated - if you have an integrated small it becomes large
		else_if = {
			limit = {
				has_province_modifier = hobgoblin_minority_integrated_small
			}
			remove_province_modifier = hobgoblin_minority_integrated_small
			add_permanent_province_modifier = { 
				name = hobgoblin_minority_integrated_large 
				duration = -1
			}
		}
		
		#Doesnt add if the province is a majority
		else_if = {
			limit = {
				has_hobgoblin_majority_trigger = yes
			}
		}
		
		#Final clause, if you have no minority just add a small one. It's coexisting as default which is fine as its updated next available tick to the country's actual tolerance.
		else_if = {
			limit = {
				has_hobgoblin_minority_trigger = no
			}
			add_permanent_province_modifier = { 
				name = hobgoblin_minority_coexisting_small
				duration = -1
			}
		}
	}
}

remove_hobgoblin_minority_size_effect = {
	custom_tooltip = remove_hobgoblin_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {
				has_province_modifier = hobgoblin_minority_oppressed_small
			}
			remove_province_modifier = hobgoblin_minority_oppressed_small
		}
		if = {
			limit = {
				has_province_modifier = hobgoblin_minority_oppressed_large
			}
			remove_province_modifier = hobgoblin_minority_oppressed_large
			add_permanent_province_modifier = { 
				name = hobgoblin_minority_oppressed_small
				duration = -1
			}
		}
	
		#Impact Coexisting
		if = {
			limit = {
				has_province_modifier = hobgoblin_minority_coexisting_small
			}
			remove_province_modifier = hobgoblin_minority_coexisting_small
		}
		if = {
			limit = {
				has_province_modifier = hobgoblin_minority_coexisting_large
			}
			remove_province_modifier = hobgoblin_minority_coexisting_large
			add_permanent_province_modifier = { 
				name = hobgoblin_minority_coexisting_small
				duration = -1
			}
		}
		
		#Impact Integrated
		if = {
			limit = {
				has_province_modifier = hobgoblin_minority_integrated_small
			}
			remove_province_modifier = hobgoblin_minority_integrated_small
		}
		if = {
			limit = {
				has_province_modifier = hobgoblin_minority_integrated_large
			}
			remove_province_modifier = hobgoblin_minority_integrated_large
			add_permanent_province_modifier = { 
				name = hobgoblin_minority_integrated_small
				duration = -1
			}
		}
	}
}

#This should be use in a province scope
update_racial_province_modifier_tolerance = {
	#AddNewRaceHere
		
	#Elven
	if = {
		limit = { has_unmatching_elven_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_elven_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = elven_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = elven_minority_oppressed_small
				remove_province_modifier = elven_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = elven_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = elven_minority_oppressed_large
				remove_province_modifier = elven_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_elven_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = elven_majority_integrated
					duration = -1
				}
				remove_province_modifier = elven_majority_oppressed
				remove_province_modifier = elven_majority_coexisting
				remove_province_modifier = elven_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_elven_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = elven_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = elven_minority_oppressed_small
				remove_province_modifier = elven_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = elven_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = elven_minority_oppressed_large
				remove_province_modifier = elven_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_elven_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = elven_majority_coexisting
					duration = -1
				}
				remove_province_modifier = elven_majority_oppressed
				remove_province_modifier = elven_majority_integrated
				remove_province_modifier = elven_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_elven_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = elven_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = elven_minority_integrated_small
				remove_province_modifier = elven_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = elven_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = elven_minority_integrated_large
				remove_province_modifier = elven_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_elven_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = elven_majority_oppressed
					duration = -1
				}
				remove_province_modifier = elven_majority_integrated
				remove_province_modifier = elven_majority_primary
				remove_province_modifier = elven_majority_coexisting
			}
		}
	}

	
	#Dwarven
	if = {
		limit = { has_unmatching_dwarven_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_dwarven_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_dwarven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = dwarven_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = dwarven_minority_oppressed_small
				remove_province_modifier = dwarven_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_dwarven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = dwarven_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = dwarven_minority_oppressed_large
				remove_province_modifier = dwarven_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_dwarven_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = dwarven_majority_integrated
					duration = -1
				}
				remove_province_modifier = dwarven_majority_oppressed
				remove_province_modifier = dwarven_majority_coexisting
				remove_province_modifier = dwarven_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_dwarven_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_dwarven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = dwarven_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = dwarven_minority_oppressed_small
				remove_province_modifier = dwarven_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_dwarven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = dwarven_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = dwarven_minority_oppressed_large
				remove_province_modifier = dwarven_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_dwarven_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = dwarven_majority_coexisting
					duration = -1
				}
				remove_province_modifier = dwarven_majority_oppressed
				remove_province_modifier = dwarven_majority_integrated
				remove_province_modifier = dwarven_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_dwarven_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_dwarven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = dwarven_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = dwarven_minority_integrated_small
				remove_province_modifier = dwarven_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_dwarven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = dwarven_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = dwarven_minority_integrated_large
				remove_province_modifier = dwarven_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_dwarven_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = dwarven_majority_oppressed
					duration = -1
				}
				remove_province_modifier = dwarven_majority_integrated
				remove_province_modifier = dwarven_majority_primary
				remove_province_modifier = dwarven_majority_coexisting
			}
		}
	}

	
	#Halfling
	if = {
		limit = { has_unmatching_halfling_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_halfling_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_halfling_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = halfling_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = halfling_minority_oppressed_small
				remove_province_modifier = halfling_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_halfling_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = halfling_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = halfling_minority_oppressed_large
				remove_province_modifier = halfling_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_halfling_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = halfling_majority_integrated
					duration = -1
				}
				remove_province_modifier = halfling_majority_oppressed
				remove_province_modifier = halfling_majority_coexisting
				remove_province_modifier = halfling_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_halfling_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_halfling_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = halfling_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = halfling_minority_oppressed_small
				remove_province_modifier = halfling_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_halfling_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = halfling_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = halfling_minority_oppressed_large
				remove_province_modifier = halfling_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_halfling_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = halfling_majority_coexisting
					duration = -1
				}
				remove_province_modifier = halfling_majority_oppressed
				remove_province_modifier = halfling_majority_integrated
				remove_province_modifier = halfling_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_halfling_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_halfling_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = halfling_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = halfling_minority_integrated_small
				remove_province_modifier = halfling_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_halfling_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = halfling_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = halfling_minority_integrated_large
				remove_province_modifier = halfling_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_halfling_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = halfling_majority_oppressed
					duration = -1
				}
				remove_province_modifier = halfling_majority_integrated
				remove_province_modifier = halfling_majority_primary
				remove_province_modifier = halfling_majority_coexisting
			}
		}
	}

	
	#Gnomish
	if = {
		limit = { has_unmatching_gnomish_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_gnomish_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_gnomish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnomish_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = gnomish_minority_oppressed_small
				remove_province_modifier = gnomish_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_gnomish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnomish_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = gnomish_minority_oppressed_large
				remove_province_modifier = gnomish_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_gnomish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnomish_majority_integrated
					duration = -1
				}
				remove_province_modifier = gnomish_majority_oppressed
				remove_province_modifier = gnomish_majority_coexisting
				remove_province_modifier = gnomish_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_gnomish_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_gnomish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnomish_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = gnomish_minority_oppressed_small
				remove_province_modifier = gnomish_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_gnomish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnomish_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = gnomish_minority_oppressed_large
				remove_province_modifier = gnomish_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_gnomish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnomish_majority_coexisting
					duration = -1
				}
				remove_province_modifier = gnomish_majority_oppressed
				remove_province_modifier = gnomish_majority_integrated
				remove_province_modifier = gnomish_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_gnomish_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_gnomish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnomish_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = gnomish_minority_integrated_small
				remove_province_modifier = gnomish_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_gnomish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnomish_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = gnomish_minority_integrated_large
				remove_province_modifier = gnomish_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_gnomish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnomish_majority_oppressed
					duration = -1
				}
				remove_province_modifier = gnomish_majority_integrated
				remove_province_modifier = gnomish_majority_primary
				remove_province_modifier = gnomish_majority_coexisting
			}
		}
	}

	
	#Half Orcish
	if = {
		limit = { has_unmatching_half_orcish_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_half_orcish_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_half_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_orcish_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = half_orcish_minority_oppressed_small
				remove_province_modifier = half_orcish_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_half_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_orcish_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = half_orcish_minority_oppressed_large
				remove_province_modifier = half_orcish_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_half_orcish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_orcish_majority_integrated
					duration = -1
				}
				remove_province_modifier = half_orcish_majority_oppressed
				remove_province_modifier = half_orcish_majority_coexisting
				remove_province_modifier = half_orcish_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_half_orcish_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_half_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_orcish_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = half_orcish_minority_oppressed_small
				remove_province_modifier = half_orcish_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_half_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_orcish_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = half_orcish_minority_oppressed_large
				remove_province_modifier = half_orcish_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_half_orcish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_orcish_majority_coexisting
					duration = -1
				}
				remove_province_modifier = half_orcish_majority_oppressed
				remove_province_modifier = half_orcish_majority_integrated
				remove_province_modifier = half_orcish_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_half_orcish_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_half_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_orcish_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = half_orcish_minority_integrated_small
				remove_province_modifier = half_orcish_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_half_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_orcish_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = half_orcish_minority_integrated_large
				remove_province_modifier = half_orcish_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_half_orcish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_orcish_majority_oppressed
					duration = -1
				}
				remove_province_modifier = half_orcish_majority_integrated
				remove_province_modifier = half_orcish_majority_primary
				remove_province_modifier = half_orcish_majority_coexisting
			}
		}
	}

	
	#Kobold
	if = {
		limit = { has_unmatching_kobold_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_kobold_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_kobold_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = kobold_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = kobold_minority_oppressed_small
				remove_province_modifier = kobold_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_kobold_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = kobold_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = kobold_minority_oppressed_large
				remove_province_modifier = kobold_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_kobold_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = kobold_majority_integrated
					duration = -1
				}
				remove_province_modifier = kobold_majority_oppressed
				remove_province_modifier = kobold_majority_coexisting
				remove_province_modifier = kobold_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_kobold_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_kobold_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = kobold_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = kobold_minority_oppressed_small
				remove_province_modifier = kobold_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_kobold_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = kobold_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = kobold_minority_oppressed_large
				remove_province_modifier = kobold_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_kobold_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = kobold_majority_coexisting
					duration = -1
				}
				remove_province_modifier = kobold_majority_oppressed
				remove_province_modifier = kobold_majority_integrated
				remove_province_modifier = kobold_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_kobold_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_kobold_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = kobold_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = kobold_minority_integrated_small
				remove_province_modifier = kobold_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_kobold_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = kobold_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = kobold_minority_integrated_large
				remove_province_modifier = kobold_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_kobold_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = kobold_majority_oppressed
					duration = -1
				}
				remove_province_modifier = kobold_majority_integrated
				remove_province_modifier = kobold_majority_primary
				remove_province_modifier = kobold_majority_coexisting
			}
		}
	}

	
	#Orcish
	if = {
		limit = { has_unmatching_orcish_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_orcish_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = orcish_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = orcish_minority_oppressed_small
				remove_province_modifier = orcish_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = orcish_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = orcish_minority_oppressed_large
				remove_province_modifier = orcish_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_orcish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = orcish_majority_integrated
					duration = -1
				}
				remove_province_modifier = orcish_majority_oppressed
				remove_province_modifier = orcish_majority_coexisting
				remove_province_modifier = orcish_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_orcish_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = orcish_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = orcish_minority_oppressed_small
				remove_province_modifier = orcish_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = orcish_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = orcish_minority_oppressed_large
				remove_province_modifier = orcish_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_orcish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = orcish_majority_coexisting
					duration = -1
				}
				remove_province_modifier = orcish_majority_oppressed
				remove_province_modifier = orcish_majority_integrated
				remove_province_modifier = orcish_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_orcish_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = orcish_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = orcish_minority_integrated_small
				remove_province_modifier = orcish_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_orcish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = orcish_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = orcish_minority_integrated_large
				remove_province_modifier = orcish_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_orcish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = orcish_majority_oppressed
					duration = -1
				}
				remove_province_modifier = orcish_majority_integrated
				remove_province_modifier = orcish_majority_primary
				remove_province_modifier = orcish_majority_coexisting
			}
		}
	}

	
	#Human
	if = {
		limit = { has_unmatching_human_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_human_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_human_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = human_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = human_minority_oppressed_small
				remove_province_modifier = human_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_human_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = human_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = human_minority_oppressed_large
				remove_province_modifier = human_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_human_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = human_majority_integrated
					duration = -1
				}
				remove_province_modifier = human_majority_oppressed
				remove_province_modifier = human_majority_coexisting
				remove_province_modifier = human_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_human_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_human_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = human_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = human_minority_oppressed_small
				remove_province_modifier = human_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_human_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = human_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = human_minority_oppressed_large
				remove_province_modifier = human_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_human_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = human_majority_coexisting
					duration = -1
				}
				remove_province_modifier = human_majority_oppressed
				remove_province_modifier = human_majority_integrated
				remove_province_modifier = human_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_human_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_human_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = human_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = human_minority_integrated_small
				remove_province_modifier = human_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_human_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = human_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = human_minority_integrated_large
				remove_province_modifier = human_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_human_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = human_majority_oppressed
					duration = -1
				}
				remove_province_modifier = human_majority_integrated
				remove_province_modifier = human_majority_primary
				remove_province_modifier = human_majority_coexisting
			}
		}
	}

	
	#Gnollish
	if = {
		limit = { has_unmatching_gnollish_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_gnollish_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_gnollish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnollish_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = gnollish_minority_oppressed_small
				remove_province_modifier = gnollish_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_gnollish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnollish_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = gnollish_minority_oppressed_large
				remove_province_modifier = gnollish_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_gnollish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnollish_majority_integrated
					duration = -1
				}
				remove_province_modifier = gnollish_majority_oppressed
				remove_province_modifier = gnollish_majority_coexisting
				remove_province_modifier = gnollish_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_gnollish_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_gnollish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnollish_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = gnollish_minority_oppressed_small
				remove_province_modifier = gnollish_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_gnollish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnollish_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = gnollish_minority_oppressed_large
				remove_province_modifier = gnollish_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_gnollish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnollish_majority_coexisting
					duration = -1
				}
				remove_province_modifier = gnollish_majority_oppressed
				remove_province_modifier = gnollish_majority_integrated
				remove_province_modifier = gnollish_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_gnollish_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_gnollish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnollish_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = gnollish_minority_integrated_small
				remove_province_modifier = gnollish_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_gnollish_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnollish_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = gnollish_minority_integrated_large
				remove_province_modifier = gnollish_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_gnollish_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = gnollish_majority_oppressed
					duration = -1
				}
				remove_province_modifier = gnollish_majority_integrated
				remove_province_modifier = gnollish_majority_primary
				remove_province_modifier = gnollish_majority_coexisting
			}
		}
	}

	
	#Ruinborn
	if = {
		limit = { has_unmatching_ruinborn_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_ruinborn_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_ruinborn_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ruinborn_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = ruinborn_minority_oppressed_small
				remove_province_modifier = ruinborn_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_ruinborn_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ruinborn_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = ruinborn_minority_oppressed_large
				remove_province_modifier = ruinborn_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_ruinborn_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ruinborn_majority_integrated
					duration = -1
				}
				remove_province_modifier = ruinborn_majority_oppressed
				remove_province_modifier = ruinborn_majority_coexisting
				remove_province_modifier = ruinborn_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_ruinborn_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_ruinborn_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ruinborn_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = ruinborn_minority_oppressed_small
				remove_province_modifier = ruinborn_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_ruinborn_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ruinborn_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = ruinborn_minority_oppressed_large
				remove_province_modifier = ruinborn_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_ruinborn_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ruinborn_majority_coexisting
					duration = -1
				}
				remove_province_modifier = ruinborn_majority_oppressed
				remove_province_modifier = ruinborn_majority_integrated
				remove_province_modifier = ruinborn_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_ruinborn_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_ruinborn_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ruinborn_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = ruinborn_minority_integrated_small
				remove_province_modifier = ruinborn_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_ruinborn_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ruinborn_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = ruinborn_minority_integrated_large
				remove_province_modifier = ruinborn_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_ruinborn_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ruinborn_majority_oppressed
					duration = -1
				}
				remove_province_modifier = ruinborn_majority_integrated
				remove_province_modifier = ruinborn_majority_primary
				remove_province_modifier = ruinborn_majority_coexisting
			}
		}
	}

	
	#Goblin
	if = {
		limit = { has_unmatching_goblin_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_goblin_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_goblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = goblin_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = goblin_minority_oppressed_small
				remove_province_modifier = goblin_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_goblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = goblin_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = goblin_minority_oppressed_large
				remove_province_modifier = goblin_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_goblin_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = goblin_majority_integrated
					duration = -1
				}
				remove_province_modifier = goblin_majority_oppressed
				remove_province_modifier = goblin_majority_coexisting
				remove_province_modifier = goblin_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_goblin_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_goblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = goblin_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = goblin_minority_oppressed_small
				remove_province_modifier = goblin_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_goblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = goblin_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = goblin_minority_oppressed_large
				remove_province_modifier = goblin_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_goblin_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = goblin_majority_coexisting
					duration = -1
				}
				remove_province_modifier = goblin_majority_oppressed
				remove_province_modifier = goblin_majority_integrated
				remove_province_modifier = goblin_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_goblin_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_goblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = goblin_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = goblin_minority_integrated_small
				remove_province_modifier = goblin_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_goblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = goblin_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = goblin_minority_integrated_large
				remove_province_modifier = goblin_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_goblin_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = goblin_majority_oppressed
					duration = -1
				}
				remove_province_modifier = goblin_majority_integrated
				remove_province_modifier = goblin_majority_primary
				remove_province_modifier = goblin_majority_coexisting
			}
		}
	}

	
	#Harpy
	if = {
		limit = { has_unmatching_harpy_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_harpy_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_harpy_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harpy_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = harpy_minority_oppressed_small
				remove_province_modifier = harpy_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_harpy_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harpy_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = harpy_minority_oppressed_large
				remove_province_modifier = harpy_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_harpy_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harpy_majority_integrated
					duration = -1
				}
				remove_province_modifier = harpy_majority_oppressed
				remove_province_modifier = harpy_majority_coexisting
				remove_province_modifier = harpy_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_harpy_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_harpy_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harpy_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = harpy_minority_oppressed_small
				remove_province_modifier = harpy_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_harpy_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harpy_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = harpy_minority_oppressed_large
				remove_province_modifier = harpy_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_harpy_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harpy_majority_coexisting
					duration = -1
				}
				remove_province_modifier = harpy_majority_oppressed
				remove_province_modifier = harpy_majority_integrated
				remove_province_modifier = harpy_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_harpy_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_harpy_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harpy_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = harpy_minority_integrated_small
				remove_province_modifier = harpy_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_harpy_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harpy_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = harpy_minority_integrated_large
				remove_province_modifier = harpy_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_harpy_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harpy_majority_oppressed
					duration = -1
				}
				remove_province_modifier = harpy_majority_integrated
				remove_province_modifier = harpy_majority_primary
				remove_province_modifier = harpy_majority_coexisting
			}
		}
	}

	
	#Troll
	if = {
		limit = { has_unmatching_troll_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_troll_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_troll_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = troll_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = troll_minority_oppressed_small
				remove_province_modifier = troll_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_troll_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = troll_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = troll_minority_oppressed_large
				remove_province_modifier = troll_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_troll_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = troll_majority_integrated
					duration = -1
				}
				remove_province_modifier = troll_majority_oppressed
				remove_province_modifier = troll_majority_coexisting
				remove_province_modifier = troll_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_troll_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_troll_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = troll_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = troll_minority_oppressed_small
				remove_province_modifier = troll_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_troll_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = troll_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = troll_minority_oppressed_large
				remove_province_modifier = troll_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_troll_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = troll_majority_coexisting
					duration = -1
				}
				remove_province_modifier = troll_majority_oppressed
				remove_province_modifier = troll_majority_integrated
				remove_province_modifier = troll_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_troll_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_troll_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = troll_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = troll_minority_integrated_small
				remove_province_modifier = troll_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_troll_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = troll_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = troll_minority_integrated_large
				remove_province_modifier = troll_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_troll_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = troll_majority_oppressed
					duration = -1
				}
				remove_province_modifier = troll_majority_integrated
				remove_province_modifier = troll_majority_primary
				remove_province_modifier = troll_majority_coexisting
			}
		}
	}

	
	#Half-elven
	if = {
		limit = { has_unmatching_half_elven_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_half_elven_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_half_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_elven_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = half_elven_minority_oppressed_small
				remove_province_modifier = half_elven_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_half_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_elven_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = half_elven_minority_oppressed_large
				remove_province_modifier = half_elven_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_half_elven_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_elven_majority_integrated
					duration = -1
				}
				remove_province_modifier = half_elven_majority_oppressed
				remove_province_modifier = half_elven_majority_coexisting
				remove_province_modifier = half_elven_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_half_elven_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_half_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_elven_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = half_elven_minority_oppressed_small
				remove_province_modifier = half_elven_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_half_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_elven_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = half_elven_minority_oppressed_large
				remove_province_modifier = half_elven_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_half_elven_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_elven_majority_coexisting
					duration = -1
				}
				remove_province_modifier = half_elven_majority_oppressed
				remove_province_modifier = half_elven_majority_integrated
				remove_province_modifier = half_elven_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_half_elven_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_half_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_elven_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = half_elven_minority_integrated_small
				remove_province_modifier = half_elven_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_half_elven_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_elven_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = half_elven_minority_integrated_large
				remove_province_modifier = half_elven_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_half_elven_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = half_elven_majority_oppressed
					duration = -1
				}
				remove_province_modifier = half_elven_majority_integrated
				remove_province_modifier = half_elven_majority_primary
				remove_province_modifier = half_elven_majority_coexisting
			}
		}
	}

	
	#Harimari
	if = {
		limit = { has_unmatching_harimari_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_harimari_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_harimari_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harimari_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = harimari_minority_oppressed_small
				remove_province_modifier = harimari_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_harimari_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harimari_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = harimari_minority_oppressed_large
				remove_province_modifier = harimari_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_harimari_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harimari_majority_integrated
					duration = -1
				}
				remove_province_modifier = harimari_majority_oppressed
				remove_province_modifier = harimari_majority_coexisting
				remove_province_modifier = harimari_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_harimari_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_harimari_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harimari_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = harimari_minority_oppressed_small
				remove_province_modifier = harimari_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_harimari_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harimari_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = harimari_minority_oppressed_large
				remove_province_modifier = harimari_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_harimari_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harimari_majority_coexisting
					duration = -1
				}
				remove_province_modifier = harimari_majority_oppressed
				remove_province_modifier = harimari_majority_integrated
				remove_province_modifier = harimari_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_harimari_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_harimari_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harimari_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = harimari_minority_integrated_small
				remove_province_modifier = harimari_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_harimari_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harimari_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = harimari_minority_integrated_large
				remove_province_modifier = harimari_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_harimari_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = harimari_majority_oppressed
					duration = -1
				}
				remove_province_modifier = harimari_majority_integrated
				remove_province_modifier = harimari_majority_primary
				remove_province_modifier = harimari_majority_coexisting
			}
		}
	}

	
	#Hobgoblin
	if = {
		limit = { has_unmatching_hobgoblin_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_hobgoblin_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_hobgoblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = hobgoblin_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = hobgoblin_minority_oppressed_small
				remove_province_modifier = hobgoblin_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_hobgoblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = hobgoblin_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = hobgoblin_minority_oppressed_large
				remove_province_modifier = hobgoblin_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_hobgoblin_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = hobgoblin_majority_integrated
					duration = -1
				}
				remove_province_modifier = hobgoblin_majority_oppressed
				remove_province_modifier = hobgoblin_majority_coexisting
				remove_province_modifier = hobgoblin_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_hobgoblin_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_hobgoblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = hobgoblin_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = hobgoblin_minority_oppressed_small
				remove_province_modifier = hobgoblin_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_hobgoblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = hobgoblin_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = hobgoblin_minority_oppressed_large
				remove_province_modifier = hobgoblin_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_hobgoblin_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = hobgoblin_majority_coexisting
					duration = -1
				}
				remove_province_modifier = hobgoblin_majority_oppressed
				remove_province_modifier = hobgoblin_majority_integrated
				remove_province_modifier = hobgoblin_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_hobgoblin_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_hobgoblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = hobgoblin_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = hobgoblin_minority_integrated_small
				remove_province_modifier = hobgoblin_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_hobgoblin_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = hobgoblin_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = hobgoblin_minority_integrated_large
				remove_province_modifier = hobgoblin_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_hobgoblin_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = hobgoblin_majority_oppressed
					duration = -1
				}
				remove_province_modifier = hobgoblin_majority_integrated
				remove_province_modifier = hobgoblin_majority_primary
				remove_province_modifier = hobgoblin_majority_coexisting
			}
		}
	}

	
	#Centaur
	if = {
		limit = { has_unmatching_centaur_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_centaur_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_centaur_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = centaur_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = centaur_minority_oppressed_small
				remove_province_modifier = centaur_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_centaur_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = centaur_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = centaur_minority_oppressed_large
				remove_province_modifier = centaur_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_centaur_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = centaur_majority_integrated
					duration = -1
				}
				remove_province_modifier = centaur_majority_oppressed
				remove_province_modifier = centaur_majority_coexisting
				remove_province_modifier = centaur_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_centaur_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_centaur_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = centaur_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = centaur_minority_oppressed_small
				remove_province_modifier = centaur_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_centaur_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = centaur_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = centaur_minority_oppressed_large
				remove_province_modifier = centaur_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_centaur_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = centaur_majority_coexisting
					duration = -1
				}
				remove_province_modifier = centaur_majority_oppressed
				remove_province_modifier = centaur_majority_integrated
				remove_province_modifier = centaur_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_centaur_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_centaur_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = centaur_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = centaur_minority_integrated_small
				remove_province_modifier = centaur_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_centaur_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = centaur_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = centaur_minority_integrated_large
				remove_province_modifier = centaur_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_centaur_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = centaur_majority_oppressed
					duration = -1
				}
				remove_province_modifier = centaur_majority_integrated
				remove_province_modifier = centaur_majority_primary
				remove_province_modifier = centaur_majority_coexisting
			}
		}
	}

	
	#Ogre
	if = {
		limit = { has_unmatching_ogre_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_ogre_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_ogre_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ogre_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = ogre_minority_oppressed_small
				remove_province_modifier = ogre_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_ogre_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ogre_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = ogre_minority_oppressed_large
				remove_province_modifier = ogre_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_ogre_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ogre_majority_integrated
					duration = -1
				}
				remove_province_modifier = ogre_majority_oppressed
				remove_province_modifier = ogre_majority_coexisting
				remove_province_modifier = ogre_majority_primary
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_ogre_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_ogre_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ogre_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = ogre_minority_oppressed_small
				remove_province_modifier = ogre_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_ogre_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ogre_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = ogre_minority_oppressed_large
				remove_province_modifier = ogre_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_ogre_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ogre_majority_coexisting
					duration = -1
				}
				remove_province_modifier = ogre_majority_oppressed
				remove_province_modifier = ogre_majority_integrated
				remove_province_modifier = ogre_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_ogre_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_ogre_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ogre_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = ogre_minority_integrated_small
				remove_province_modifier = ogre_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_ogre_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ogre_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = ogre_minority_integrated_large
				remove_province_modifier = ogre_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_ogre_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = ogre_majority_oppressed
					duration = -1
				}
				remove_province_modifier = ogre_majority_integrated
				remove_province_modifier = ogre_majority_primary
				remove_province_modifier = ogre_majority_coexisting
			}
		}
	}

	make_majority_primary = yes
}

#This should be use in a province scope
update_specific_racial_province_modifier_tolerance = { #$race$ = the race you're checking for
	
	# REB = { change_variable = { specificRacialTolerance = 1 } }
	if = {
		limit = { has_unmatching_$race$_tolerance_trigger = yes }
		#High Tolerance - Integrated
		if = {
			limit = { owner = { high_tolerance_$race$_race_trigger = yes } }
			#High Tolerance - Small Minority
			if = {
				limit = {
					has_small_$race$_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = $race$_minority_integrated_small
					duration = -1
				}
				remove_province_modifier = $race$_minority_oppressed_small
				remove_province_modifier = $race$_minority_coexisting_small
			}
			#High Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_$race$_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = $race$_minority_integrated_large
					duration = -1
				}
				remove_province_modifier = $race$_minority_oppressed_large
				remove_province_modifier = $race$_minority_coexisting_large
			}
			#High Tolerance - Majority
			else_if = {
				limit = {
					has_$race$_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = $race$_majority_integrated
					duration = -1
				}
				remove_province_modifier = $race$_majority_primary
				remove_province_modifier = $race$_majority_oppressed
				remove_province_modifier = $race$_majority_coexisting
			}
		}
		#Medium Tolerance - Coexisting
		else_if = {
			limit = { owner = { medium_tolerance_$race$_race_trigger = yes } }
			#Medium Tolerance - Small Minority
			if = {
				limit = {
					has_small_$race$_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = $race$_minority_coexisting_small
					duration = -1
				}
				remove_province_modifier = $race$_minority_oppressed_small
				remove_province_modifier = $race$_minority_integrated_small
			}
			#Medium Tolerance - Large Minority
			else_if = {
				limit = {
					has_large_$race$_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = $race$_minority_coexisting_large
					duration = -1
				}
				remove_province_modifier = $race$_minority_oppressed_large
				remove_province_modifier = $race$_minority_integrated_large
			}
			#Medium Tolerance - Majority
			else_if = {
				limit = {
					has_$race$_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = $race$_majority_coexisting
					duration = -1
				}
				remove_province_modifier = $race$_majority_oppressed
				remove_province_modifier = $race$_majority_integrated
				remove_province_modifier = $race$_majority_primary
			}
		}
		#Low Tolerance - Oppressed
		else_if = {
			limit = { owner = { low_tolerance_$race$_race_trigger = yes } }
			#Low Tolerance - Small Minority
			if = {
				limit = {
					has_small_$race$_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = $race$_minority_oppressed_small
					duration = -1
				}
				remove_province_modifier = $race$_minority_integrated_small
				remove_province_modifier = $race$_minority_coexisting_small
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_large_$race$_minority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = $race$_minority_oppressed_large
					duration = -1
				}
				remove_province_modifier = $race$_minority_integrated_large
				remove_province_modifier = $race$_minority_coexisting_large
			}
			#Low Tolerance - Majority
			else_if = {
				limit = {
					has_$race$_majority_trigger = yes
				}
				add_permanent_province_modifier = {
					name = $race$_majority_oppressed
					duration = -1
				}
				remove_province_modifier = $race$_majority_primary
				remove_province_modifier = $race$_majority_integrated
				remove_province_modifier = $race$_majority_coexisting
			}
		}
		make_majority_primary = yes
	}
}

update_racial_province_majority = {
	if = {
		
		#Culture Conversion Removal Squad - turns the old majority into a minority
		
		limit = { is_colony = no }	#prevents updating for incomplete colonies
		
		#AddNewRaceHere
		remove_province_modifier = dwarven_majority_primary
		remove_province_modifier = elven_majority_primary
		remove_province_modifier = halfling_majority_primary
		remove_province_modifier = gnomish_majority_primary
		remove_province_modifier = half_orcish_majority_primary
		remove_province_modifier = kobold_majority_primary
		remove_province_modifier = orcish_majority_primary
		remove_province_modifier = human_majority_primary
		remove_province_modifier = gnollish_majority_primary
		remove_province_modifier = ruinborn_majority_primary
		remove_province_modifier = goblin_majority_primary
		remove_province_modifier = harpy_majority_primary
		remove_province_modifier = troll_majority_primary
		remove_province_modifier = half_elven_majority_primary
		remove_province_modifier = ogre_majority_primary
		remove_province_modifier = harimari_majority_primary
		remove_province_modifier = centaur_majority_primary
		remove_province_modifier = hobgoblin_majority_primary
		
		#Elven
		if = {
			limit = {
				has_elven_majority_trigger = yes
				NOT = { culture_group = elven }
			}
			add_permanent_province_modifier = {
				name = elven_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = elven_majority_primary
			remove_province_modifier = elven_majority_integrated
			remove_province_modifier = elven_majority_coexisting
			remove_province_modifier = elven_majority_oppressed
		}
		
		#dwarven
		else_if = {
			limit = {
				has_dwarven_majority_trigger = yes
				NOT = { culture_group = dwarven }
			}
			add_permanent_province_modifier = {
				name = dwarven_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = dwarven_majority_primary
			remove_province_modifier = dwarven_majority_integrated
			remove_province_modifier = dwarven_majority_coexisting
			remove_province_modifier = dwarven_majority_oppressed
		}
		
		#halfling
		else_if = {
			limit = {
				has_halfling_majority_trigger = yes
				NOT = { culture_group = halfling }
			}
			add_permanent_province_modifier = {
				name = halfling_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = halfling_majority_primary
			remove_province_modifier = halfling_majority_integrated
			remove_province_modifier = halfling_majority_coexisting
			remove_province_modifier = halfling_majority_oppressed
		}
		
		#gnomish
		else_if = {
			limit = {
				has_gnomish_majority_trigger = yes
				NOT = { culture_group = gnomish }
			}
			add_permanent_province_modifier = {
				name = gnomish_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = gnomish_majority_primary
			remove_province_modifier = gnomish_majority_integrated
			remove_province_modifier = gnomish_majority_coexisting
			remove_province_modifier = gnomish_majority_oppressed
		}
		
		#half_orcish
		else_if = {
			limit = {
				has_half_orcish_majority_trigger = yes
				NOT = { culture_is_half_orcish = yes }
			}
			add_permanent_province_modifier = {
				name = half_orcish_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = half_orcish_majority_primary
			remove_province_modifier = half_orcish_majority_integrated
			remove_province_modifier = half_orcish_majority_coexisting
			remove_province_modifier = half_orcish_majority_oppressed
		}
		
		#orcish
		else_if = {
			limit = {
				has_orcish_majority_trigger = yes
				NOT = { culture_group = orcish }
			}
			add_permanent_province_modifier = {
				name = orcish_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = orcish_majority_primary
			remove_province_modifier = orcish_majority_integrated
			remove_province_modifier = orcish_majority_coexisting
			remove_province_modifier = orcish_majority_oppressed
		}
		
		#human
		else_if = {
			limit = {
				has_human_majority_trigger = yes
				NOT = { culture_group_is_human = yes }
			}
			add_permanent_province_modifier = {
				name = human_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = human_majority_primary
			remove_province_modifier = human_majority_integrated
			remove_province_modifier = human_majority_coexisting
			remove_province_modifier = human_majority_oppressed
		}
		
		#gnollish
		else_if = {
			limit = {
				has_gnollish_majority_trigger = yes
				NOT = { culture_group = gnollish }
			}
			add_permanent_province_modifier = {
				name = gnollish_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = gnollish_majority_primary
			remove_province_modifier = gnollish_majority_integrated
			remove_province_modifier = gnollish_majority_coexisting
			remove_province_modifier = gnollish_majority_oppressed
		}
		
		#ruinborn
		else_if = {
			limit = {
				has_ruinborn_majority_trigger = yes
				NOT = { culture_group_is_ruinborn = yes }
			}
			add_permanent_province_modifier = {
				name = ruinborn_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = ruinborn_majority_primary
			remove_province_modifier = ruinborn_majority_integrated
			remove_province_modifier = ruinborn_majority_coexisting
			remove_province_modifier = ruinborn_majority_oppressed
		}
		
		#goblin
		else_if = {
			limit = {
				has_goblin_majority_trigger = yes
				NOT = { culture_group = goblin }
			}
			add_permanent_province_modifier = {
				name = goblin_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = goblin_majority_primary
			remove_province_modifier = goblin_majority_integrated
			remove_province_modifier = goblin_majority_coexisting
			remove_province_modifier = goblin_majority_oppressed
		}
		
		#harpy
		else_if = {
			limit = {
				has_harpy_majority_trigger = yes
				NOT = { culture_group = harpy }
			}
			add_permanent_province_modifier = {
				name = harpy_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = harpy_majority_primary
			remove_province_modifier = harpy_majority_integrated
			remove_province_modifier = harpy_majority_coexisting
			remove_province_modifier = harpy_majority_oppressed
		}
		
		#troll
		else_if = {
			limit = {
				has_troll_majority_trigger = yes
				NOT = { culture_is_troll = yes }
			}
			add_permanent_province_modifier = {
				name = troll_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = troll_majority_primary
			remove_province_modifier = troll_majority_integrated
			remove_province_modifier = troll_majority_coexisting
			remove_province_modifier = troll_majority_oppressed
		}
		
		#half_elven
		else_if = {
			limit = {
				has_half_elven_majority_trigger = yes
				NOT = { culture_is_half_elven = yes }
			}
			add_permanent_province_modifier = {
				name = half_elven_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = half_elven_majority_primary
			remove_province_modifier = half_elven_majority_integrated
			remove_province_modifier = half_elven_majority_coexisting
			remove_province_modifier = half_elven_majority_oppressed
		}
		
		#kobold
		else_if = {
			limit = {
				has_kobold_majority_trigger = yes
				NOT = { culture_group = kobold }
			}
			add_permanent_province_modifier = {
				name = kobold_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = kobold_majority_primary
			remove_province_modifier = kobold_majority_integrated
			remove_province_modifier = kobold_majority_coexisting
			remove_province_modifier = kobold_majority_oppressed
		}
		
		#harimari
		else_if = {
			limit = {
				has_harimari_majority_trigger = yes
				NOT = { culture_group = harimari }
			}
			add_permanent_province_modifier = {
				name = harimari_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = harimari_majority_primary
			remove_province_modifier = harimari_majority_integrated
			remove_province_modifier = harimari_majority_coexisting
			remove_province_modifier = harimari_majority_oppressed
		}
		
		#hobgoblin
		else_if = {
			limit = {
				has_hobgoblin_majority_trigger = yes
				NOT = { culture_group = hobgoblin }
			}
			add_permanent_province_modifier = {
				name = hobgoblin_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = hobgoblin_majority_primary
			remove_province_modifier = hobgoblin_majority_integrated
			remove_province_modifier = hobgoblin_majority_coexisting
			remove_province_modifier = hobgoblin_majority_oppressed
		}
		
		#centaur
		else_if = {
			limit = {
				has_centaur_majority_trigger = yes
				NOT = { culture_group = centaur }
			}
			add_permanent_province_modifier = {
				name = centaur_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = centaur_majority_primary
			remove_province_modifier = centaur_majority_integrated
			remove_province_modifier = centaur_majority_coexisting
			remove_province_modifier = centaur_majority_oppressed
		}
		
		#ogre
		else_if = {
			limit = {
				has_ogre_majority_trigger = yes
				NOT = { culture_group = ogre }
			}
			add_permanent_province_modifier = {
				name = ogre_minority_coexisting_large
				duration = -1
			}
			remove_province_modifier = ogre_majority_primary
			remove_province_modifier = ogre_majority_integrated
			remove_province_modifier = ogre_majority_coexisting
			remove_province_modifier = ogre_majority_oppressed
		}
		
		
		#Remove Purging and Expelling majority modifiers
		if = {
			limit = { has_province_modifier = purging_majority }
			remove_province_modifier = purging_majority
		}
		if = {
			limit = { has_province_modifier = expelling_majority }
			remove_province_modifier = expelling_majority
		}
		
		
		#Add Majorities to province
		#Elven
		if = {
			limit = {
				NOT = { has_elven_majority_trigger = yes }
				culture_group = elven
			}
			add_permanent_province_modifier = {
				name = elven_majority_coexisting
				duration = -1
			}
			
		}
	
		#Dwarven
		else_if = {
			limit = {
				NOT = { has_dwarven_majority_trigger = yes }
				culture_group = dwarven
			}
			add_permanent_province_modifier = {
				name = dwarven_majority_coexisting
				duration = -1
			}
		}
		
		#halfling
		else_if = {
			limit = {
				NOT = { has_halfling_majority_trigger = yes }
				culture_group = halfling
			}
			add_permanent_province_modifier = {
				name = halfling_majority_coexisting
				duration = -1
			}
		}
		
		#gnomish
		else_if = {
			limit = {
				NOT = { has_gnomish_majority_trigger = yes }
				culture_group = gnomish
			}
			add_permanent_province_modifier = {
				name = gnomish_majority_coexisting
				duration = -1
			}
		}
		#half_orcish
		else_if = {
			limit = {
				NOT = { has_half_orcish_majority_trigger = yes }
				culture_is_half_orcish = yes
			}
			add_permanent_province_modifier = {
				name = half_orcish_majority_coexisting
				duration = -1
			}
		}
		
		#kobold
		else_if = {
			limit = {
				NOT = { has_kobold_majority_trigger = yes }
				culture_group = kobold
			}
			add_permanent_province_modifier = {
				name = kobold_majority_coexisting
				duration = -1
			}
		}
	
		#orcish
		else_if = {
			limit = {
				NOT = { has_orcish_majority_trigger = yes }
				culture_group = orcish
			}
			add_permanent_province_modifier = {
				name = orcish_majority_coexisting
				duration = -1
			}
		}
		
		#human
		else_if = {
			limit = {
				NOT = { has_human_majority_trigger = yes }
				culture_group_is_human = yes
			}
			add_permanent_province_modifier = {
				name = human_majority_coexisting
				duration = -1
			}
		}
		
		#gnollish
		else_if = {
			limit = {
				NOT = { has_gnollish_majority_trigger = yes }
				culture_group = gnollish
			}
			add_permanent_province_modifier = {
				name = gnollish_majority_coexisting
				duration = -1
			}
		}
		#ruinborn
		else_if = {
			limit = {
				NOT = { has_ruinborn_majority_trigger = yes }
				culture_group_is_ruinborn = yes
			}
			add_permanent_province_modifier = {
				name = ruinborn_majority_coexisting
				duration = -1
			}
		}
		
		#goblin
		else_if = {
			limit = {
				NOT = { has_goblin_majority_trigger = yes }
				culture_group = goblin
			}
			add_permanent_province_modifier = {
				name = goblin_majority_coexisting
				duration = -1
			}
		}
	
		#harpy
		else_if = {
			limit = {
				NOT = { has_harpy_majority_trigger = yes }
				culture_group = harpy
			}
			add_permanent_province_modifier = {
				name = harpy_majority_coexisting
				duration = -1
			}
		}
		
		#troll
		else_if = {
			limit = {
				NOT = { has_troll_majority_trigger = yes }
				culture_is_troll = yes
			}
			add_permanent_province_modifier = {
				name = troll_majority_coexisting
				duration = -1
			}
		}
		
		#half_elven
		else_if = {
			limit = {
				NOT = { has_half_elven_majority_trigger = yes }
				culture_is_half_elven = yes
			}
			add_permanent_province_modifier = {
				name = half_elven_majority_coexisting
				duration = -1
			}
		}
		
		#kobold
		else_if = {
			limit = {
				NOT = { has_kobold_majority_trigger = yes }
				culture_group = kobold
			}
			add_permanent_province_modifier = {
				name = kobold_majority_coexisting
				duration = -1
			}
		}
		
		#harimari
		else_if = {
			limit = {
				NOT = { has_harimari_majority_trigger = yes }
				culture_group = harimari
			}
			add_permanent_province_modifier = {
				name = harimari_majority_coexisting
				duration = -1
			}
		}
		
		#hobgoblin
		else_if = {
			limit = {
				NOT = { has_hobgoblin_majority_trigger = yes }
				culture_group = hobgoblin
			}
			add_permanent_province_modifier = {
				name = hobgoblin_majority_coexisting
				duration = -1
			}
		}
		
		#centaur
		else_if = {
			limit = {
				NOT = { has_centaur_majority_trigger = yes }
				culture_group = centaur
			}
			add_permanent_province_modifier = {
				name = centaur_majority_coexisting
				duration = -1
			}
		}
		
		#ogre
		else_if = {
			limit = {
				NOT = { has_ogre_majority_trigger = yes }
				culture_group = ogre
			}
			add_permanent_province_modifier = {
				name = ogre_majority_coexisting
				duration = -1
			}
		}
	}
	update_racial_province_modifier_tolerance = yes
}

cleanup_racial_province_minority_into_majority = {
	
		
	#AddNewRaceHere

	#dwarven
	if = {
		limit = {
			has_dwarven_minority_trigger = yes
			culture_group = dwarven
		}
		remove_province_modifier = dwarven_minority_oppressed_small
		remove_province_modifier = dwarven_minority_coexisting_small
		remove_province_modifier = dwarven_minority_integrated_small
		remove_province_modifier = dwarven_minority_oppressed_large
		remove_province_modifier = dwarven_minority_coexisting_large
		remove_province_modifier = dwarven_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#elven
	else_if = {
		limit = {
			has_elven_minority_trigger = yes
			culture_group = elven
		}
		remove_province_modifier = elven_minority_oppressed_small
		remove_province_modifier = elven_minority_coexisting_small
		remove_province_modifier = elven_minority_integrated_small
		remove_province_modifier = elven_minority_oppressed_large
		remove_province_modifier = elven_minority_coexisting_large
		remove_province_modifier = elven_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#halfling
	else_if = {
		limit = {
			has_halfling_minority_trigger = yes
			culture_group = halfling
		}
		remove_province_modifier = halfling_minority_oppressed_small
		remove_province_modifier = halfling_minority_coexisting_small
		remove_province_modifier = halfling_minority_integrated_small
		remove_province_modifier = halfling_minority_oppressed_large
		remove_province_modifier = halfling_minority_coexisting_large
		remove_province_modifier = halfling_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#gnomish
	else_if = {
		limit = {
			has_gnomish_minority_trigger = yes
			culture_group = gnomish
		}
		remove_province_modifier = gnomish_minority_oppressed_small
		remove_province_modifier = gnomish_minority_coexisting_small
		remove_province_modifier = gnomish_minority_integrated_small
		remove_province_modifier = gnomish_minority_oppressed_large
		remove_province_modifier = gnomish_minority_coexisting_large
		remove_province_modifier = gnomish_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#half_orcish
	else_if = {
		limit = {
			has_half_orcish_minority_trigger = yes
			culture_is_half_orcish = yes
		}
		remove_province_modifier = half_orcish_minority_oppressed_small
		remove_province_modifier = half_orcish_minority_coexisting_small
		remove_province_modifier = half_orcish_minority_integrated_small
		remove_province_modifier = half_orcish_minority_oppressed_large
		remove_province_modifier = half_orcish_minority_coexisting_large
		remove_province_modifier = half_orcish_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#kobold
	else_if = {
		limit = {
			has_kobold_minority_trigger = yes
			culture_group = kobold
		}
		remove_province_modifier = kobold_minority_oppressed_small
		remove_province_modifier = kobold_minority_coexisting_small
		remove_province_modifier = kobold_minority_integrated_small
		remove_province_modifier = kobold_minority_oppressed_large
		remove_province_modifier = kobold_minority_coexisting_large
		remove_province_modifier = kobold_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#orcish
	else_if = {
		limit = {
			has_orcish_minority_trigger = yes
			culture_group = orcish
		}
		remove_province_modifier = orcish_minority_oppressed_small
		remove_province_modifier = orcish_minority_coexisting_small
		remove_province_modifier = orcish_minority_integrated_small
		remove_province_modifier = orcish_minority_oppressed_large
		remove_province_modifier = orcish_minority_coexisting_large
		remove_province_modifier = orcish_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#human
	else_if = {
		limit = {
			has_human_minority_trigger = yes
			culture_group_is_human = yes
		}
		remove_province_modifier = human_minority_oppressed_small
		remove_province_modifier = human_minority_coexisting_small
		remove_province_modifier = human_minority_integrated_small
		remove_province_modifier = human_minority_oppressed_large
		remove_province_modifier = human_minority_coexisting_large
		remove_province_modifier = human_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#gnollish
	else_if = {
		limit = {
			has_gnollish_minority_trigger = yes
			culture_group = gnollish
		}
		remove_province_modifier = gnollish_minority_oppressed_small
		remove_province_modifier = gnollish_minority_coexisting_small
		remove_province_modifier = gnollish_minority_integrated_small
		remove_province_modifier = gnollish_minority_oppressed_large
		remove_province_modifier = gnollish_minority_coexisting_large
		remove_province_modifier = gnollish_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#ruinborn
	else_if = {
		limit = {
			has_ruinborn_minority_trigger = yes
			culture_group_is_ruinborn = yes
		}
		remove_province_modifier = ruinborn_minority_oppressed_small
		remove_province_modifier = ruinborn_minority_coexisting_small
		remove_province_modifier = ruinborn_minority_integrated_small
		remove_province_modifier = ruinborn_minority_oppressed_large
		remove_province_modifier = ruinborn_minority_coexisting_large
		remove_province_modifier = ruinborn_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#goblin
	else_if = {
		limit = {
			has_goblin_minority_trigger = yes
			culture_group = goblin
		}
		remove_province_modifier = goblin_minority_oppressed_small
		remove_province_modifier = goblin_minority_coexisting_small
		remove_province_modifier = goblin_minority_integrated_small
		remove_province_modifier = goblin_minority_oppressed_large
		remove_province_modifier = goblin_minority_coexisting_large
		remove_province_modifier = goblin_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#harpy
	else_if = {
		limit = {
			has_harpy_minority_trigger = yes
			culture_group = harpy
		}
		remove_province_modifier = harpy_minority_oppressed_small
		remove_province_modifier = harpy_minority_coexisting_small
		remove_province_modifier = harpy_minority_integrated_small
		remove_province_modifier = harpy_minority_oppressed_large
		remove_province_modifier = harpy_minority_coexisting_large
		remove_province_modifier = harpy_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}

	#troll
	else_if = {
		limit = {
			has_troll_minority_trigger = yes
			culture_is_troll = yes
		}
		remove_province_modifier = troll_minority_oppressed_small
		remove_province_modifier = troll_minority_coexisting_small
		remove_province_modifier = troll_minority_integrated_small
		remove_province_modifier = troll_minority_oppressed_large
		remove_province_modifier = troll_minority_coexisting_large
		remove_province_modifier = troll_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#half_elven
	else_if = {
		limit = {
			has_half_elven_minority_trigger = yes
			culture_is_half_elven = yes
		}
		remove_province_modifier = half_elven_minority_oppressed_small
		remove_province_modifier = half_elven_minority_coexisting_small
		remove_province_modifier = half_elven_minority_integrated_small
		remove_province_modifier = half_elven_minority_oppressed_large
		remove_province_modifier = half_elven_minority_coexisting_large
		remove_province_modifier = half_elven_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#harimari
	else_if = {
		limit = {
			has_harimari_minority_trigger = yes
			culture_group = harimari
		}
		remove_province_modifier = harimari_minority_oppressed_small
		remove_province_modifier = harimari_minority_coexisting_small
		remove_province_modifier = harimari_minority_integrated_small
		remove_province_modifier = harimari_minority_oppressed_large
		remove_province_modifier = harimari_minority_coexisting_large
		remove_province_modifier = harimari_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#hobgoblin
	else_if = {
		limit = {
			has_hobgoblin_minority_trigger = yes
			culture_group = harimari
		}
		remove_province_modifier = hobgoblin_minority_oppressed_small
		remove_province_modifier = hobgoblin_minority_coexisting_small
		remove_province_modifier = hobgoblin_minority_integrated_small
		remove_province_modifier = hobgoblin_minority_oppressed_large
		remove_province_modifier = hobgoblin_minority_coexisting_large
		remove_province_modifier = hobgoblin_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#centaur
	else_if = {
		limit = {
			has_centaur_minority_trigger = yes
			culture_group = centaur
		}
		remove_province_modifier = centaur_minority_oppressed_small
		remove_province_modifier = centaur_minority_coexisting_small
		remove_province_modifier = centaur_minority_integrated_small
		remove_province_modifier = centaur_minority_oppressed_large
		remove_province_modifier = centaur_minority_coexisting_large
		remove_province_modifier = centaur_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
	
	#ogre
	else_if = {
		limit = {
			has_ogre_minority_trigger = yes
			culture_group = ogre
		}
		remove_province_modifier = ogre_minority_oppressed_small
		remove_province_modifier = ogre_minority_coexisting_small
		remove_province_modifier = ogre_minority_integrated_small
		remove_province_modifier = ogre_minority_oppressed_large
		remove_province_modifier = ogre_minority_coexisting_large
		remove_province_modifier = ogre_minority_integrated_large
		
		add_province_modifier = {
			name = minority_into_majority
			duration = 3650	#10 years
		}
	}
}

make_majority_primary = {
	#AddNewRaceHere
	
	#dwarven
	if = {
		limit = {
			has_province_modifier = dwarven_majority_integrated
			owner = { has_country_modifier = dwarven_administration }
		}
		remove_province_modifier = dwarven_majority_integrated

		add_permanent_province_modifier = {
			name = dwarven_majority_primary
			duration = -1
		}
	}
	
	#elven
	else_if = {
		limit = {
			has_province_modifier = elven_majority_integrated
			owner = { has_country_modifier = elven_administration }
		}
		remove_province_modifier = elven_majority_integrated

		add_permanent_province_modifier = {
			name = elven_majority_primary
			duration = -1
		}
	}
	
	#halfling
	else_if = {
		limit = {
			has_province_modifier = halfling_majority_integrated
			owner = { has_country_modifier = halfling_administration }
		}
		remove_province_modifier = halfling_majority_integrated

		add_permanent_province_modifier = {
			name = halfling_majority_primary
			duration = -1
		}
	}
	
	#gnomish
	else_if = {
		limit = {
			has_province_modifier = gnomish_majority_integrated
			owner = { has_country_modifier = gnomish_administration }
		}
		remove_province_modifier = gnomish_majority_integrated

		add_permanent_province_modifier = {
			name = gnomish_majority_primary
			duration = -1
		}
	}
	
	#half_orcish
	else_if = {
		limit = {
			has_province_modifier = half_orcish_majority_integrated
			owner = { has_country_modifier = half_orcish_administration }
		}
		remove_province_modifier = half_orcish_majority_integrated

		add_permanent_province_modifier = {
			name = half_orcish_majority_primary
			duration = -1
		}
	}
	
	#kobold
	else_if = {
		limit = {
			has_province_modifier = kobold_majority_integrated
			owner = { has_country_modifier = kobold_administration }
		}
		remove_province_modifier = kobold_majority_integrated

		add_permanent_province_modifier = {
			name = kobold_majority_primary
			duration = -1
		}
	}
	
	#orcish
	else_if = {
		limit = {
			has_province_modifier = orcish_majority_integrated
			owner = { has_country_modifier = orcish_administration }
		}
		remove_province_modifier = orcish_majority_integrated

		add_permanent_province_modifier = {
			name = orcish_majority_primary
			duration = -1
		}
	}
	
	#human
	else_if = {
		limit = {
			has_province_modifier = human_majority_integrated
			owner = { has_country_modifier = human_administration }
		}
		remove_province_modifier = human_majority_integrated

		add_permanent_province_modifier = {
			name = human_majority_primary
			duration = -1
		}
	}
	
	#gnollish
	else_if = {
		limit = {
			has_province_modifier = gnollish_majority_integrated
			owner = { has_country_modifier = gnollish_administration }
		}
		remove_province_modifier = gnollish_majority_integrated

		add_permanent_province_modifier = {
			name = gnollish_majority_primary
			duration = -1
		}
	}
	
	#ruinborn
	else_if = {
		limit = {
			has_province_modifier = ruinborn_majority_integrated
			owner = { has_country_modifier = ruinborn_administration }
		}
		remove_province_modifier = ruinborn_majority_integrated

		add_permanent_province_modifier = {
			name = ruinborn_majority_primary
			duration = -1
		}
	}
	
	#goblin
	else_if = {
		limit = {
			has_province_modifier = goblin_majority_integrated
			owner = { has_country_modifier = goblin_administration }
		}
		remove_province_modifier = goblin_majority_integrated

		add_permanent_province_modifier = {
			name = goblin_majority_primary
			duration = -1
		}
	}
	
	#harpy
	else_if = {
		limit = {
			has_province_modifier = harpy_majority_integrated
			owner = { has_country_modifier = harpy_administration }
		}
		remove_province_modifier = harpy_majority_integrated

		add_permanent_province_modifier = {
			name = harpy_majority_primary
			duration = -1
		}
	}

	#troll
	else_if = {
		limit = {
			has_province_modifier = troll_majority_integrated
			owner = { has_country_modifier = troll_administration }
		}
		remove_province_modifier = troll_majority_integrated

		add_permanent_province_modifier = {
			name = troll_majority_primary
			duration = -1
		}
	}
	
	#half_elven
	else_if = {
		limit = {
			has_province_modifier = half_elven_majority_integrated
			owner = { has_country_modifier = half_elven_administration }
		}
		remove_province_modifier = half_elven_majority_integrated

		add_permanent_province_modifier = {
			name = half_elven_majority_primary
			duration = -1
		}
	}
	
	#harimari
	else_if = {
		limit = {
			has_province_modifier = harimari_majority_integrated
			owner = { has_country_modifier = harimari_administration }
		}
		remove_province_modifier = harimari_majority_integrated

		add_permanent_province_modifier = {
			name = harimari_majority_primary
			duration = -1
		}
	}
	
	#hobgoblin
	else_if = {
		limit = {
			has_province_modifier = hobgoblin_majority_integrated
			owner = { has_country_modifier = harimari_administration }
		}
		remove_province_modifier = hobgoblin_majority_integrated

		add_permanent_province_modifier = {
			name = hobgoblin_majority_primary
			duration = -1
		}
	}
	
	#centaur
	else_if = {
		limit = {
			has_province_modifier = centaur_majority_integrated
			owner = { has_country_modifier = centaur_administration }
		}
		remove_province_modifier = centaur_majority_integrated

		add_permanent_province_modifier = {
			name = centaur_majority_primary
			duration = -1
		}
	}
	
	#ogre
	else_if = {
		limit = {
			has_province_modifier = ogre_majority_integrated
			owner = { has_country_modifier = ogre_administration }
		}
		remove_province_modifier = ogre_majority_integrated

		add_permanent_province_modifier = {
			name = ogre_majority_primary
			duration = -1
		}
	}
}
