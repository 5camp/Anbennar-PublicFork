#Uppercastes

estate_uppercastes_organization_caste = {
	icon = privilege_promote_maratha_nobility
	max_absolutism = 0
	loyalty = 0.05
	land_share = 0
	influence = 0.1
	can_select = {
		always = no
	}
	can_revoke = {
		always = no
	}
	on_granted = {
		custom_tooltip = caste_races_uppercastes_tt
	}
	on_revoked = {
		custom_tooltip = caste_races_uppercastes_tt
	}
	penalties = {
	}
	benefits = {
	}

	#-----------Rigid Castes-----------#
	conditional_modifier = {
		trigger = {
			caste_fluidity_is_rigid = yes # check if castes are rigid
			has_country_flag = human_in_uppercastes # Are humans alone in caste?
			NOT = {
				has_country_flag = harimari_in_uppercastes
				# add any races here
			}
		}
		modifier = {
			stability_cost_modifier = -0.20 # Full modifier, castes are rigid
			technology_cost = -0.05 		# Full modifier, humans are alone in the caste
		}
	}
	conditional_modifier = {
		trigger = {
			caste_fluidity_is_rigid = yes # check if castes are rigid
			has_country_flag = harimari_in_uppercastes # Are harimari alone in caste?
			NOT = {
				has_country_flag = human_in_uppercastes
				# add any races here
			}
		}
		modifier = {
			stability_cost_modifier = -0.20 # Full modifier, castes are rigid
			global_autonomy = -0.05 		# Full modifier, harimari are alone in the caste
		}
	}
	conditional_modifier = {
		trigger = {
			caste_fluidity_is_rigid = yes # check if castes are rigid
			has_country_flag = human_in_uppercastes # Do humans share the caste?
			has_country_flag = harimari_in_uppercastes
		}
		modifier = {
			stability_cost_modifier = -0.20 # Full modifier, castes are rigid
			global_autonomy = -0.025 		# Half modifier, harimari share in the caste
			technology_cost = -0.025 		# Half modifier, humans share the caste
		}
	}
	
	#-----------Neutral Castes-----------#
	conditional_modifier = {
		trigger = {
			caste_fluidity_is_neutral = yes # check if castes are neutral
			has_country_flag = human_in_uppercastes #Are humans alone in caste?
			NOT = {
				has_country_flag = harimari_in_uppercastes
				# add any races here
			}
		}
		modifier = {
			stability_cost_modifier = -0.10	# Half modifier, castes are neutral
			embracement_cost = -0.1			# Half modifier, castes are neutral
			technology_cost = -0.05 		# Full modifier, humans are alone in the caste
		}
	}
	conditional_modifier = {
		trigger = {
			caste_fluidity_is_neutral = yes # check if castes are neutral
			has_country_flag = harimari_in_uppercastes #Are harimari alone in caste?
			NOT = {
				has_country_flag = human_in_uppercastes
				# add any races here
			}
		}
		modifier = {
			stability_cost_modifier = -0.10	# Half modifier, castes are neutral
			embracement_cost = -0.1			# Half modifier, castes are neutral
			global_autonomy = -0.05 		# Full modifier, harimari are alone in the caste
		}
	}
	conditional_modifier = {
		trigger = {
			caste_fluidity_is_neutral = yes # check if castes are neutral
			has_country_flag = human_in_uppercastes # Do humans share the caste?
			has_country_flag = harimari_in_uppercastes
		}
		modifier = {
			stability_cost_modifier = -0.10	# Half modifier, castes are neutral
			embracement_cost = -0.1			# Half modifier, castes are neutral
			technology_cost = -0.025 		# Half modifier, humans share the caste
			global_autonomy = -0.025 		# Half modifier, harimari share in the caste
		}
	}
	
	#-----------Fluid Castes-----------#
	conditional_modifier = {
		trigger = {
			caste_fluidity_is_fluid = yes # check if castes are fluid
			has_country_flag = human_in_uppercastes #Are humans alone in caste?
			NOT = {
				has_country_flag = harimari_in_uppercastes
				# add any races here
			}
		}
		modifier = {
			embracement_cost = -0.2			# Full modifier, castes are fluid
			technology_cost = -0.05 		# Full modifier, humans are alone in the caste
		}
	}
	conditional_modifier = {
		trigger = {
			caste_fluidity_is_fluid = yes # check if castes are fluid
			has_country_flag = harimari_in_uppercastes #Are harimari alone in caste?
			NOT = {
				has_country_flag = human_in_uppercastes
				# add any races here
			}
		}
		modifier = {
			embracement_cost = -0.2			# Full modifier, castes are fluid
			global_autonomy = -0.05 		# Full modifier, harimari are alone in the caste
		}
	}
	conditional_modifier = {
		trigger = {
			caste_fluidity_is_fluid = yes # check if castes are fluid
			has_country_flag = human_in_uppercastes # Do humans share the caste?
			has_country_flag = harimari_in_uppercastes
		}
		modifier = {
			embracement_cost = -0.2			# Full modifier, castes are fluid
			technology_cost = -0.025 		# Half modifier, humans share the caste
			global_autonomy = -0.025 		# Half modifier, harimari share in the caste
		}
	}


	ai_will_do = {
		factor = 0
	}
}

estate_uppercastes_land_rights = {
	icon = privilege_grant_autonomy
	land_share = 5
	max_absolutism = -5
	loyalty = 0.05
	influence = 0.05
	can_select = {
	}
	on_granted = {
	}
	penalties = {
	}
	benefits = {
		governing_capacity = 100
	}
	ai_will_do = {
		factor = 5
		modifier = {
			factor = 1.4
			num_of_territories = 5
		}
		modifier = {
			factor = 1.5
			num_of_territories = 10
		}
		modifier = {
			factor = 1.5
			num_of_territories = 15
		}
		modifier = {
			factor = 0
			OR = {
				NOT = { crown_land_share = 25 }
				estate_influence = {
					estate = estate_uppercastes
					influence = 75
				}
			}
			NOT = { has_estate_privilege = estate_uppercastes_land_rights }
		}
		modifier = {
			factor = 0
			NOT = { num_of_territories = 1 }
		}
		modifier = {
			factor = 0.8
			OR = {
				NOT = { crown_land_share = 40 }
				AND = {
					is_absolutism_active = yes
					NOT = { crown_land_share = 60 }
				}
			}
			NOT = { has_estate_privilege = estate_uppercastes_land_rights }
		}
		modifier = {
			factor = 0.8
			OR = {
				NOT = { crown_land_share = 30 }
				AND = {
					is_absolutism_active = yes
					NOT = { crown_land_share = 50 }
				}
			}
			NOT = { has_estate_privilege = estate_uppercastes_land_rights }
		}
		modifier = {
			factor = 0.8
			is_absolutism_active = yes
		}
	}
}

estate_uppercastes_nobility_primacy = {
	icon = privilege_military_power
	land_share = 10
	max_absolutism = -5
	loyalty = -0.05
	can_select = {
		custom_trigger_tooltip = {
			tooltip = no_other_mil_privilege
			NOT = { has_estate_privilege = estate_rajput_military }
			NOT = { has_estate_privilege = estate_maratha_military }
		}
	}
	on_granted = {
	}
	penalties = {
	}
	benefits = {
		country_military_power = 1
	}
	ai_will_do = {
		factor = 12
		modifier = {
			factor = 0
			OR = {
				NOT = { crown_land_share = 30 }
				estate_influence = {
					estate = estate_uppercastes
					influence = 75
				}
			}
			NOT = { has_estate_privilege = estate_uppercastes_nobility_primacy }
		}
		modifier = {
			factor = 0.8
			OR = {
				NOT = { crown_land_share = 35 }
				AND = {
					is_absolutism_active = yes
					NOT = { crown_land_share = 55 }
				}
			}
			NOT = { has_estate_privilege = estate_uppercastes_nobility_primacy }
		}
		modifier = {
			factor = 0.8
			is_absolutism_active = yes
		}
		modifier = {
			factor = 1.25
			NOT = { mil = 2 }
		}
		modifier = {
			factor = 0.8
			mil = 5
		}
	}
}

estate_uppercastes_officer_corp = {
	icon = privilege_promote_purbias
	max_absolutism = -5
	influence = 0.05
	can_select = {
		army_tradition = 30
		NOT = { has_estate_privilege = estate_eunuch_generals }
	}
	on_granted = {
		add_army_tradition = -15
	}
	penalties = {
	}
	benefits = {
		general_cost = -0.25
		army_tradition_decay = -0.005
	}
	ai_will_do = {
		factor = 0
	}
}


estate_uppercastes_advisors = {
	icon = privilege_recruit_minister
	max_absolutism = -5
	influence = 0.1
	loyalty = 0.05
	penalties = {
		stability_cost_modifier = 0.1
	}
	benefits = {
		mil_advisor_cost = -0.25
	}
	ai_will_do = {
		factor = 10
		modifier = {
			factor = 0.5
			is_absolutism_active = yes
		}
		modifier = {
			factor = 1.25
			NOT = { mil = 2 }
		}
		modifier = {
			factor = 0.8
			mil = 5
		}
	}
}

estate_uppercastes_right_of_counsel = {
	icon = privilege_royal_authority
	max_absolutism = -10
	loyalty = 0.1
	influence = 0.1
	penalties = {
	}
	benefits = {
	}
	ai_will_do = {
		factor = 10
		modifier = {
			factor = 0
			is_absolutism_active = yes
		}
	}
}

estate_uppercastes_supremacy_over_crown = {
	icon = privilege_empty_throne
	max_absolutism = -5
	influence = 0.1
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
	}
	penalties = {
	}
	benefits = {
		burghers_loyalty_modifier = 0.1
		church_loyalty_modifier = 0.1
		dhimmi_loyalty_modifier = 0.1
		cossacks_loyalty_modifier = 0.1
		rajput_loyalty_modifier = 0.1
		brahmins_hindu_loyalty_modifier = 0.1
		brahmins_muslim_loyalty_modifier = 0.1
		brahmins_other_loyalty_modifier = 0.1
		maratha_loyalty_modifier = 0.1
		jains_loyalty_modifier = 0.1
		vaisyas_loyalty_modifier = 0.1
		nomadic_tribes_loyalty_modifier = 0.1
		burghers_influence_modifier = 0.1
		church_influence_modifier = 0.1
		dhimmi_influence_modifier = 0.1
		cossacks_influence_modifier = 0.1
		rajput_influence_modifier = 0.1
		brahmins_hindu_influence_modifier = 0.1
		brahmins_muslim_influence_modifier = 0.1
		brahmins_other_influence_modifier = 0.1
		maratha_influence_modifier = 0.1
		jains_influence_modifier = 0.1
		vaisyas_influence_modifier = 0.1
		nomadic_tribes_influence_modifier = 0.1
		mages_loyalty_modifier = 0.1
		mages_influence_modifier = 0.1
		adventurers_loyalty_modifier = 0.1
		adventurers_influence_modifier = 0.1
		artificers_loyalty_modifier = 0.1
		artificers_influence_modifier = 0.1
		monstrous_tribes_loyalty_modifier = 0.1
		monstrous_tribes_influence_modifier = 0.1
		raj_ministries_loyalty_modifier = 0.1
		raj_ministries_influence_modifier = 0.1
		middlecastes_loyalty_modifier = 0.1
		middlecastes_influence_modifier = 0.1
		lowercastes_loyalty_modifier = 0.1
		lowercastes_influence_modifier = 0.1
		castonath_patricians_influence_modifier = 0.1
		castonath_patricians_loyalty_modifier = 0.1
	}
	mechanics = {
		can_give_agendas_without_interaction
	}
	ai_will_do = {
		factor = 0
	}
}

estate_uppercastes_monopoly_of_metals = {
	icon = privilege_monopoly_of_goods_iron
	max_absolutism = -10
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			OR = {
				trade_goods = iron
				trade_goods = copper
			}
		}
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		add_mercantilism = 1
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				OR = {
					trade_goods = iron
					trade_goods = copper
				}
			}
			custom_tooltip = MONOPOLY_INCOME_IRON_DESC
		}
		custom_tooltip = estate_uppercastes_monopoly_of_metals_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				OR = {
					trade_goods = iron
					trade_goods = copper
				}
			}
			add_province_modifier = {
				name = estate_uppercastes_monopoly_of_metals_mod
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = estate_uppercastes_monopoly_of_metals_mod
			}
			remove_province_modifier = estate_uppercastes_monopoly_of_metals_mod
		}
	}
	on_revoked = {
		custom_tooltip = estate_uppercastes_monopoly_of_metals_revoke_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_uppercastes_monopoly_of_metals_mod
			}
			remove_province_modifier = estate_uppercastes_monopoly_of_metals_mod
		}
	}
	on_invalid = {
		custom_tooltip = estate_uppercastes_monopoly_of_metals_revoke_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_uppercastes_monopoly_of_metals_mod
			}
			remove_province_modifier = estate_uppercastes_monopoly_of_metals_mod
		}
	}
	penalties = {
	}
	benefits = {
	}

	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.5 }
	}
	ai_will_do = {
		factor = 0
	}
}

estate_uppercastes_monopoly_of_livestock = {
	icon = privilege_monopoly_of_goods_livestock
	max_absolutism = -10
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = livestock
		}
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		add_mercantilism = 1
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				trade_goods = livestock
			}
			custom_tooltip = MONOPOLY_INCOME_LIVESTOCK_DESC
		}
		custom_tooltip = estate_uppercastes_monopoly_of_livestock_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = livestock
			}
			add_province_modifier = {
				name = estate_uppercastes_monopoly_of_livestock_mod
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = estate_uppercastes_monopoly_of_livestock_mod
			}
			remove_province_modifier = estate_uppercastes_monopoly_of_livestock_mod
		}
	}
	on_revoked = {
		custom_tooltip = estate_uppercastes_monopoly_of_livestock_revoke_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_uppercastes_monopoly_of_livestock_mod
			}
			remove_province_modifier = estate_uppercastes_monopoly_of_livestock_mod
		}
	}
	on_invalid = {
		custom_tooltip = estate_uppercastes_monopoly_of_livestock_revoke_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_uppercastes_monopoly_of_livestock_mod
			}
			remove_province_modifier = estate_uppercastes_monopoly_of_livestock_mod
		}
	}
	penalties = {
	}
	benefits = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.6 }
	}
	ai_will_do = {
		factor = 0
	}
}

estate_uppercastes_monopoly_of_gems = {
	icon = privilege_monopoly_of_goods_gems
	max_absolutism = -10
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = gems
		}
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		add_mercantilism = 1
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				trade_goods = gems
			}
			custom_tooltip = MONOPOLY_INCOME_GEMS_DESC
		}
		custom_tooltip = estate_uppercastes_monopoly_of_gems_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = gems
			}
			add_province_modifier = {
				name = estate_uppercastes_monopoly_of_gems_mod
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = estate_uppercastes_monopoly_of_gems_mod
			}
			remove_province_modifier = estate_uppercastes_monopoly_of_gems_mod
		}
	}
	on_revoked = {
		custom_tooltip = estate_uppercastes_monopoly_of_gems_revoke_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_uppercastes_monopoly_of_gems_mod
			}
			remove_province_modifier = estate_uppercastes_monopoly_of_gems_mod
		}
	}
	on_invalid = {
		custom_tooltip = estate_uppercastes_monopoly_of_gems_revoke_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_uppercastes_monopoly_of_gems_mod
			}
			remove_province_modifier = estate_uppercastes_monopoly_of_gems_mod
		}
	}
	penalties = {
	}
	benefits = {
	}

	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.7 }
	}
	ai_will_do = {
		factor = 0
	}
}

estate_uppercastes_strong_duchies = {
	icon = privilege_royal_authority
	max_absolutism = -10
	influence = 0.1
	loyalty = 0.05
	is_valid = {
		OR = {
			any_subject_country = {
				is_march = yes
			}
			vassal = 1
		}
	}
	can_select = {
		if = {
			limit = {
				has_dlc = "Art of War"
			}
			custom_trigger_tooltip = {
				tooltip = estate_uppercastes_strong_duchies_trigger_tooltip
				calc_true_if = {
					amount = 2
					all_subject_country = {
						OR = {
							is_march = yes
							is_vassal = yes
						}
					}
				}
			}
		}
		else = {
			vassal = 2
		}
	}
	penalties = {
	}
	benefits = {
		diplomatic_upkeep = 2
		reduced_liberty_desire = 10
	}
	ai_will_do = {
		factor = 1
		modifier = { #will lose it via invalid sooner or later
			factor = 10
			has_estate_privilege = estate_uppercastes_strong_duchies
		}
	}
}

estate_uppercastes_statutory_rights = {
	icon = privilege_grant_autonomy
	max_absolutism = -5
	influence = 0.1
	is_valid = {
		has_estate_privilege = estate_uppercastes_statutory_rights
	}
	on_granted = {
		change_estate_land_share = {
			estate = all
			share = -30
		}
	}
	penalties = {
		min_autonomy = 25
	}
	benefits = {
	}
	ai_will_do = {
		factor = 0
	}

	cooldown_years = 20
}
