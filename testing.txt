# every_owned_province = { 
# 	# limit = { 
# 	# 	OR = { 
# 	# 		superregion = bulwar_superregion 
# 	# 		superregion = rahen_superregion 
# 	# 	} 
# 	# } 
# 	add_core = ROOT 
# } 
# every_owned_province = { 
# 	change_religion = ravelian 
# } 
 
# every_province = { 
# 	limit = {
# 		continent = europe
# 		OR = {
# 			culture_group = escanni
# 			culture_group = anbennarian
# 		}
# 	}
# 	cede_province = ROOT 
# 	add_core = ROOT 
# } 
# ROOT = { 
#     set_variable = { which = count value = 0 } 
#     set_variable = { which = count1 value = 0 } 
#     set_variable = { which = count2 value = 0 } 
#     set_variable = { which = count3 value = 0 } 
#     every_owned_province = { 
#         limit = { 
#             region = inner_castanor_region 
#         } 
#         export_to_variable = { which = count1 value = base_tax } 
#         export_to_variable = { which = count2 value = base_production } 
#         export_to_variable = { which = count3 value = base_manpower } 
#         PREV = { 
#             change_variable = { which = count value = 1 } 
#             change_variable = { which = count1 which = PREV } 
#             change_variable = { which = count2 which = PREV } 
#             change_variable = { which = count3 which = PREV } 
#         } 
#     } 
#     set_variable = { which = count4 which = count1 } 
#     change_variable = { which = count4 which = count2 } 
#     change_variable = { which = count4 which = count3 } 
#     log = "---" 
#     log = "Inner Castanor - Number of provinces: [This.count.GetValue]  Adm dev: [This.count1.GetValue]  Dip dev: [This.count2.GetValue]  Mil dev: [This.count3.GetValue]  Total: [This.count4.GetValue]" 
# } 
# ROOT = { 
#     set_variable = { which = count value = 0 } 
#     set_variable = { which = count1 value = 0 } 
#     set_variable = { which = count2 value = 0 } 
#     set_variable = { which = count3 value = 0 } 
#     every_owned_province = { 
#         limit = { 
#             region = west_castanor_region 
#         } 
#         export_to_variable = { which = count1 value = base_tax } 
#         export_to_variable = { which = count2 value = base_production } 
#         export_to_variable = { which = count3 value = base_manpower } 
#         PREV = { 
#             change_variable = { which = count value = 1 } 
#             change_variable = { which = count1 which = PREV } 
#             change_variable = { which = count2 which = PREV } 
#             change_variable = { which = count3 which = PREV } 
#         } 
#     } 
#     set_variable = { which = count4 which = count1 } 
#     change_variable = { which = count4 which = count2 } 
#     change_variable = { which = count4 which = count3 } 
#     log = "---" 
#     log = "West Castanor - Number of provinces: [This.count.GetValue]  Adm dev: [This.count1.GetValue]  Dip dev: [This.count2.GetValue]  Mil dev: [This.count3.GetValue]  Total: [This.count4.GetValue]" 
# } 
# ROOT = { 
#     set_variable = { which = count value = 0 } 
#     set_variable = { which = count1 value = 0 } 
#     set_variable = { which = count2 value = 0 } 
#     set_variable = { which = count3 value = 0 } 
#     every_owned_province = { 
#         limit = { 
#             region = south_castanor_region 
#         }	 
#         export_to_variable = { which = count1 value = base_tax } 
#         export_to_variable = { which = count2 value = base_production } 
#         export_to_variable = { which = count3 value = base_manpower } 
#         PREV = { 
#             change_variable = { which = count value = 1 } 
#             change_variable = { which = count1 which = PREV } 
#             change_variable = { which = count2 which = PREV } 
#             change_variable = { which = count3 which = PREV } 
#         } 
#     } 
#     set_variable = { which = count4 which = count1 } 
#     change_variable = { which = count4 which = count2 } 
#     change_variable = { which = count4 which = count3 } 
#     log = "---" 
#     log = "South Castanor - Number of provinces: [This.count.GetValue]  Adm dev: [This.count1.GetValue]  Dip dev: [This.count2.GetValue]  Mil dev: [This.count3.GetValue]  Total: [This.count4.GetValue]" 
# } 
 
# complete_mission = high_income_mission 
# complete_mission = build_temples 
# complete_mission = build_treasury 
# complete_mission = build_manufactories 
# complete_mission = imperial_ambition_mission 
# complete_mission = gen_eur_trade_node 
# complete_mission = gen_eur_defender_faith 
 
# every_province = { 
# 	limit = { 
# 		owner = { 
# 			ai = yes 
# 		} 
# 	} 
# 	destroy_province = yes 
# } 
 
 
# add_estate_influence_modifier = { 
#     estate = estate_castonath_patricians 
# 	desc = EST_VAL_FURTHERED_SPOUSES_FAMILY_NOBLES 
#     influence = 100 
#     duration = 7300 
# } 
 


# set_country_flag = castanor_culture_missions_unlocked
# set_country_flag = castanor_strong_lake_fed 
# set_country_flag = castanorian_legion_option_1_unlocked
# set_country_flag = castanorian_legion_option_2_unlocked
# set_country_flag = castanorian_legion_option_3_unlocked
# set_country_flag = castanorian_legion_option_4_unlocked
# set_country_flag = castanorian_legion_option_5_unlocked
# set_country_flag = castanorian_legion_option_6_unlocked
# set_country_flag = castanorian_legion_option_7_unlocked
# set_country_flag = castanorian_legion_option_8_unlocked

# set_country_flag = patrician_castanor

# set_country_flag = castanor_rebuild_dragon_road_unlocked
# set_country_flag = eord_seasonal_completed 
# set_country_flag = eordand_deepwoods_conquer

# change_variable = {
# 	which = castanLegitimacy
# 	value = 3
# }

# west_overmarch_area = {
# 	cede_province = A01
# 	add_core = ROOT
# }
# ourdia_region = {
# 	cede_province = ROOT
# 	add_core = ROOT
# }
# south_overmarch_area = {
# 	cede_province = A01
# 	add_core = ROOT
# }
# change_government = monarchy
# add_government_reform = castanor_succession_war_reward_original_castan
# add_government_reform = original_castanor_trials_reform

# change_religion = spring_court
# change_religion = summer_court
# change_religion = winter_court
# change_religion = autumn_court


# release_all_subjects = yes
# create_alliance = R40

# reverse_add_opinion = {
#     who = R40
#     modifier = nsc_paid_reparations
# }

# every_owned_province = {
# 	limit = { NOT = { is_capital = yes } }
# 	cede_province = ---
# }

# change_government = monarchy 
 
 
# add_country_modifier = { 
# 	name = test_build_time 
# 	duration = -1 
# } 
 
 
# # set_country_flag = castanor_can_make_dominions 
 
# every_owned_province = { 
# 	change_religion = ROOT 
# 	change_culture = ROOT 
# 	add_core = ROOT 
# } 
 
# 840 = { 
# 	remove_province_modifier = ruined_castanorian_citadel 
# 	add_province_modifier = { 
# 		name = castanorian_citadel 
# 		duration = -1 
# 	} 
# } 
 
# if = { 
# 	limit = { 
# 		variable_arithmetic_trigger = { 
# 			export_to_variable = { which = transportcount value = 0 } 
# 			divenhal_sea_region = { 
# 				type = all 
# 				if = { 
# 					limit = { transports_in_province = B32  } 
# 					variable_arithmetic_trigger = { 
# 						export_to_variable = { which = temp value = trigger_value:transports_in_province } 
# 						change_variable = { which = transportcount which = temp } 
# 					} 
# 				} 
# 			} 
# 			check_variable = { which = transportcount value = 53 } 
# 		} 
# 	} 
# 	add_treasury = 1 
# } 
 
# set_variable = { which = transportcount value = 5 } 
# divenhal_sea_region = { 
# 	type = all 
# 	limit = { transports_in_province = B32 } 
# 	export_to_variable = { which = temp value = trigger_value:transports_in_province } 
# 	PREV = { 
# 		change_variable = { which = transportcount which = PREV } 
# 	} 
# } 
# log = "Total Transports: [This.transportcount.GetValue]" 


# add_accepted_culture = silver_dwarf 
# add_accepted_culture = ruby_dwarf 
 
# if = { 
# 	limit = { 
# 		num_accepted_cultures = 5 
# 	} 
# 	add_treasury = 1 
# } 
 
# 3 = { 
# 	add_latent_trade_goods = coal 
# 	owner = { add_treasury = 1 } 
# } 
 
# set_country_flag = castonath_patricians_reinstated 
 
# every_province = { 
# 	remove_province_modifier = castanor_legionway 
# 	if = { 
# 		limit = { province_group = legionway_dragon_coast_to_redfort_citadel } 
# 		add_province_modifier = { 
# 			name = castanor_legionway 
# 			duration = -1 
# 		} 
# 	} 
# } 
 
# every_province = { 
# 	remove_province_modifier = castanor_legionway 
# 	if = { 
# 		limit = { 
# 			province_distance = { 
# 				who = 840 
# 				distance = 250 
# 			} 
# 			NOT  = { 
# 				province_distance = { 
# 					who = 840 
# 					distance = 350 
# 				} 
# 			} 
# 		} 
# 		add_province_modifier = { 
# 			name = castanor_legionway 
# 			duration = -1 
# 		} 
# 	} 
# } 
# change_tag = F38

# 1371 = {
#     if = {
#         limit = { province_group = trade_node_provinces }
#         Y20 = { add_treasury = 1 }
#     }
#     Y20 = { add_treasury = 1 }
# }
set_country_flag = feiten_new_naval_doctrine
set_country_flag = feiten_shuimu_engineering_workshop_unlocked

swap_non_generic_missions = yes



log = "yrdy [Y20.current_stated_provinces.GetValue]"

1371 = {
	add_province_triggered_modifier = feiten_daily_pulse
}

log = "[1371.feiten_current_stated_provinces.GetName]: [1371.feiten_current_stated_provinces.GetValue]"
log = "[1371.feiten_shuimu_bonus_cap.GetName]: [1371.feiten_shuimu_bonus_cap.GetValue]"
log = "[1371.feiten_province_balance.GetName]: [1371.feiten_province_balance.GetValue]"

log = "[Y09.TyrantValue.GetValue]"

set_country_flag = supporting_artificers

set_variable = {
	which = tradeValue
	value = 5
}
1252 = {
	export_to_variable = { which = temp value = trigger_value:trade_node_value } 
	log = "Trade Value in [1252.GetName]: [1252.temp.GetValue]"
}
country_event = { id = estate_organization.1 }
# if = {
# 	limit = {
# 		OR = {
# 			AND = {
# 				tag = Z66
# 				was_tag = Y09
# 			}
# 			tag = Y09
# 		}
# 	}
# 	if = {
# 		limit = {
# 			AND = {
# 				NOT = { check_variable = { which = TyrantValue value = -2 } }
# 				NOT = { has_country_modifier = bianfang_tyrant_modifier_ruthless }
# 			}
# 		}
# 		add_treasury = 1
# 		country_event = { id = bianfang.8 }
# 	}
# 	else_if = {
# 		limit = {
# 			AND = {
# 				check_variable = { which = TyrantValue value = -2 }
# 				NOT = { check_variable = { which = TyrantValue value = 3 } }
# 				NOT = { has_country_modifier = bianfang_tyrant_modifier_pragmatic }
# 			}
# 		}
# 		add_treasury = 10
# 		country_event = { id = bianfang.9 }
# 	}
# 	else_if = {
# 		limit = {
# 			AND = {
# 				check_variable = { which = TyrantValue value = 3 }
# 				NOT = { has_country_modifier = bianfang_tyrant_modifier_benevolent }
# 			}
# 		}
# 		add_treasury = 100
# 		country_event = { id = bianfang.10 }
# 	}
# }

# capital_scope = {
# 	kill_units = {
# 		who = owner
# 		type = elven_30_elven_new_army
# 	}
# }

# capital_scope = {
# 	marine_infantry = ROOT
# }

# if = {
# 	limit = {
# 		capital_scope = {

# 			num_of_units_in_province = {
# 				who = ROOT
# 				type = marine_infantry
# 				amount = 1
# 			}
# 		}
# 	}
# 	add_treasury = 1
# }


4884 = {
	add_province_triggered_modifier = feiten_skyport_handler_mod
}

4879 = {
	set_province_flag = feiten_aerodrome
}
4362 = {
	add_province_triggered_modifier = feiten_skyport_handler_mod
}

151 = {
	add_province_triggered_modifier = feiten_skyport_handler_mod
}

export_to_variable = {
	which = feitenMercantilism
	value = trigger_value:mercantilism
}

log = "[Root.feitenMercantilism.GetValue]"
feiten_update_skypost_duty = yes
# log = "[Y20.feitenSkypostDutyEff.GetValue]".
feiten_update_skyport_balance = yes

log = "[Root.feitenSkyportBalance.GetValue]"